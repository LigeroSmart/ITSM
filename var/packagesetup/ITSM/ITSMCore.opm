<?xml version="1.0" encoding="utf-8" ?>
<otrs_package version="1.1">
    <Name>ITSMCore</Name>
    <Version>2.0.92</Version>
    <Vendor>OTRS AG</Vendor>
    <URL>http://otrs.org/</URL>
    <License>GNU AFFERO GENERAL PUBLIC LICENSE Version 3, November 2007</License>
    <ChangeLog Date="2010-08-17 07:29:20" Version="2.0.92">Build for OTRS::ITSM 2.1.0 beta2.</ChangeLog>
    <ChangeLog Date="2010-07-27 02:41:44" Version="2.0.91">Build for OTRS::ITSM 2.1.0 beta1.</ChangeLog>
    <ChangeLog Date="2010-07-04 12:14:20" Version="2.0.71">Build for OTRS::ITSM 2.1.0 alpha1.</ChangeLog>
    <Description Lang="en">The OTRS::ITSM Core package.</Description>
    <Description Lang="de">Das OTRS::ITSM Core Paket.</Description>
    <Framework>2.4.x</Framework>
    <IntroInstall Lang="en" Title="Install Information" Type="pre">

        &lt;br&gt;
        &lt;b&gt;WELCOME&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        You are about to install the OTRS package ITSMCore.&lt;br&gt;
        &lt;br&gt;
        &lt;br&gt;
        &lt;b&gt;REQUIRED OTRS PACKAGES&lt;/b&gt;
        &lt;ul&gt;
        &lt;li&gt;GeneralCatalog 2.0.92&lt;/li&gt;
        &lt;/ul&gt;
        &lt;br&gt;
        &lt;b&gt;ATTENTION&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        Make sure your database accepts packages over 5 MB in size. A MySQL database for example accepts packages up to 1 MB by default. In this case, the value for max_allowed_packet must be increased. The recommended maximum size accepted is 20 MB.&lt;br&gt;
        &lt;br&gt;
        &lt;br&gt;
        ((enjoy))&lt;br&gt;
        &lt;br&gt;

    </IntroInstall>
    <IntroInstall Lang="de" Title="Installation Information" Type="pre">

        &lt;br&gt;
        &lt;b&gt;WILLKOMMEN&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        Sie sind im Begriff das OTRS-Paket ITSMCore zu installieren.&lt;br&gt;
        &lt;br&gt;
        &lt;br&gt;
        &lt;b&gt;BENÖTIGTE OTRS-PAKETE&lt;/b&gt;
        &lt;ul&gt;
        &lt;li&gt;GeneralCatalog 2.0.92&lt;/li&gt;
        &lt;/ul&gt;
        &lt;br&gt;
        &lt;b&gt;ACHTUNG&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        Vergewissern Sie sich, dass ihre Datenbank Pakete mit einer Größe von mehr als 5 MB akzeptiert. Eine MySQL Datenbank akzeptiert beispielsweise standardmäßig Pakete mit einer Größe von maximal 1 MB. In diesem Fall muss der Wert für max_allowed_packet erhöht werden. Empfohlen werden 20 MB.&lt;br&gt;
        &lt;br&gt;
        &lt;br&gt;
        ((enjoy))&lt;br&gt;
        &lt;br&gt;

    </IntroInstall>
    <IntroInstall Lang="en" Title="Installation Information" Type="post">

        &lt;br&gt;
        &lt;b&gt;NOTICE&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        In order to grant users access to the service menu, you need to add them as member to the group 'itsm-service'.
        &lt;br&gt;
        &lt;br&gt;
        The menu items that were added by this package will be visible after you log-in to the system again.
        &lt;br&gt;
        &lt;br&gt;
        ((enjoy))&lt;br&gt;
        &lt;br&gt;

    </IntroInstall>
    <IntroInstall Lang="de" Title="Installation Information" Type="post">

        &lt;br&gt;
        &lt;b&gt;HINWEIS&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        Um Benutzern Zugriff auf das Service-Menü zu gewähren, müssen diese Mitglied der neuen Gruppe 'itsm-service' sein.
        &lt;br&gt;
        &lt;br&gt;
        Die von diesem Paket hinzugefügten Menü-Punkte sind erst nach einem erneuten Anmeldevorgang im System sichtbar.
        &lt;br&gt;
        &lt;br&gt;
        ((enjoy))&lt;br&gt;
        &lt;br&gt;

    </IntroInstall>
    <IntroUninstall Lang="en" Title="Uninstallation Information" Type="pre">

        &lt;br&gt;
        &lt;b&gt;ATTENTION&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        If you uninstall this package, all database tables that were created during installation will be deleted.
        All data from these tables will be irrevocably lost!
        &lt;br&gt;
        &lt;br&gt;
        The group 'itsm-service' that was created during package installation will be deactivated.
        You can activate this group again in the admin area.
        &lt;br&gt;
        &lt;br&gt;
        ((enjoy))&lt;br&gt;
        &lt;br&gt;

    </IntroUninstall>
    <IntroUninstall Lang="de" Title="Uninstallation Information" Type="pre">

        &lt;br&gt;
        &lt;b&gt;ACHTUNG&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        Bei der Deinstallation werden die von diesem Paket angelegten Datenbank-Tabellen gelöscht.
        Alle darin enthaltenen Daten gehen unwiderruflich verloren!
        &lt;br&gt;
        &lt;br&gt;
        Die von diesem Paket angelegte Gruppe 'itsm-service' wird deaktiviert.
        Sie kann jederzeit im Admin-Bereich wieder aktiviert werden.
        &lt;br&gt;
        &lt;br&gt;
        ((enjoy))&lt;br&gt;
        &lt;br&gt;

    </IntroUninstall>
    <IntroUpgrade Lang="en" Title="Upgrade Information" Type="pre">

        &lt;br&gt;
        &lt;b&gt;WELCOME&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        You are about to upgrade the OTRS package ITSMCore.&lt;br&gt;
        &lt;br&gt;
        &lt;br&gt;
        &lt;b&gt;REQUIRED OTRS PACKAGES&lt;/b&gt;
        &lt;ul&gt;
        &lt;li&gt;GeneralCatalog 2.0.92&lt;/li&gt;
        &lt;/ul&gt;
        &lt;br&gt;
        &lt;/b&gt;ATTENTION&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        Make sure your database accepts packages over 5 MB in size. A MySQL database for example accepts packages up to 1 MB by default. In this case, the value for max_allowed_packet must be increased. The recommended maximum size accepted is 20 MB.&lt;br&gt;
        &lt;br&gt;
        &lt;br&gt;
        ((enjoy))&lt;br&gt;
        &lt;br&gt;

    </IntroUpgrade>
    <IntroUpgrade Lang="de" Title="Upgrade Information" Type="pre">

        &lt;br&gt;
        &lt;b&gt;WILLKOMMEN&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        Sie sind im Begriff das OTRS-Paket ITSMCore zu aktualisieren.&lt;br&gt;
        &lt;br&gt;
        &lt;br&gt;
        &lt;b&gt;BENÖTIGTE OTRS-PAKETE&lt;/b&gt;
        &lt;ul&gt;
        &lt;li&gt;GeneralCatalog 2.0.92&lt;/li&gt;
        &lt;/ul&gt;
        &lt;br&gt;
        &lt;b&gt;ACHTUNG&lt;/b&gt;
        &lt;br&gt;
        &lt;br&gt;
        Vergewissern Sie sich, dass ihre Datenbank Pakete mit einer Größe von mehr als 5 MB akzeptiert. Eine MySQL Datenbank akzeptiert beispielsweise standardmäßig Pakete mit einer Größe von maximal 1 MB. In diesem Fall muss der Wert für max_allowed_packet erhöht werden. Empfohlen werden 20 MB.&lt;br&gt;
        &lt;br&gt;
        &lt;br&gt;
        ((enjoy))&lt;br&gt;
        &lt;br&gt;

    </IntroUpgrade>
    <PackageRequired Version="2.0.92">GeneralCatalog</PackageRequired>
    <CodeInstall Type="post">

        # define function name
        my $FunctionName = 'CodeInstall';

        # create the package name
        my $CodeModule = 'var::packagesetup::' . $Param{Structure}-&gt;{Name}-&gt;{Content};

        # load the module
        if ( $Self-&gt;{MainObject}-&gt;Require($CodeModule) ) {

            # create new instance
            my $CodeObject = $CodeModule-&gt;new( %{$Self} );

            if ($CodeObject) {

                # start methode
                if ( !$CodeObject-&gt;$FunctionName(%{$Self}) ) {
                    $Self-&gt;{LogObject}-&gt;Log(
                        Priority =&gt; 'error',
                        Message  =&gt; &quot;Could not call method $FunctionName() on $CodeModule.pm.&quot;
                    );
                }
            }

            # error handling
            else {
                $Self-&gt;{LogObject}-&gt;Log(
                    Priority =&gt; 'error',
                    Message  =&gt; &quot;Could not call method new() on $CodeModule.pm.&quot;
                );
            }
        }

    </CodeInstall>
    <CodeUpgrade Type="post">

        # define function name
        my $FunctionName = 'CodeUpgrade';

        # create the package name
        my $CodeModule = 'var::packagesetup::' . $Param{Structure}-&gt;{Name}-&gt;{Content};

        # The code module has just recently been copied to it's location in the file system.
        # In a persistent Perl environment an old version of the module might still be loaded,
        # as watchdogs like Apache2::Reload haven't had a chance to reload it.
        # So we need to make sure that the new version is being loaded.
        # Kernel::System::Main::Require() checks the relative file path, so we need to remove that from %INC.
        # This is only needed in persistent Perl environment, but does no harm in a CGI environment.
        my $CodeModulePath = $CodeModule;
        $CodeModulePath =~ s/::/\//g;
        $CodeModulePath .= '.pm';
        delete $INC{$CodeModulePath};

        # load the module
        if ( $Self-&gt;{MainObject}-&gt;Require($CodeModule) ) {

            # create new instance
            my $CodeObject = $CodeModule-&gt;new( %{$Self} );

            if ($CodeObject) {

                # start methode
                if ( !$CodeObject-&gt;$FunctionName(%{$Self}) ) {
                    $Self-&gt;{LogObject}-&gt;Log(
                        Priority =&gt; 'error',
                        Message  =&gt; &quot;Could not call method $FunctionName() on $CodeModule.pm.&quot;
                    );
                }
            }

            # error handling
            else {
                $Self-&gt;{LogObject}-&gt;Log(
                    Priority =&gt; 'error',
                    Message  =&gt; &quot;Could not call method new() on $CodeModule.pm.&quot;
                );
            }
        }

    </CodeUpgrade>
    <CodeUninstall Type="pre">

        # define function name
        my $FunctionName = 'CodeUninstall';

        # create the package name
        my $CodeModule = 'var::packagesetup::' . $Param{Structure}-&gt;{Name}-&gt;{Content};

        # load the module
        if ( $Self-&gt;{MainObject}-&gt;Require($CodeModule) ) {

            # create new instance
            my $CodeObject = $CodeModule-&gt;new( %{$Self} );

            if ($CodeObject) {

                # start methode
                if ( !$CodeObject-&gt;$FunctionName(%{$Self}) ) {
                    $Self-&gt;{LogObject}-&gt;Log(
                        Priority =&gt; 'error',
                        Message  =&gt; &quot;Could not call method $FunctionName() on $CodeModule.pm.&quot;
                    );
                }
            }

            # error handling
            else {
                $Self-&gt;{LogObject}-&gt;Log(
                    Priority =&gt; 'error',
                    Message  =&gt; &quot;Could not call method new() on $CodeModule.pm.&quot;
                );
            }
        }

    </CodeUninstall>
    <CodeReinstall Type="post">

        # define function name
        my $FunctionName = 'CodeReinstall';

        # create the package name
        my $CodeModule = 'var::packagesetup::' . $Param{Structure}-&gt;{Name}-&gt;{Content};

        # load the module
        if ( $Self-&gt;{MainObject}-&gt;Require($CodeModule) ) {

            # create new instance
            my $CodeObject = $CodeModule-&gt;new( %{$Self} );

            if ($CodeObject) {

                # start methode
                if ( !$CodeObject-&gt;$FunctionName(%{$Self}) ) {
                    $Self-&gt;{LogObject}-&gt;Log(
                        Priority =&gt; 'error',
                        Message  =&gt; &quot;Could not call method $FunctionName() on $CodeModule.pm.&quot;
                    );
                }
            }

            # error handling
            else {
                $Self-&gt;{LogObject}-&gt;Log(
                    Priority =&gt; 'error',
                    Message  =&gt; &quot;Could not call method new() on $CodeModule.pm.&quot;
                );
            }
        }

    </CodeReinstall>
    <BuildDate>2010-08-17 07:29:20</BuildDate>
    <BuildHost>opms.otrs.com</BuildHost>
    <Filelist>
        <File Location="doc/itsm-core-database.png" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Config/Files/FrameworkITSMCore.xml" Permission="644" Encode="Base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSIgPz4KPG90cnNfY29uZmlnIHZlcnNpb249IjEuMCIgaW5pdD0iRnJhbWV3b3JrIj4KICAgIDxDVlM+JElkOiBGcmFtZXdvcmtJVFNNQ29yZS54bWwsdiAxLjQ3LjIuMSAyMDEwLzA4LzE3IDAwOjQ5OjAyIHViIEV4cCAkPC9DVlM+CiAgICA8Q1ZTPiRPbGRJZDogRnJhbWV3b3JrLnhtbCx2IDEuMjQyLjIuNiAyMDEwLzAzLzA5IDA5OjM3OjQ2IGR6IEV4cCAkPC9DVlM+CiAgICA8Q29uZmlnSXRlbSBOYW1lPSJQcm9kdWN0TmFtZSIgUmVxdWlyZWQ9IjEiIFZhbGlkPSIxIj4KICAgICAgICA8RGVzY3JpcHRpb24gTGFuZz0iZW4iPlRoaXMgc2V0dGluZyBjb250cm9scyB0aGUgbmFtZSBvZiB0aGUgYXBwbGljYXRpb24gYXMgaXMgc2hvd24gaW4gdGhlIHdlYiBpbnRlcmZhY2UgYXMgd2VsbCBhcyB0aGUgdGFicyBhbmQgdGl0bGUgYmFyIG9mIHlvdXIgd2ViIGJyb3dzZXIuPC9EZXNjcmlwdGlvbj4KICAgICAgICA8RGVzY3JpcHRpb24gTGFuZz0iZGUiPkltIFdlYkZyb250ZW5kIGFuZ2V6ZWlndGVyIE5hbWUgZGVyIFNvZnR3YXJlLjwvRGVzY3JpcHRpb24+CiAgICAgICAgPEdyb3VwPkZyYW1ld29yazwvR3JvdXA+CiAgICAgICAgPFN1Ykdyb3VwPkNvcmU8L1N1Ykdyb3VwPgogICAgICAgIDxTZXR0aW5nPgogICAgICAgICAgICA8U3RyaW5nIFJlZ2V4PSIiPk9UUlM6OklUU00gMi4xIEJldGEgMjwvU3RyaW5nPgogICAgICAgIDwvU2V0dGluZz4KICAgIDwvQ29uZmlnSXRlbT4KICAgIDxDb25maWdJdGVtIE5hbWU9IkxpbmtPYmplY3Q6OlZpZXdNb2RlIiBSZXF1aXJlZD0iMSIgVmFsaWQ9IjEiPgogICAgICAgIDxEZXNjcmlwdGlvbiBMYW5nPSJlbiI+RGV0ZXJtaW5lcyB0aGUgd2F5IHRoZSBsaW5rZWQgb2JqZWN0cyBhcmUgZGlzcGxheWVkIGluIGVhY2ggem9vbSBtYXNrLjwvRGVzY3JpcHRpb24+CiAgICAgICAgPERlc2NyaXB0aW9uIExhbmc9ImRlIj5MZWd0IGRpZSBBbnNpY2h0IGRlciB2ZXJsaW5rdGVuIE9iamVrdGUgaW4gZGVuIGpld2VpbGlnZW4gWm9vbS1NYXNrZW4gZmVzdC48L0Rlc2NyaXB0aW9uPgogICAgICAgIDxHcm91cD5GcmFtZXdvcms8L0dyb3VwPgogICAgICAgIDxTdWJHcm91cD5Db3JlOjpMaW5rT2JqZWN0PC9TdWJHcm91cD4KICAgICAgICA8U2V0dGluZz4KICAgICAgICAgICAgPE9wdGlvbiBTZWxlY3RlZElEPSJDb21wbGV4Ij4KICAgICAgICAgICAgICAgIDxJdGVtIEtleT0iU2ltcGxlIj5TaW1wbGU8L0l0ZW0+CiAgICAgICAgICAgICAgICA8SXRlbSBLZXk9IkNvbXBsZXgiPkNvbXBsZXg8L0l0ZW0+CiAgICAgICAgICAgIDwvT3B0aW9uPgogICAgICAgIDwvU2V0dGluZz4KICAgIDwvQ29uZmlnSXRlbT4KICAgIDxDb25maWdJdGVtIE5hbWU9IlBhY2thZ2U6OlJlcG9zaXRvcnlMaXN0IiBSZXF1aXJlZD0iMCIgVmFsaWQ9IjEiPgogICAgICAgIDxEZXNjcmlwdGlvbiBMYW5nPSJlbiI+TGlzdCBvZiBvbmxpbmUgcmVwb3NpdG9yaWVzIChmb3IgZXhhbXBsZSB5b3UgYWxzbyBjYW4gdXNlIG90aGVyIGluc3RhbGxhdGlvbnMgYXMgcmVwb3NpdG9yaXkgYnkgdXNpbmcgS2V5PSJodHRwOi8vZXhhbXBsZS5jb20vb3Rycy9wdWJsaWMucGw/QWN0aW9uPVB1YmxpY1JlcG9zaXRvcnkmYW1wO0ZpbGU9IiBhbmQgQ29udGVudD0iU29tZSBOYW1lIikuPC9EZXNjcmlwdGlvbj4KICAgICAgICA8RGVzY3JpcHRpb24gTGFuZz0iZGUiPkxpc3RlIGRlciB6dXIgVmVyZvxndW5nIHN0ZWhlbmRlbiBPbmxpbmUtUXVlbGxlbiAoZXMga/ZubmVuIHouIEIuIGF1Y2ggYW5kZXJlIEluc3RhbGxhdGlvbmVuIGFscyBPbmxpbmUtUXVlbGxlbiB2ZXJ3ZW5kZXQgd2VyZGVuIG1pdCBkZXIgVmVyd2VuZHVuZyB2b24gS2V5PSJodHRwOi8vZXhhbXBsZS5jb20vb3Rycy9wdWJsaWMucGw/QWN0aW9uPVB1YmxpY1JlcG9zaXRvcnkmYW1wO0ZpbGU9IiBhbmQgQ29udGVudD0iRWluIE5hbWUiKS48L0Rlc2NyaXB0aW9uPgogICAgICAgIDxHcm91cD5GcmFtZXdvcms8L0dyb3VwPgogICAgICAgIDxTdWJHcm91cD5Db3JlOjpQYWNrYWdlPC9TdWJHcm91cD4KICAgICAgICA8U2V0dGluZz4KICAgICAgICAgICAgPEhhc2g+CiAgICAgICAgICAgICAgICA8SXRlbSBLZXk9Imh0dHA6Ly9mdHAub3Rycy5vcmcvcHViL290cnMvaXRzbS9wYWNrYWdlczIxLyI+Wy0tT1RSUzo6SVRTTSAyLjEgTWFzdGVyLS1dIGh0dHA6Ly9mdHAub3Rycy5vcmcvPC9JdGVtPgogICAgICAgICAgICA8L0hhc2g+CiAgICAgICAgPC9TZXR0aW5nPgogICAgPC9Db25maWdJdGVtPgo8L290cnNfY29uZmlnPgo=</File>
        <File Location="Kernel/Config/Files/ITSMCore.xml" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Config/Files/ITSMService.xml" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Config/Files/TicketITSMService.xml" Permission="644" Encode="Base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSIgPz4KPG90cnNfY29uZmlnIHZlcnNpb249IjEuMCIgaW5pdD0iQ29uZmlnIj4KICAgIDxDVlM+JElkOiBUaWNrZXRJVFNNU2VydmljZS54bWwsdiAxLjEwIDIwMTAvMDMvMDEgMTM6MDE6MTkgdWIgRXhwICQ8L0NWUz4KICAgIDxDVlM+JE9sZElkOiBUaWNrZXQueG1sLHYgMS4yNzAuMi45IDIwMTAvMDIvMjYgMTE6NTE6MTYgbWFydGluIEV4cCAkPC9DVlM+CiAgICA8Q29uZmlnSXRlbSBOYW1lPSJUaWNrZXQ6OlNlcnZpY2UiIFJlcXVpcmVkPSIxIiBWYWxpZD0iMSI+CiAgICAgICAgPERlc2NyaXB0aW9uIExhbmc9ImVuIj5JZiB0aWNrZXQgc2VydmljZS9TTEEgZmVhdHVyZSBpcyBlbmFibGVkLCB5b3UgY2FuIGRlZmluZSB0aWNrZXQgc2VydmljZXMgYW5kIFNMQXMgZm9yIHRpY2tldHMgKGUuIGcuIGVtYWlsLCBkZXNrdG9wLCBuZXR3b3JrLCAuLi4pLjwvRGVzY3JpcHRpb24+CiAgICAgICAgPERlc2NyaXB0aW9uIExhbmc9ImRlIj5XZW5uIGRhcyBUaWNrZXQtU2VydmljZS9TTEEgRmVhdHVyZSBha3RpdmllcnQgaXN0LCBr9m5uZW4gVGlja2V0IFNlcnZpY2VzIHVuZCBTTEFzIHBybyBUaWNrZXQgZ2VzZXR6dCB3ZXJkZW4gKHouIEIuIEVtYWlsLCBBcmJlaXRzcGxhdHosIE5ldHp3ZXJrLCAuLi4pLjwvRGVzY3JpcHRpb24+CiAgICAgICAgPEdyb3VwPlRpY2tldDwvR3JvdXA+CiAgICAgICAgPFN1Ykdyb3VwPkNvcmU6OlRpY2tldDwvU3ViR3JvdXA+CiAgICAgICAgPFNldHRpbmc+CiAgICAgICAgICAgIDxPcHRpb24gU2VsZWN0ZWRJRD0iMSI+CiAgICAgICAgICAgICAgICA8SXRlbSBLZXk9IjAiPk5vPC9JdGVtPgogICAgICAgICAgICAgICAgPEl0ZW0gS2V5PSIxIj5ZZXM8L0l0ZW0+CiAgICAgICAgICAgIDwvT3B0aW9uPgogICAgICAgIDwvU2V0dGluZz4KICAgIDwvQ29uZmlnSXRlbT4KPC9vdHJzX2NvbmZpZz4K</File>
        <File Location="Kernel/Language/bg_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9iZ19JVFNNQ29yZS5wbSAtIHRoZSBidWxnYXJpYW4gdHJhbnNsYXRpb24gb2YgSVRTTUNvcmUKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMCBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgQ29weXJpZ2h0IChDKSAyMDA3LTIwMDggTWlsZW4gS291dGV2CiMgLS0KIyAkSWQ6IGJnX0lUU01Db3JlLnBtLHYgMS4xNSAyMDEwLzA2LzAxIDE5OjI1OjIyIG1iIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TGFuZ3VhZ2U6OmJnX0lUU01Db3JlOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKdXNlIHZhcnMgcXcoJFZFUlNJT04pOwokVkVSU0lPTiA9IHF3KCRSZXZpc2lvbjogMS4xNSAkKSBbMV07CgpzdWIgRGF0YSB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgIG15ICRMYW5nID0gJFNlbGYtPntUcmFuc2xhdGlvbn07CgogICAgcmV0dXJuIGlmIHJlZiAkTGFuZyBuZSAnSEFTSCc7CgogICAgJExhbmctPnsnQ3JpdGljYWxpdHknfSAgICAgICAgICAgICAgICAgICAgICAgICA9ICfK8Ojy6Pft7vHyJzsKICAgICRMYW5nLT57J0ltcGFjdCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnwuvo/+3o5Sc7CiAgICAkTGFuZy0+eydDcml0aWNhbGl0eSA8LT4gSW1wYWN0IDwtPiBQcmlvcml0eSd9ID0gJ8rw6PLo9+3u8fI8LT7C6+j/7ejlPC0+z/Do7vLo8uXyJzsKICAgICRMYW5nLT57J2FsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgICAgICAgICAgPSAn7u/w5eTl6+XtJzsKICAgICRMYW5nLT57J1ByaW9yaXR5IGFsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J1JlbGV2YW50IHRvJ30gICAgICAgICAgICAgICAgICAgICAgICAgPSAn0fru8uLl8uXtIPEnOwogICAgJExhbmctPnsnSW5jbHVkZXMnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfC6uv+9+Xt6Cc7CiAgICAkTGFuZy0+eydQYXJ0IG9mJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ9fg8fIg7vInOwogICAgJExhbmctPnsnRGVwZW5kcyBvbid9ICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfH4OLo8egg7vInOwogICAgJExhbmctPnsnUmVxdWlyZWQgZm9yJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICfN5e7h9e7k6Owg5+AnOwogICAgJExhbmctPnsnQ29ubmVjdGVkIHRvJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICfR4vrw5+DtIPEnOwogICAgJExhbmctPnsnQWx0ZXJuYXRpdmUgdG8nfSAgICAgICAgICAgICAgICAgICAgICA9ICfA6/Ll8O3g8uji5e0g7eAnOwogICAgJExhbmctPnsnSW5jaWRlbnQgU3RhdGUnfSAgICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnQ3VycmVudCBJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnQ3VycmVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnU2VydmljZS1BcmVhJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnTWluaW11bSBUaW1lIEJldHdlZW4gSW5jaWRlbnRzJ30gICAgICA9ICfM6O3o7ODr7e4g4vDl7OUg7OXm5PMg6O326OTl7fLo8uUnOwogICAgJExhbmctPnsnU2VydmljZSBPdmVydmlldyd9ICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnU0xBIE92ZXJ2aWV3J30gICAgICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnQXNzb2NpYXRlZCBTZXJ2aWNlcyd9ICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnQXNzb2NpYXRlZCBTTEFzJ30gICAgICAgICAgICAgICAgICAgICA9ICfR4vrw5+Dt6CBTTEEg5O7j7uLu8OgnOwogICAgJExhbmctPnsnQmFjayBFbmQnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfO8e3u4u3gIPHo8fLl7OAvQmFja0VuZCc7CiAgICAkTGFuZy0+eydEZW1vbnN0cmF0aW9uJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ8Tl7O7t8fLw4Pbo/yc7CiAgICAkTGFuZy0+eydFbmQgVXNlciBTZXJ2aWNlJ30gICAgICAgICAgICAgICAgICAgID0gJ9Px6/Pj6CDn4CDq8ODp7egg7+7y8OXh6PLl6+gnOwogICAgJExhbmctPnsnRnJvbnQgRW5kJ30gICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfK6+jl7fLx6uAg8ejx8uXs4C9Gcm9udEVuZCc7CiAgICAkTGFuZy0+eydJVCBNYW5hZ2VtZW50J30gICAgICAgICAgICAgICAgICAgICAgID0gJ9Pv8ODi6+Xt6OUg7eAgyNInOwogICAgJExhbmctPnsnSVQgT3BlcmF0aW9uYWwnfSAgICAgICAgICAgICAgICAgICAgICA9ICfI0iDO7+Xw4Pbo6Cc7CiAgICAkTGFuZy0+eydPdGhlcid9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ8Tw8+PoJzsKICAgICRMYW5nLT57J1Byb2plY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnz/Du5eryJzsKICAgICRMYW5nLT57J1JlcG9ydGluZyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnzvL35fLt7vHyJzsKICAgICRMYW5nLT57J1RyYWluaW5nJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnzuHz9+Xt6OUnOwogICAgJExhbmctPnsnVW5kZXJwaW5uaW5nIENvbnRyYWN0J30gICAgICAgICAgICAgICA9ICfO8e3u4uXtIOTu4+7i7vAnOwogICAgJExhbmctPnsnQXZhaWxhYmlsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICA9ICfE7vHy+u/t7vHyJzsKICAgICRMYW5nLT57J0Vycm9ycyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnw/Dl+OroJzsKICAgICRMYW5nLT57J090aGVyJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnxPDz4+gnOwogICAgJExhbmctPnsnUmVjb3ZlcnkgVGltZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICfC8OXs5SDn4CDi+ufx8uDt7uL/4uDt5Sc7CiAgICAkTGFuZy0+eydSZXNvbHV0aW9uIFJhdGUnfSAgICAgICAgICAgICAgICAgICAgID0gJ8Lw5ezlIOfgIPDg5/Dl+ODi4O3lJzsKICAgICRMYW5nLT57J1Jlc3BvbnNlIFRpbWUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnwvDl7OUg5+Ag7vLj7uLu8Cc7CiAgICAkTGFuZy0+eydUcmFuc2FjdGlvbnMnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ9Hk5evq6C/y8ODt5+Dq9ujoJzsKCiAgICByZXR1cm4gMTsKfQoKMTsK</File>
        <File Location="Kernel/Language/ct_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9jdF9JVFNNQ29yZS5wbSAtIHRoZSBjYXRhbGFuIHRyYW5zbGF0aW9uIG9mIElUU01Db3JlCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTAgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIENvcHlyaWdodCAoQykgMjAwOCBTaXN0ZW1lcyBPVElDIChpYnNhbHV0KSAtIEFudG9uaW8gTGluZGUKIyAtLQojICRJZDogY3RfSVRTTUNvcmUucG0sdiAxLjUgMjAxMC8wNi8wMSAxOToyNToyMiBtYiBFeHAgJAojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjpjdF9JVFNNQ29yZTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnVzZSB2YXJzIHF3KCRWRVJTSU9OKTsKJFZFUlNJT04gPSBxdygkUmV2aXNpb246IDEuNSAkKSBbMV07CgpzdWIgRGF0YSB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgIG15ICRMYW5nID0gJFNlbGYtPntUcmFuc2xhdGlvbn07CgogICAgcmV0dXJuIGlmIHJlZiAkTGFuZyBuZSAnSEFTSCc7CgogICAgJExhbmctPnsnQ3JpdGljYWxpdHknfSAgICAgICAgICAgICAgICAgICAgICAgICA9ICdFc3RhdCBjcu10aWMnOwogICAgJExhbmctPnsnSW1wYWN0J30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdJbXBhY3RlJzsKICAgICRMYW5nLT57J0NyaXRpY2FsaXR5IDwtPiBJbXBhY3QgPC0+IFByaW9yaXR5J30gPSAnRXN0YXQgY3LtdGljIDwtPiBJbXBhY3RlIDwtPiBQcmlvcml0YXQnOwogICAgJExhbmctPnsnYWxsb2NhdGlvbid9ICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdhc3NpZ25hcic7CiAgICAkTGFuZy0+eydQcmlvcml0eSBhbGxvY2F0aW9uJ30gICAgICAgICAgICAgICAgID0gJyc7CiAgICAkTGFuZy0+eydSZWxldmFudCB0byd9ICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1JlbGV2YW50IHBlcic7CiAgICAkTGFuZy0+eydJbmNsdWRlcyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0luY2xvdSc7CiAgICAkTGFuZy0+eydQYXJ0IG9mJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1BhcnQgZGUnOwogICAgJExhbmctPnsnRGVwZW5kcyBvbid9ICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdEZXDobiBkZSc7CiAgICAkTGFuZy0+eydSZXF1aXJlZCBmb3InfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1JlcXVlcml0IHBlcic7CiAgICAkTGFuZy0+eydDb25uZWN0ZWQgdG8nfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ0Nvbm5lY3RhdCBhJzsKICAgICRMYW5nLT57J0FsdGVybmF0aXZlIHRvJ30gICAgICAgICAgICAgICAgICAgICAgPSAnQWx0ZXJuYXRpdmEgYSc7CiAgICAkTGFuZy0+eydJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgID0gJ0VzdGF0IGRlIGxcJ2luY2lkZW50JzsKICAgICRMYW5nLT57J0N1cnJlbnQgSW5jaWRlbnQgU3RhdGUnfSAgICAgICAgICAgICAgPSAnRXN0YXQgYWN0dWFsIGRlIGxcJ2luY2lkZW50JzsKICAgICRMYW5nLT57J0N1cnJlbnQgU3RhdGUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnRXN0YXQgYWN0dWFsJzsKICAgICRMYW5nLT57J1NlcnZpY2UtQXJlYSd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnU2VydmVpLcByZWEnOwogICAgJExhbmctPnsnTWluaW11bSBUaW1lIEJldHdlZW4gSW5jaWRlbnRzJ30gICAgICA9ICdUZW1wcyBt7W5pbSBlbnRyZSBpbmNpZGVudHMnOwogICAgJExhbmctPnsnU2VydmljZSBPdmVydmlldyd9ICAgICAgICAgICAgICAgICAgICA9ICdWaXNp8yBnZW5lcmFsIGRlbCBzZXJ2ZWknOwogICAgJExhbmctPnsnU0xBIE92ZXJ2aWV3J30gICAgICAgICAgICAgICAgICAgICAgICA9ICdWaXNp8yBnZW5lcmFsIGRlIFNMQSc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNlcnZpY2VzJ30gICAgICAgICAgICAgICAgID0gJ1NlcnZlaXMgYXNzb2NpYXRzJzsKICAgICRMYW5nLT57J0Fzc29jaWF0ZWQgU0xBcyd9ICAgICAgICAgICAgICAgICAgICAgPSAnU0xBcyBhc3NvY2lhdHMnOwogICAgJExhbmctPnsnQmFjayBFbmQnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdTZXJ2aWRvcic7CiAgICAkTGFuZy0+eydEZW1vbnN0cmF0aW9uJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ0RlbW9zdHJhY2nzJzsKICAgICRMYW5nLT57J0VuZCBVc2VyIFNlcnZpY2UnfSAgICAgICAgICAgICAgICAgICAgPSAnU2VydmVpIHVzdWFyaSBmaW5hbCc7CiAgICAkTGFuZy0+eydGcm9udCBFbmQnfSAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0NsaWVudCc7CiAgICAkTGFuZy0+eydJVCBNYW5hZ2VtZW50J30gICAgICAgICAgICAgICAgICAgICAgID0gJ0dlc3Rp8yBJVCc7CiAgICAkTGFuZy0+eydJVCBPcGVyYXRpb25hbCd9ICAgICAgICAgICAgICAgICAgICAgID0gJ09wZXJhY2nzIElUJzsKICAgICRMYW5nLT57J090aGVyJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnQWx0cmVzJzsKICAgICRMYW5nLT57J1Byb2plY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnUHJvamVjdGUnOwogICAgJExhbmctPnsnUmVwb3J0aW5nJ30gICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdJbmZvcm1lcyc7CiAgICAkTGFuZy0+eydUcmFpbmluZyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0Zvcm1hY2nzJzsKICAgICRMYW5nLT57J1VuZGVycGlubmluZyBDb250cmFjdCd9ICAgICAgICAgICAgICAgPSAnQ29udHJhY3RlIGRlIHN1cG9ydCc7CiAgICAkTGFuZy0+eydBdmFpbGFiaWxpdHknfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ0Rpc3BvbmliaWxpdGF0JzsKICAgICRMYW5nLT57J0Vycm9ycyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnRXJyb3JzJzsKICAgICRMYW5nLT57J090aGVyJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnQWx0cmVzJzsKICAgICRMYW5nLT57J1JlY292ZXJ5IFRpbWUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnVGVtcHMgZGUgcmVjdXBlcmFjafMnOwogICAgJExhbmctPnsnUmVzb2x1dGlvbiBSYXRlJ30gICAgICAgICAgICAgICAgICAgICA9ICdQZXJjZW50YXRnZSBkZSByZXNvbHVjafMnOwogICAgJExhbmctPnsnUmVzcG9uc2UgVGltZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICdUZW1wcyBkZSByZXNwb3N0YSc7CiAgICAkTGFuZy0+eydUcmFuc2FjdGlvbnMnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1RyYW5zYWNjaW9ucyc7CgogICAgcmV0dXJuIDE7Cn0KCjE7Cg==</File>
        <File Location="Kernel/Language/cz_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9jel9JVFNNQ29yZS5wbSAtIHRoZSBjemVjaCB0cmFuc2xhdGlvbiBvZiBJVFNNQ29yZQojIENvcHlyaWdodCAoQykgMjAwMS0yMDEwIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLm9yZy8KIyBDb3B5cmlnaHQgKEMpIDIwMDctMjAwOCBNaWxlbiBLb3V0ZXYKIyBDb3B5cmlnaHQgKEMpIDIwMTAgTzJCUy5jb20sIHMgci5vLiBKYWt1YiBIYW51cwojIC0tCiMgJElkOiBjel9JVFNNQ29yZS5wbSx2IDEuMTYgMjAxMC8wNi8wMSAxOToyNToyMiBtYiBFeHAgJAojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjpjel9JVFNNQ29yZTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnVzZSB2YXJzIHF3KCRWRVJTSU9OKTsKJFZFUlNJT04gPSBxdygkUmV2aXNpb246IDEuMTYgJCkgWzFdOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICBteSAkTGFuZyA9ICRTZWxmLT57VHJhbnNsYXRpb259OwoKICAgIHJldHVybiBpZiByZWYgJExhbmcgbmUgJ0hBU0gnOwoKICAgICRMYW5nLT57J0NyaXRpY2FsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICAgPSAnS3JpdGnobm9zdCc7CiAgICAkTGFuZy0+eydJbXBhY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1ZsaXYnOwogICAgJExhbmctPnsnQ3JpdGljYWxpdHkgPC0+IEltcGFjdCA8LT4gUHJpb3JpdHknfSA9ICdLcml0aehub3N0PC0+VmxpdjwtPlByaW9yaXRhJzsKICAgICRMYW5nLT57J1ByaW9yaXR5IGFsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J2FsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgICAgICAgICAgPSAncPhpZOxsaXQnOwogICAgJExhbmctPnsnUmVsZXZhbnQgdG8nfSAgICAgICAgICAgICAgICAgICAgICAgICA9ICdSZWxldmFudG7tIGsnOwogICAgJExhbmctPnsnSW5jbHVkZXMnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdaYWhybnVqZSc7CiAgICAkTGFuZy0+eydQYXJ0IG9mJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ8jhc3Qgeic7CiAgICAkTGFuZy0+eydEZXBlbmRzIG9uJ30gICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1phbGW+7SBuYSc7CiAgICAkTGFuZy0+eydSZXF1aXJlZCBmb3InfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1BvvmFkb3Zhbv0gcHJvJzsKICAgICRMYW5nLT57J0Nvbm5lY3RlZCB0byd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnU3BvamVuIHMnOwogICAgJExhbmctPnsnQWx0ZXJuYXRpdmUgdG8nfSAgICAgICAgICAgICAgICAgICAgICA9ICdBbHRlcm5hdGl2bu0gayc7CiAgICAkTGFuZy0+eydJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgID0gJ1N0YXYgSW5jaWRlbnR1JzsKICAgICRMYW5nLT57J0N1cnJlbnQgSW5jaWRlbnQgU3RhdGUnfSAgICAgICAgICAgICAgPSAnU2916GFzbv0gU3RhdiBJbmNpZGVudHUnOwogICAgJExhbmctPnsnQ3VycmVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICdTb3XoYXNu/SBTdGF2JzsKICAgICRMYW5nLT57J1NlcnZpY2UtQXJlYSd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnUHJvc3RvciDaZHK+YnknOwogICAgJExhbmctPnsnTWluaW11bSBUaW1lIEJldHdlZW4gSW5jaWRlbnRzJ30gICAgICA9ICdNaW5pbeFsbu0g6GFzIG1lemkgaW5jaWRlbnR5JzsKICAgICRMYW5nLT57J1NlcnZpY2UgT3ZlcnZpZXcnfSAgICAgICAgICAgICAgICAgICAgPSAnUPhlaGxlZCBTbHW+YnknOwogICAgJExhbmctPnsnU0xBIE92ZXJ2aWV3J30gICAgICAgICAgICAgICAgICAgICAgICA9ICdTTEEgUPhlaGxlZCc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNlcnZpY2VzJ30gICAgICAgICAgICAgICAgID0gJ1D4afhhemVu6SBTbHW+YnknOwogICAgJExhbmctPnsnQXNzb2NpYXRlZCBTTEFzJ30gICAgICAgICAgICAgICAgICAgICA9ICdQ+Gn4YXplbukgU0xBIHNtbG91dnknOwogICAgJExhbmctPnsnQmFjayBFbmQnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICda4WtsYWRu7SByb3pocmFu7S9CYWNrRW5kJzsKICAgICRMYW5nLT57J0RlbW9uc3RyYXRpb24nfSAgICAgICAgICAgICAgICAgICAgICAgPSAnVWvhemthJzsKICAgICRMYW5nLT57J0VuZCBVc2VyIFNlcnZpY2UnfSAgICAgICAgICAgICAgICAgICAgPSAnU2x1vmJ5IGtvbmNvdv1tIHW+aXZhdGVs+W0nOwogICAgJExhbmctPnsnRnJvbnQgRW5kJ30gICAgICAgICAgICAgICAgICAgICAgICAgICA9ICda4Wthem5pY2vpIHJvemhyYW7tL0Zyb250RW5kJzsKICAgICRMYW5nLT57J0lUIE1hbmFnZW1lbnQnfSAgICAgICAgICAgICAgICAgICAgICAgPSAn2O16ZW7tIElUJzsKICAgICRMYW5nLT57J0lUIE9wZXJhdGlvbmFsJ30gICAgICAgICAgICAgICAgICAgICAgPSAnSVQgT3BlcmFjZSc7CiAgICAkTGFuZy0+eydPdGhlcid9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0RhbLntJzsKICAgICRMYW5nLT57J1Byb2plY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnUHJvamVrdCc7CiAgICAkTGFuZy0+eydSZXBvcnRpbmcnfSAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1JlcG9ydGluZyc7CiAgICAkTGFuZy0+eydUcmFpbmluZyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ6lrb2xlbu0nOwogICAgJExhbmctPnsnVW5kZXJwaW5uaW5nIENvbnRyYWN0J30gICAgICAgICAgICAgICA9ICda4WtsYWRu7SBzbWxvdXZhJzsKICAgICRMYW5nLT57J0F2YWlsYWJpbGl0eSd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnRG9zdHVwbm9zdCc7CiAgICAkTGFuZy0+eydFcnJvcnMnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0NoeWJ5JzsKICAgICRMYW5nLT57J090aGVyJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnRGFsue0nOwogICAgJExhbmctPnsnUmVjb3ZlcnkgVGltZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICfIYXMgT2Jub3Z5JzsKICAgICRMYW5nLT57J1Jlc29sdXRpb24gUmF0ZSd9ICAgICAgICAgICAgICAgICAgICAgPSAnyGFzINhluWVu7Sc7CiAgICAkTGFuZy0+eydSZXNwb25zZSBUaW1lJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ8hhcyBPZHBvduxkaSc7CiAgICAkTGFuZy0+eydUcmFuc2FjdGlvbnMnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1RyYW5zYWtjZSc7CgogICAgcmV0dXJuIDE7Cn0KCjE7Cg==</File>
        <File Location="Kernel/Language/da_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9kYV9JVFNNQ29yZS5wbSAtIHByb3ZpZGVzIGRhIChEYW5pc2gpIGxhbmd1YWdlIHRyYW5zbGF0aW9uCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTAgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIC0tCiMgJElkOiBkYV9JVFNNQ29yZS5wbSx2IDEuMSAyMDEwLzA2LzI1IDA4OjU2OjU3IG1iIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TGFuZ3VhZ2U6OmRhX0lUU01Db3JlOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKdXNlIHZhcnMgcXcoJFZFUlNJT04pOwokVkVSU0lPTiA9IHF3KCRSZXZpc2lvbjogMS4xICQpIFsxXTsKCnN1YiBEYXRhIHsKICAgIG15ICRTZWxmID0gc2hpZnQ7CgogICAgbXkgJExhbmcgPSAkU2VsZi0+e1RyYW5zbGF0aW9ufTsKCiAgICByZXR1cm4gaWYgcmVmICRMYW5nIG5lICdIQVNIJzsKCiAgICAkTGFuZy0+eydDcml0aWNhbGl0eSd9ICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0tyaXRpa2FsaXRldCc7CiAgICAkTGFuZy0+eydJbXBhY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1Dldmlya25pbmcnOwogICAgJExhbmctPnsnQ3JpdGljYWxpdHkgPC0+IEltcGFjdCA8LT4gUHJpb3JpdHknfSA9ICdLcml0aWthbGl0ZXQgPC0+IFDldmlya25pbmcgPC0+IFByaW9yaXRldCc7CiAgICAkTGFuZy0+eydhbGxvY2F0ZSd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ3RpbGRlbGUnOwogICAgJExhbmctPnsnUmVsZXZhbnQgdG8nfSAgICAgICAgICAgICAgICAgICAgICAgICA9ICdSZWxldmFudCBmb3InOwogICAgJExhbmctPnsnSW5jbHVkZXMnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdJbmRrbHVkZXJlJzsKICAgICRMYW5nLT57J1BhcnQgb2YnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnRGVsIGFmJzsKICAgICRMYW5nLT57J0RlcGVuZHMgb24nfSAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnQWZo5m5nZXIgYWYnOwogICAgJExhbmctPnsnUmVxdWlyZWQgZm9yJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdLcuZ2ZXMgZm9yJzsKICAgICRMYW5nLT57J0Nvbm5lY3RlZCB0byd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnRm9yYnVuZGV0IHRpbCc7CiAgICAkTGFuZy0+eydBbHRlcm5hdGl2ZSB0byd9ICAgICAgICAgICAgICAgICAgICAgID0gJ0FsdGVybmF0aXYgdGlsJzsKICAgICRMYW5nLT57J0luY2lkZW50IFN0YXRlJ30gICAgICAgICAgICAgICAgICAgICAgPSAnSW5jaWRlbnQgdGlsc3RhbmQnOwogICAgJExhbmctPnsnQ3VycmVudCBJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICA9ICdOdXbmcmVuZGUgSW5jaWRlbnQgdGlsc3RhbmQnOwogICAgJExhbmctPnsnQ3VycmVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICdOdXbmcmVuZGUgdGlsc3RhbmQnOwogICAgJExhbmctPnsnU2VydmljZS1BcmVhJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdTZXJ2aWNlIG9tcuVkZSc7CiAgICAkTGFuZy0+eydNaW5pbXVtIFRpbWUgQmV0d2VlbiBJbmNpZGVudHMnfSAgICAgID0gJ01pbmltdW1zdGlkIG1lbGxlbSBJbmNpZGVudHMnOwogICAgJExhbmctPnsnU2VydmljZSBPdmVydmlldyd9ICAgICAgICAgICAgICAgICAgICA9ICdTZXJ2aWNlIG92ZXJzaWd0JzsKICAgICRMYW5nLT57J1NMQSBPdmVydmlldyd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnU0xBIG92ZXJzaWd0JzsKICAgICRMYW5nLT57J0Fzc29jaWF0ZWQgU2VydmljZXMnfSAgICAgICAgICAgICAgICAgPSAnVGlsa255dHRlZGUgc2VydmljZXMnOwogICAgJExhbmctPnsnQXNzb2NpYXRlZCBTTEFzJ30gICAgICAgICAgICAgICAgICAgICA9ICdUaWxrbnl0dGVkZSBTTEFzJzsKICAgICRMYW5nLT57J0JhY2sgRW5kJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnQmFja2VuZCc7CiAgICAkTGFuZy0+eydEZW1vbnN0cmF0aW9uJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ0RlbW9uc3RyYXRpb24nOwogICAgJExhbmctPnsnRW5kIFVzZXIgU2VydmljZSd9ICAgICAgICAgICAgICAgICAgICA9ICdLdW5kZXNlcnZpY2UnOwogICAgJExhbmctPnsnRnJvbnQgRW5kJ30gICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdGcm9udGVuZCc7CiAgICAkTGFuZy0+eydJVCBNYW5hZ2VtZW50J30gICAgICAgICAgICAgICAgICAgICAgID0gJ0lUIE1hbmFnZW1lbnQnOwogICAgJExhbmctPnsnSVQgT3BlcmF0aW9uYWwnfSAgICAgICAgICAgICAgICAgICAgICA9ICdJVCBvcGVyYXRpb25lbCc7CiAgICAkTGFuZy0+eydPdGhlcid9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0FuZHJlJzsKICAgICRMYW5nLT57J1Byb2plY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnUHJvamVrdCc7CiAgICAkTGFuZy0+eydSZXBvcnRpbmcnfSAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1JlcG9ydGVyaW5nJzsKICAgICRMYW5nLT57J1RyYWluaW5nJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnVHLmbmluZyc7CiAgICAkTGFuZy0+eydVbmRlcnBpbm5pbmcgQ29udHJhY3QnfSAgICAgICAgICAgICAgID0gJ1VuZGVybGlnZ2VuZGUga29udHJha3QnOwogICAgJExhbmctPnsnQXZhaWxhYmlsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICA9ICdUaWxn5m5nZWxpZ2hlZCc7CiAgICAkTGFuZy0+eydFcnJvcnMnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0ZlamwnOwogICAgJExhbmctPnsnT3RoZXInfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdBbmRyZSc7CiAgICAkTGFuZy0+eydSZWNvdmVyeSBUaW1lJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ0dlbmV0YWJsZXJpbmdzdGlkJzsKICAgICRMYW5nLT57J1Jlc29sdXRpb24gUmF0ZSd9ICAgICAgICAgICAgICAgICAgICAgPSAnTPhzbmluZ3NyYXRlJzsKICAgICRMYW5nLT57J1Jlc3BvbnNlIFRpbWUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnUmVha3Rpb25zdGlkJzsKICAgICRMYW5nLT57J1RyYW5zYWN0aW9ucyd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnVHJhbnNha3Rpb25lcic7CgogICAgcmV0dXJuIDE7Cn0KCjE7Cg==</File>
        <File Location="Kernel/Language/de_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9kZV9JVFNNQ29yZS5wbSAtIHRoZSBnZXJtYW4gdHJhbnNsYXRpb24gb2YgSVRTTUNvcmUKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMCBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgLS0KIyAkSWQ6IGRlX0lUU01Db3JlLnBtLHYgMS4xNyAyMDEwLzA2LzAxIDE5OjI1OjIyIG1iIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TGFuZ3VhZ2U6OmRlX0lUU01Db3JlOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKdXNlIHZhcnMgcXcoJFZFUlNJT04pOwokVkVSU0lPTiA9IHF3KCRSZXZpc2lvbjogMS4xNyAkKSBbMV07CgpzdWIgRGF0YSB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgIG15ICRMYW5nID0gJFNlbGYtPntUcmFuc2xhdGlvbn07CgogICAgcmV0dXJuIGlmIHJlZiAkTGFuZyBuZSAnSEFTSCc7CgogICAgJExhbmctPnsnQ3JpdGljYWxpdHknfSAgICAgICAgICAgICAgICAgICAgICAgICA9ICdLcml0aWthbGl05HQnOwogICAgJExhbmctPnsnSW1wYWN0J30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdBdXN3aXJrdW5nJzsKICAgICRMYW5nLT57J0NyaXRpY2FsaXR5IDwtPiBJbXBhY3QgPC0+IFByaW9yaXR5J30gPSAnS3JpdGlrYWxpdOR0IDwtPiBBdXN3aXJrdW5nIDwtPiBQcmlvcml05HQnOwogICAgJExhbmctPnsnYWxsb2NhdGlvbid9ICAgICAgICAgICAgICAgICAgICAgICAgICA9ICd6dW9yZG5lbic7CiAgICAkTGFuZy0+eydQcmlvcml0eSBhbGxvY2F0aW9uJ30gICAgICAgICAgICAgICAgID0gJ1ByaW9yaXTkdCB6dW9yZG5lbic7CiAgICAkTGFuZy0+eydSZWxldmFudCB0byd9ICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1JlbGV2YW50IGb8cic7CiAgICAkTGFuZy0+eydJbmNsdWRlcyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0JlaW5oYWx0ZXQnOwogICAgJExhbmctPnsnUGFydCBvZid9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdUZWlsIHZvbic7CiAgICAkTGFuZy0+eydEZXBlbmRzIG9uJ30gICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0jkbmd0IGFiIHZvbic7CiAgICAkTGFuZy0+eydSZXF1aXJlZCBmb3InfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ0JlbvZ0aWd0IGb8cic7CiAgICAkTGFuZy0+eydDb25uZWN0ZWQgdG8nfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1ZlcmJ1bmRlbiBtaXQnOwogICAgJExhbmctPnsnQWx0ZXJuYXRpdmUgdG8nfSAgICAgICAgICAgICAgICAgICAgICA9ICdBbHRlcm5hdGl2IHp1JzsKICAgICRMYW5nLT57J0luY2lkZW50IFN0YXRlJ30gICAgICAgICAgICAgICAgICAgICAgPSAnVm9yZmFsbHNzdGF0dXMnOwogICAgJExhbmctPnsnQ3VycmVudCBJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICA9ICdBa3R1ZWxsZXIgVm9yZmFsbHNzdGF0dXMnOwogICAgJExhbmctPnsnQ3VycmVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICdBa3R1ZWxsZXIgU3RhdHVzJzsKICAgICRMYW5nLT57J1NlcnZpY2UtQXJlYSd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnU2VydmljZS1CZXJlaWNoJzsKICAgICRMYW5nLT57J01pbmltdW0gVGltZSBCZXR3ZWVuIEluY2lkZW50cyd9ICAgICAgPSAnTWluZGVzdHplaXQgendpc2NoZW4gSW5jaWRlbnRzJzsKICAgICRMYW5nLT57J1NlcnZpY2UgT3ZlcnZpZXcnfSAgICAgICAgICAgICAgICAgICAgPSAnU2VydmljZSDcYmVyc2ljaHQnOwogICAgJExhbmctPnsnU0xBIE92ZXJ2aWV3J30gICAgICAgICAgICAgICAgICAgICAgICA9ICdTTEEg3GJlcnNpY2h0JzsKICAgICRMYW5nLT57J0Fzc29jaWF0ZWQgU2VydmljZXMnfSAgICAgICAgICAgICAgICAgPSAnWnVnZWj2cmlnZSBTZXJ2aWNlcyc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNMQXMnfSAgICAgICAgICAgICAgICAgICAgID0gJ1p1Z2Vo9nJpZ2UgU0xBcyc7CiAgICAkTGFuZy0+eydCYWNrIEVuZCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0JhY2tlbmQnOwogICAgJExhbmctPnsnRGVtb25zdHJhdGlvbid9ICAgICAgICAgICAgICAgICAgICAgICA9ICdEZW1vbnN0cmF0aW9uJzsKICAgICRMYW5nLT57J0VuZCBVc2VyIFNlcnZpY2UnfSAgICAgICAgICAgICAgICAgICAgPSAnQW53ZW5kZXItU2VydmljZSc7CiAgICAkTGFuZy0+eydGcm9udCBFbmQnfSAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0Zyb250ZW5kJzsKICAgICRMYW5nLT57J0lUIE1hbmFnZW1lbnQnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnSVQgTWFuYWdlbWVudCc7CiAgICAkTGFuZy0+eydJVCBPcGVyYXRpb25hbCd9ICAgICAgICAgICAgICAgICAgICAgID0gJ0lUIEJldHJpZWInOwogICAgJExhbmctPnsnT3RoZXInfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdTb25zdGlnZXMnOwogICAgJExhbmctPnsnUHJvamVjdCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdQcm9qZWt0JzsKICAgICRMYW5nLT57J1JlcG9ydGluZyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnUmVwb3J0aW5nJzsKICAgICRMYW5nLT57J1RyYWluaW5nJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnVHJhaW5pbmcnOwogICAgJExhbmctPnsnVW5kZXJwaW5uaW5nIENvbnRyYWN0J30gICAgICAgICAgICAgICA9ICdVbmRlcnBpbm5pbmcgQ29udHJhY3QnOwogICAgJExhbmctPnsnQXZhaWxhYmlsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICA9ICdWZXJm/GdiYXJrZWl0JzsKICAgICRMYW5nLT57J0Vycm9ycyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnRmVobGVyJzsKICAgICRMYW5nLT57J090aGVyJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnU29uc3RpZ2VzJzsKICAgICRMYW5nLT57J1JlY292ZXJ5IFRpbWUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnV2llZGVyaGVyc3RlbGx1bmdzemVpdCc7CiAgICAkTGFuZy0+eydSZXNvbHV0aW9uIFJhdGUnfSAgICAgICAgICAgICAgICAgICAgID0gJ0z2c3VuZ3N6ZWl0JzsKICAgICRMYW5nLT57J1Jlc3BvbnNlIFRpbWUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnUmVha3Rpb25zemVpdCc7CiAgICAkTGFuZy0+eydUcmFuc2FjdGlvbnMnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1RyYW5zYWt0aW9uZW4nOwoKICAgIHJldHVybiAxOwp9CgoxOwo=</File>
        <File Location="Kernel/Language/es_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lc19JVFNNQ29yZS5wbSAtIHRoZSBzcGFuaXNoIHRyYW5zbGF0aW9uIG9mIElUU01Db3JlCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTAgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIENvcHlyaWdodCAoQykgMjAwOCBBcXVpbGVzIENvaGVuCiMgLS0KIyAkSWQ6IGVzX0lUU01Db3JlLnBtLHYgMS42IDIwMTAvMDYvMDEgMTk6MjU6MjIgbWIgRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6ZXNfSVRTTUNvcmU7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cgp1c2UgdmFycyBxdygkVkVSU0lPTik7CiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjYgJCkgWzFdOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICBteSAkTGFuZyA9ICRTZWxmLT57VHJhbnNsYXRpb259OwoKICAgIHJldHVybiBpZiByZWYgJExhbmcgbmUgJ0hBU0gnOwoKICAgICRMYW5nLT57J0NyaXRpY2FsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICAgPSAnVXJnZW5jaWEnOwogICAgJExhbmctPnsnSW1wYWN0J30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdJbXBhY3RvJzsKICAgICRMYW5nLT57J0NyaXRpY2FsaXR5IDwtPiBJbXBhY3QgPC0+IFByaW9yaXR5J30gPSAnVXJnZW5jaWEgPC0+IEltcGFjdG8gPC0+IFByaW9yaWRhZCc7CiAgICAkTGFuZy0+eydhbGxvY2F0aW9uJ30gICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0FzaWduYXInOwogICAgJExhbmctPnsnUHJpb3JpdHkgYWxsb2NhdGlvbid9ICAgICAgICAgICAgICAgICA9ICdBc2lnbmFyIHByaW9yaWRhZCc7CiAgICAkTGFuZy0+eydSZWxldmFudCB0byd9ICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1JlbGV2YW50ZSBhJzsKICAgICRMYW5nLT57J0luY2x1ZGVzJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnSW5jbHV5ZSc7CiAgICAkTGFuZy0+eydQYXJ0IG9mJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1BhcnRlIGRlJzsKICAgICRMYW5nLT57J0RlcGVuZHMgb24nfSAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnRGVwZW5kZSBlbic7CiAgICAkTGFuZy0+eydSZXF1aXJlZCBmb3InfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1JlcXVlcmlkbyBwYXJhJzsKICAgICRMYW5nLT57J0Nvbm5lY3RlZCB0byd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnQ29uZWN0YWRvIGEnOwogICAgJExhbmctPnsnQWx0ZXJuYXRpdmUgdG8nfSAgICAgICAgICAgICAgICAgICAgICA9ICdBbHRlcmFudGl2YSBhJzsKICAgICRMYW5nLT57J0luY2lkZW50IFN0YXRlJ30gICAgICAgICAgICAgICAgICAgICAgPSAnRXN0YWRvIGRlbCBJbmNpZGVudGUnOwogICAgJExhbmctPnsnQ3VycmVudCBJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICA9ICdFc3RhZG8gQWN0dWFsIGRlbCBJbmNpZGVudGUnOwogICAgJExhbmctPnsnQ3VycmVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICdFc3RhZG8gQWN0dWFsJzsKICAgICRMYW5nLT57J1NlcnZpY2UtQXJlYSd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnQXJlYS1TZXJ2aWNpbyc7CiAgICAkTGFuZy0+eydNaW5pbXVtIFRpbWUgQmV0d2VlbiBJbmNpZGVudHMnfSAgICAgID0gJ03tbmltbyBUaWVtcG8gZW50cmUgSW5jaWRlbnRlcyc7CiAgICAkTGFuZy0+eydTZXJ2aWNlIE92ZXJ2aWV3J30gICAgICAgICAgICAgICAgICAgID0gJ0Rlc2NyaXBjafNuIGRlIFNlcnZpY2lvcyc7CiAgICAkTGFuZy0+eydTTEEgT3ZlcnZpZXcnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ0Rlc2NyaXBjafNuIGRlIFNMQSc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNlcnZpY2VzJ30gICAgICAgICAgICAgICAgID0gJ1NlcnZpY2lvcyBBc29jaWFkb3MnOwogICAgJExhbmctPnsnQXNzb2NpYXRlZCBTTEFzJ30gICAgICAgICAgICAgICAgICAgICA9ICdTTEFzIEFzb2NpYWRvcyc7CiAgICAkTGFuZy0+eydCYWNrIEVuZCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJyc7CiAgICAkTGFuZy0+eydEZW1vbnN0cmF0aW9uJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ0RlbW9zdHJhY2nzbic7CiAgICAkTGFuZy0+eydFbmQgVXNlciBTZXJ2aWNlJ30gICAgICAgICAgICAgICAgICAgID0gJ1NlcnZpY2lvIGRlIFVzdWFyaW8gRmluYWwnOwogICAgJExhbmctPnsnRnJvbnQgRW5kJ30gICAgICAgICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnSVQgTWFuYWdlbWVudCd9ICAgICAgICAgICAgICAgICAgICAgICA9ICdBZG1pbmlzdHJhY2nzbiBkZSBUSSc7CiAgICAkTGFuZy0+eydJVCBPcGVyYXRpb25hbCd9ICAgICAgICAgICAgICAgICAgICAgID0gJ09wZXJhY2nzbiBkZSBUSSc7CiAgICAkTGFuZy0+eydPdGhlcid9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ090cm8nOwogICAgJExhbmctPnsnUHJvamVjdCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdQcm95ZWN0byc7CiAgICAkTGFuZy0+eydSZXBvcnRpbmcnfSAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0luZm9ybWVzJzsKICAgICRMYW5nLT57J1RyYWluaW5nJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnRW50cmVuYW1pZW50byc7CiAgICAkTGFuZy0+eydVbmRlcnBpbm5pbmcgQ29udHJhY3QnfSAgICAgICAgICAgICAgID0gJyc7CiAgICAkTGFuZy0+eydBdmFpbGFiaWxpdHknfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ0Rpc3BvbmliaWxpZGFkJzsKICAgICRMYW5nLT57J0Vycm9ycyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnRXJyb3Jlcyc7CiAgICAkTGFuZy0+eydPdGhlcid9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ090cm8nOwogICAgJExhbmctPnsnUmVjb3ZlcnkgVGltZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICdUaWVtcG8gZGUgUmVjdXBlcmFjafNuJzsKICAgICRMYW5nLT57J1Jlc29sdXRpb24gUmF0ZSd9ICAgICAgICAgICAgICAgICAgICAgPSAnVGFzYSBkZSBSZXNvbHVjafNuJzsKICAgICRMYW5nLT57J1Jlc3BvbnNlIFRpbWUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnVGllbXBvIGRlIFJlc3B1ZXN0YSc7CiAgICAkTGFuZy0+eydUcmFuc2FjdGlvbnMnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1RyYW5zYWNjaW9uZXMnOwoKICAgIHJldHVybiAxOwp9CgoxOwo=</File>
        <File Location="Kernel/Language/fa_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9mYV9JVFNNQ29yZS5wbSAtIHRoZSBwZXJzaWFuIChmYXJzaSkgdHJhbnNsYXRpb24gb2YgSVRTTUNvcmUKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMCBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgQ29weXJpZ2h0IChDKSAyMDAzLTIwMDkgQWZzaGFyIE1vaGViYmkgPGFmc2hhci5tb2hlYmJpIGF0IGdtYWlsLmNvbT4KIyAtLS0KIyAkSWQ6IGZhX0lUU01Db3JlLnBtLHYgMS4zIDIwMTAvMDYvMDEgMTk6MjU6MjIgbWIgRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6ZmFfSVRTTUNvcmU7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cgp1c2UgdmFycyBxdygkVkVSU0lPTik7CiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjMgJCkgWzFdOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICBteSAkTGFuZyA9ICRTZWxmLT57VHJhbnNsYXRpb259OwoKICAgIHJldHVybiBpZiByZWYgJExhbmcgbmUgJ0hBU0gnOwoKICAgICRMYW5nLT57J0NyaXRpY2FsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICAgPSAn2KfZh9mF24zYqic7CiAgICAkTGFuZy0+eydJbXBhY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ9in2KvYsSc7CiAgICAkTGFuZy0+eydDcml0aWNhbGl0eSA8LT4gSW1wYWN0IDwtPiBQcmlvcml0eSd9ID0gJ9in2YfZhduM2KogPC0+INin2KvYsSA8LT4g2KfZiNmE2YjbjNiqJzsKICAgICRMYW5nLT57J2FsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgICAgICAgICAgPSAn2KfYrtiq2LXYp9i1JzsKICAgICRMYW5nLT57J1ByaW9yaXR5IGFsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J1JlbGV2YW50IHRvJ30gICAgICAgICAgICAgICAgICAgICAgICAgPSAn2YXYsdiq2KjYtyDYqNinJzsKICAgICRMYW5nLT57J0luY2x1ZGVzJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAn2YXYtNiq2YXZhCDYp9iz2Kog2KjYsSc7CiAgICAkTGFuZy0+eydQYXJ0IG9mJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ9io2K7YtNuMINin2LInOwogICAgJExhbmctPnsnRGVwZW5kcyBvbid9ICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfZiNin2KjYs9iq2Ycg2KfYs9iqINio2YcnOwogICAgJExhbmctPnsnUmVxdWlyZWQgZm9yJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICfZhdmI2LHYryDZhtuM2KfYsiDYp9iz2Kog2KjYsdin24wnOwogICAgJExhbmctPnsnQ29ubmVjdGVkIHRvJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICfZhdiq2LXZhCDYp9iz2Kog2KjZhyc7CiAgICAkTGFuZy0+eydBbHRlcm5hdGl2ZSB0byd9ICAgICAgICAgICAgICAgICAgICAgID0gJ9is2KfbjNqv2LLbjNmG24wg2KjYsdin24wnOwogICAgJExhbmctPnsnSW5jaWRlbnQgU3RhdGUnfSAgICAgICAgICAgICAgICAgICAgICA9ICfZiNi22LnbjNiqINix2K7Yr9in2K8nOwogICAgJExhbmctPnsnQ3VycmVudCBJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICA9ICfZiNi22LnbjNiqINis2KfYsduMINix2K7Yr9in2K8nOwogICAgJExhbmctPnsnQ3VycmVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICfZiNi22LnbjNiqINis2KfYsduMJzsKICAgICRMYW5nLT57J1NlcnZpY2UtQXJlYSd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAn2KjYrti0INiz2LHZiNuM2LMnOwogICAgJExhbmctPnsnTWluaW11bSBUaW1lIEJldHdlZW4gSW5jaWRlbnRzJ30gICAgICA9ICfYrdiv2KfZgtmEINiy2YXYp9mGINio24zZhiDYr9mIINix2K7Yr9in2K8nOwogICAgJExhbmctPnsnU2VydmljZSBPdmVydmlldyd9ICAgICAgICAgICAgICAgICAgICA9ICfYrtmE2KfYtdmHINiz2LHZiNuM2LMnOwogICAgJExhbmctPnsnU0xBIE92ZXJ2aWV3J30gICAgICAgICAgICAgICAgICAgICAgICA9ICfYrtmE2KfYtdmHIFNMQSc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNlcnZpY2VzJ30gICAgICAgICAgICAgICAgID0gJ9iz2LHZiNuM2LPigIzZh9in24wg2YXYsdiq2KjYtyc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNMQXMnfSAgICAgICAgICAgICAgICAgICAgID0gJ1NMQdmH2KfbjCDZhdix2KrYqNi3JzsKICAgICRMYW5nLT57J0JhY2sgRW5kJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAn2b7YtNiqINi12K3ZhtmHJzsKICAgICRMYW5nLT57J0RlbW9uc3RyYXRpb24nfSAgICAgICAgICAgICAgICAgICAgICAgPSAn2YbZhdin24zYtCc7CiAgICAkTGFuZy0+eydFbmQgVXNlciBTZXJ2aWNlJ30gICAgICAgICAgICAgICAgICAgID0gJ9iz2LHZiNuM2LMg2qnYp9ix2KjYsSDZhtmH2KfbjNuMJzsKICAgICRMYW5nLT57J0Zyb250IEVuZCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAn2KzZhNmIINi12K3ZhtmHJzsKICAgICRMYW5nLT57J0lUIE1hbmFnZW1lbnQnfSAgICAgICAgICAgICAgICAgICAgICAgPSAn2YXYr9uM2LHbjNiqIElUJzsKICAgICRMYW5nLT57J0lUIE9wZXJhdGlvbmFsJ30gICAgICAgICAgICAgICAgICAgICAgPSAn2LnZhdmE24zYp9iqIElUJzsKICAgICRMYW5nLT57J090aGVyJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAn2KjZgtuM2YcnOwogICAgJExhbmctPnsnUHJvamVjdCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfZvtix2YjamNmHJzsKICAgICRMYW5nLT57J1JlcG9ydGluZyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAn2q/Ystin2LHYtNuMJzsKICAgICRMYW5nLT57J1RyYWluaW5nJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAn2KLZhdmI2LLYtNuMJzsKICAgICRMYW5nLT57J1VuZGVycGlubmluZyBDb250cmFjdCd9ICAgICAgICAgICAgICAgPSAn2YLYsdin2LHYr9in2K8g2KLZhdin2K/ZhyDahtin2b4nOwogICAgJExhbmctPnsnQXZhaWxhYmlsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICA9ICfZhduM2LLYp9mGINiv2LEg2K/Ys9iq2LHYsyDYqNmI2K/Zhic7CiAgICAkTGFuZy0+eydFcnJvcnMnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ9iu2LfYp9mH2KcnOwogICAgJExhbmctPnsnT3RoZXInfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfYqNmC24zZhyc7CiAgICAkTGFuZy0+eydSZWNvdmVyeSBUaW1lJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ9iy2YXYp9mGINio2YfYqNmI2K8nOwogICAgJExhbmctPnsnUmVzb2x1dGlvbiBSYXRlJ30gICAgICAgICAgICAgICAgICAgICA9ICfZhtix2K4g2K3ZhCDZhdiz2KbZhNmHJzsKICAgICRMYW5nLT57J1Jlc3BvbnNlIFRpbWUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAn2LLZhdin2YYg2b7Yp9iz2K7ar9mI24zbjCc7CiAgICAkTGFuZy0+eydUcmFuc2FjdGlvbnMnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ9iq2LHYp9qp2YbYtOKAjNmH2KcnOwoKICAgIHJldHVybiAxOwp9CgoxOwo=</File>
        <File Location="Kernel/Language/fr_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9mcl9JVFNNQ29yZS5wbSAtIHRoZSBmcmVuY2ggdHJhbnNsYXRpb24gb2YgSVRTTUNvcmUKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAwOSBPbGl2aWVyIFNhbGxvdSA8b2xpdmllci5zYWxsb3UgYXQgaXJpc2EuZnI+CiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTAgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIC0tCiMgJElkOiBmcl9JVFNNQ29yZS5wbSx2IDEuNCAyMDEwLzA2LzAxIDE5OjI1OjIyIG1iIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TGFuZ3VhZ2U6OmZyX0lUU01Db3JlOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKdXNlIHZhcnMgcXcoJFZFUlNJT04pOwokVkVSU0lPTiA9IHF3KCRSZXZpc2lvbjogMS40ICQpIFsxXTsKCnN1YiBEYXRhIHsKICAgIG15ICRTZWxmID0gc2hpZnQ7CgogICAgbXkgJExhbmcgPSAkU2VsZi0+e1RyYW5zbGF0aW9ufTsKCiAgICByZXR1cm4gaWYgcmVmICRMYW5nIG5lICdIQVNIJzsKCiAgICAkTGFuZy0+eydDcml0aWNhbGl0eSd9ICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0NyaXRpY2l06Sc7CiAgICAkTGFuZy0+eydJbXBhY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0ltcGFjdCc7CiAgICAkTGFuZy0+eydDcml0aWNhbGl0eSA8LT4gSW1wYWN0IDwtPiBQcmlvcml0eSd9ID0gJ0NyaXRpY2l06SA8LT4gSW1wYWN0IDwtPiBQcmlvcml06Sc7CiAgICAkTGFuZy0+eydhbGxvY2F0aW9uJ30gICAgICAgICAgICAgICAgICAgICAgICAgID0gJ2FsbG91ZSc7CiAgICAkTGFuZy0+eydQcmlvcml0eSBhbGxvY2F0aW9uJ30gICAgICAgICAgICAgICAgID0gJyc7CiAgICAkTGFuZy0+eydSZWxldmFudCB0byd9ICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0NvcnJlc3BvbmQg4Cc7CiAgICAkTGFuZy0+eydJbmNsdWRlcyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0luY2x1cyc7CiAgICAkTGFuZy0+eydQYXJ0IG9mJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1BhcnQgZGUnOwogICAgJExhbmctPnsnRGVwZW5kcyBvbid9ICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdE6XBlbmQgZGUnOwogICAgJExhbmctPnsnUmVxdWlyZWQgZm9yJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdSZXF1aXMgcG91cic7CiAgICAkTGFuZy0+eydDb25uZWN0ZWQgdG8nfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ0xp6SDgJzsKICAgICRMYW5nLT57J0FsdGVybmF0aXZlIHRvJ30gICAgICAgICAgICAgICAgICAgICAgPSAnQWx0ZXJuYXRpdmUg4Cc7CiAgICAkTGFuZy0+eydJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgID0gJ0V0YXQgZFwnaW5jaWRlbnQnOwogICAgJExhbmctPnsnQ3VycmVudCBJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICA9ICdFdGF0IGFjdHVlbCBkXCdpbmNpZGVudCc7CiAgICAkTGFuZy0+eydDdXJyZW50IFN0YXRlJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ0V0YXQgYWN0dWVsJzsKICAgICRMYW5nLT57J1NlcnZpY2UtQXJlYSd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnWm9uZSBkZSBzZXJ2aWNlJzsKICAgICRMYW5nLT57J01pbmltdW0gVGltZSBCZXR3ZWVuIEluY2lkZW50cyd9ICAgICAgPSAnVGVtcHMgbWluaW1hbCBlbnRyZSBsZXMgaW5jaWRlbnRzJzsKICAgICRMYW5nLT57J1NlcnZpY2UgT3ZlcnZpZXcnfSAgICAgICAgICAgICAgICAgICAgPSAnQXBlcud1IGRlcyBzZXJ2aWNlcyc7CiAgICAkTGFuZy0+eydTTEEgT3ZlcnZpZXcnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ0FwZXLndSBkZXMgU0xBJzsKICAgICRMYW5nLT57J0Fzc29jaWF0ZWQgU2VydmljZXMnfSAgICAgICAgICAgICAgICAgPSAnU2VydmljZXMgYXNzb2Np6XMnOwogICAgJExhbmctPnsnQXNzb2NpYXRlZCBTTEFzJ30gICAgICAgICAgICAgICAgICAgICA9ICdTTEFzIGFzc29jaellcyc7CiAgICAkTGFuZy0+eydCYWNrIEVuZCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0JhY2tlbmQnOwogICAgJExhbmctPnsnRGVtb25zdHJhdGlvbid9ICAgICAgICAgICAgICAgICAgICAgICA9ICdE6W1vbnN0cmF0aW9uJzsKICAgICRMYW5nLT57J0VuZCBVc2VyIFNlcnZpY2UnfSAgICAgICAgICAgICAgICAgICAgPSAnU2VydmljZSB1dGlsaXNhdGV1cic7CiAgICAkTGFuZy0+eydGcm9udCBFbmQnfSAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0Zyb250ZW5kJzsKICAgICRMYW5nLT57J0lUIE1hbmFnZW1lbnQnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnR2VzdGlvbiBJVCc7CiAgICAkTGFuZy0+eydJVCBPcGVyYXRpb25hbCd9ICAgICAgICAgICAgICAgICAgICAgID0gJ09w6XJhdGlvbnMgSVQnOwogICAgJExhbmctPnsnT3RoZXInfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdBdXRyZSc7CiAgICAkTGFuZy0+eydQcm9qZWN0J30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1Byb2pldCc7CiAgICAkTGFuZy0+eydSZXBvcnRpbmcnfSAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1JhcHBvcnQnOwogICAgJExhbmctPnsnVHJhaW5pbmcnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdGb3JtYXRpb24nOwogICAgJExhbmctPnsnVW5kZXJwaW5uaW5nIENvbnRyYWN0J30gICAgICAgICAgICAgICA9ICdDb250cmF0IGV4dGVybmUnOwogICAgJExhbmctPnsnQXZhaWxhYmlsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICA9ICdEaXNwb25pYmlsaXTpJzsKICAgICRMYW5nLT57J0Vycm9ycyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnRXJyZXVycyc7CiAgICAkTGFuZy0+eydPdGhlcid9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0F1dHJlJzsKICAgICRMYW5nLT57J1JlY292ZXJ5IFRpbWUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnVGVtcHMgZGUgculwYXJhdGlvbic7CiAgICAkTGFuZy0+eydSZXNvbHV0aW9uIFJhdGUnfSAgICAgICAgICAgICAgICAgICAgID0gJ1RhdXggZGUgculzb2x1dGlvbic7CiAgICAkTGFuZy0+eydSZXNwb25zZSBUaW1lJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ1RlbXBzIGRlIHLpcG9uc2UnOwogICAgJExhbmctPnsnVHJhbnNhY3Rpb25zJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdUcmFuc2FjdGlvbnMnOwoKICAgIHJldHVybiAxOwp9CgoxOwo=</File>
        <File Location="Kernel/Language/it_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9pdF9JVFNNQ29yZS5wbSAtIHRoZSBpdGFsaWFuIHRyYW5zbGF0aW9uIG9mIElUU01Db3JlCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTAgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIC0tCiMgJElkOiBpdF9JVFNNQ29yZS5wbSx2IDEuMyAyMDEwLzA2LzAxIDE5OjI1OjIyIG1iIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TGFuZ3VhZ2U6Oml0X0lUU01Db3JlOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKdXNlIHZhcnMgcXcoJFZFUlNJT04pOwokVkVSU0lPTiA9IHF3KCRSZXZpc2lvbjogMS4zICQpIFsxXTsKCnN1YiBEYXRhIHsKICAgIG15ICRTZWxmID0gc2hpZnQ7CgogICAgbXkgJExhbmcgPSAkU2VsZi0+e1RyYW5zbGF0aW9ufTsKCiAgICByZXR1cm4gaWYgcmVmICRMYW5nIG5lICdIQVNIJzsKCiAgICAkTGFuZy0+eydDcml0aWNhbGl0eSd9ICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1VyZ2VuemlhJzsKICAgICRMYW5nLT57J0ltcGFjdCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnSW1wYXR0byc7CiAgICAkTGFuZy0+eydDcml0aWNhbGl0eSA8LT4gSW1wYWN0IDwtPiBQcmlvcml0eSd9ID0gJ1VyZ2VuemEgPC0+IEltcGF0dG8gPC0+IFByaW9yaXTgJzsKICAgICRMYW5nLT57J2FsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnYXNzZWduYXJlJzsKICAgICRMYW5nLT57J1ByaW9yaXR5IGFsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J1JlbGV2YW50IHRvJ30gICAgICAgICAgICAgICAgICAgICAgICAgPSAnUmlsZXZhbnRlIHBlcic7CiAgICAkTGFuZy0+eydJbmNsdWRlcyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0luY2x1ZGUnOwogICAgJExhbmctPnsnUGFydCBvZid9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdQYXJ0ZSBkaSc7CiAgICAkTGFuZy0+eydEZXBlbmRzIG9uJ30gICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0RlcGVuZGUgZGEnOwogICAgJExhbmctPnsnUmVxdWlyZWQgZm9yJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdSaWNoaWVzdG8gcGVyJzsKICAgICRMYW5nLT57J0Nvbm5lY3RlZCB0byd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnQ29ubmVzc28gYSc7CiAgICAkTGFuZy0+eydBbHRlcm5hdGl2ZSB0byd9ICAgICAgICAgICAgICAgICAgICAgID0gJ0FsdGVybmF0aXZvIGEnOwogICAgJExhbmctPnsnSW5jaWRlbnQgU3RhdGUnfSAgICAgICAgICAgICAgICAgICAgICA9ICdTdGF0byBkZWxsXCdJbmNpZGVudGUnOwogICAgJExhbmctPnsnQ3VycmVudCBJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICA9ICdTdGF0byBBdHR1YWxlIGRlbGxcJ0luY2lkZW50ZSc7CiAgICAkTGFuZy0+eydDdXJyZW50IFN0YXRlJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ1N0YXRvIEF0dHVhbGUnOwogICAgJExhbmctPnsnU2VydmljZS1BcmVhJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdBcmVhLWRpLVNlcnZpemlvJzsKICAgICRMYW5nLT57J01pbmltdW0gVGltZSBCZXR3ZWVuIEluY2lkZW50cyd9ICAgICAgPSAnTWluaW1vIFRlbXBvIFRyYSBJbmNpZGVudGknOwogICAgJExhbmctPnsnU2VydmljZSBPdmVydmlldyd9ICAgICAgICAgICAgICAgICAgICA9ICdEZXNjcml6aW9uZSBkZWwgU2Vydml6aW8nOwogICAgJExhbmctPnsnU0xBIE92ZXJ2aWV3J30gICAgICAgICAgICAgICAgICAgICAgICA9ICdEZXNjcml6aW9uZSBkZWxsbyBTTEEnOwogICAgJExhbmctPnsnQXNzb2NpYXRlZCBTZXJ2aWNlcyd9ICAgICAgICAgICAgICAgICA9ICdTZXJ2aXppIEFzc29jaWF0aSc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNMQXMnfSAgICAgICAgICAgICAgICAgICAgID0gJ1NMQXMgQXNzb2NpYXRpJzsKICAgICRMYW5nLT57J0JhY2sgRW5kJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnQmFjayBFbmQnOwogICAgJExhbmctPnsnRGVtb25zdHJhdGlvbid9ICAgICAgICAgICAgICAgICAgICAgICA9ICdEaW1vc3RyYXppb25lJzsKICAgICRMYW5nLT57J0VuZCBVc2VyIFNlcnZpY2UnfSAgICAgICAgICAgICAgICAgICAgPSAnU2Vydml6aW8gVXRlbnRlIEZpbmFsZSc7CiAgICAkTGFuZy0+eydGcm9udCBFbmQnfSAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0Zyb250IEVuZCc7CiAgICAkTGFuZy0+eydJVCBNYW5hZ2VtZW50J30gICAgICAgICAgICAgICAgICAgICAgID0gJ0lUIE1hbmFnZW1lbnQnOwogICAgJExhbmctPnsnSVQgT3BlcmF0aW9uYWwnfSAgICAgICAgICAgICAgICAgICAgICA9ICdJVCBPcGVyYXRpb25hbCc7CiAgICAkTGFuZy0+eydPdGhlcid9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0FsdHJvJzsKICAgICRMYW5nLT57J1Byb2plY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnUHJvZ2V0dG8nOwogICAgJExhbmctPnsnUmVwb3J0aW5nJ30gICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdSYXBwb3J0aSc7CiAgICAkTGFuZy0+eydUcmFpbmluZyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0Zvcm1hemlvbmUnOwogICAgJExhbmctPnsnVW5kZXJwaW5uaW5nIENvbnRyYWN0J30gICAgICAgICAgICAgICA9ICdVbmRlcnBpbm5pbmcgQ29udHJhY3QnOwogICAgJExhbmctPnsnQXZhaWxhYmlsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICA9ICdEaXNwb25pYmlsaXTgJzsKICAgICRMYW5nLT57J0Vycm9ycyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnRXJyb3JpJzsKICAgICRMYW5nLT57J090aGVyJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnQWx0cm8nOwogICAgJExhbmctPnsnUmVjb3ZlcnkgVGltZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICdUZW1wbyBkaSBSZWN1cGVybyc7CiAgICAkTGFuZy0+eydSZXNvbHV0aW9uIFJhdGUnfSAgICAgICAgICAgICAgICAgICAgID0gJ1Rhc3NvIGRpIFJpc29sdXppb25lJzsKICAgICRMYW5nLT57J1Jlc3BvbnNlIFRpbWUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnVGVtcG8gZGkgUmlzcG9zdGEnOwogICAgJExhbmctPnsnVHJhbnNhY3Rpb25zJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdUcmFuc2F6aW9uaSc7CgogICAgcmV0dXJuIDE7Cn0KCjE7Cg==</File>
        <File Location="Kernel/Language/nl_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9ubF9JVFNNQ29yZS5wbSAtIHRoZSBEdXRjaCB0cmFuc2xhdGlvbiBvZiBJVFNNQ29yZQojIENvcHlyaWdodCAoQykgMjAwOSBNaWNoaWVsIEJlaWplbiA8bWljaGllbCAnYXQnIGJlZWZyZWVpdC5ubD4KIyAtLQojICRJZDogbmxfSVRTTUNvcmUucG0sdiAxLjMgMjAxMC8wNi8wMSAxOToyNToyMiBtYiBFeHAgJAojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjpubF9JVFNNQ29yZTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnVzZSB2YXJzIHF3KCRWRVJTSU9OKTsKJFZFUlNJT04gPSBxdygkUmV2aXNpb246IDEuMyAkKSBbMV07CgpzdWIgRGF0YSB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgIG15ICRMYW5nID0gJFNlbGYtPntUcmFuc2xhdGlvbn07CgogICAgcmV0dXJuIGlmIHJlZiAkTGFuZyBuZSAnSEFTSCc7CgogICAgJExhbmctPnsnQ3JpdGljYWxpdHknfSAgICAgICAgICAgICAgICAgICAgICAgICA9ICdVcmdlbnRpZSc7CiAgICAkTGFuZy0+eydJbXBhY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0ltcGFjdCc7CiAgICAkTGFuZy0+eydDcml0aWNhbGl0eSA8LT4gSW1wYWN0IDwtPiBQcmlvcml0eSd9ID0gJ1VyZ2VudGllIDwtPiBJbXBhY3QgPC0+IFByaW9yaXRlaXQnOwogICAgJExhbmctPnsnYWxsb2NhdGlvbid9ICAgICAgICAgICAgICAgICAgICAgICAgICA9ICd0b2VrZW5uZW4nOwogICAgJExhbmctPnsnUHJpb3JpdHkgYWxsb2NhdGlvbid9ICAgICAgICAgICAgICAgICA9ICdQcmlvcml0ZWl0IHRvZWtlbm5lbic7CiAgICAkTGFuZy0+eydSZWxldmFudCB0byd9ICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1ZhbiBiZWxhbmcgdm9vcic7CiAgICAkTGFuZy0+eydJbmNsdWRlcyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0JldmF0JzsKICAgICRMYW5nLT57J1BhcnQgb2YnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnT25kZXJkZWVsIHZhbic7CiAgICAkTGFuZy0+eydEZXBlbmRzIG9uJ30gICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0FmaGFua2VsaWprIHZhbic7CiAgICAkTGFuZy0+eydSZXF1aXJlZCBmb3InfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ0Jlbm9kaWdkIHZvb3InOwogICAgJExhbmctPnsnQ29ubmVjdGVkIHRvJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdWZXJib25kZW4gbWV0JzsKICAgICRMYW5nLT57J0FsdGVybmF0aXZlIHRvJ30gICAgICAgICAgICAgICAgICAgICAgPSAnQWx0ZXJuYXRpZWYgdm9vcic7CiAgICAkTGFuZy0+eydJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgID0gJ0luY2lkZW50IHN0YXR1cyc7CiAgICAkTGFuZy0+eydDdXJyZW50IEluY2lkZW50IFN0YXRlJ30gICAgICAgICAgICAgID0gJ0h1aWRpZ2UgaW5jaWRlbnQgc3RhdHVzJzsKICAgICRMYW5nLT57J0N1cnJlbnQgU3RhdGUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnSHVpZGlnZSBzdGF0dXMnOwogICAgJExhbmctPnsnU2VydmljZS1BcmVhJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdTZXJ2aWNlLUFyZWEnOwogICAgJExhbmctPnsnTWluaW11bSBUaW1lIEJldHdlZW4gSW5jaWRlbnRzJ30gICAgICA9ICdNaW5pbXVtdGlqZCB0dXNzZW4gaW5jaWRlbnRlbic7CiAgICAkTGFuZy0+eydTZXJ2aWNlIE92ZXJ2aWV3J30gICAgICAgICAgICAgICAgICAgID0gJ1NlcnZpY2Utb3ZlcnppY2h0JzsKICAgICRMYW5nLT57J1NMQSBPdmVydmlldyd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnU0xBLW92ZXJ6aWNodCc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNlcnZpY2VzJ30gICAgICAgICAgICAgICAgID0gJ0JpamJlaG9yZW5kZSBTZXJ2aWNlcyc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNMQXMnfSAgICAgICAgICAgICAgICAgICAgID0gJ0JpamJlaG9yZW5kZSBTTEFzJzsKICAgICRMYW5nLT57J0JhY2sgRW5kJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnQmFja2VuZCc7CiAgICAkTGFuZy0+eydEZW1vbnN0cmF0aW9uJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ0RlbW9uc3RyYXRpb24nOwogICAgJExhbmctPnsnRW5kIFVzZXIgU2VydmljZSd9ICAgICAgICAgICAgICAgICAgICA9ICdFaW5kZ2VicnVpa2VyIHNlcnZpY2UnOwogICAgJExhbmctPnsnRnJvbnQgRW5kJ30gICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdGcm9udGVuZCc7CiAgICAkTGFuZy0+eydJVCBNYW5hZ2VtZW50J30gICAgICAgICAgICAgICAgICAgICAgID0gJ0lUIE1hbmFnZW1lbnQnOwogICAgJExhbmctPnsnSVQgT3BlcmF0aW9uYWwnfSAgICAgICAgICAgICAgICAgICAgICA9ICdJVCBPcGVyYXRpb25zJzsKICAgICRMYW5nLT57J090aGVyJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnT3ZlcmlnJzsKICAgICRMYW5nLT57J1Byb2plY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnUHJvamVjdCc7CiAgICAkTGFuZy0+eydSZXBvcnRpbmcnfSAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1JhcHBvcnRhZ2UnOwogICAgJExhbmctPnsnVHJhaW5pbmcnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdUcmFpbmluZyc7CiAgICAkTGFuZy0+eydVbmRlcnBpbm5pbmcgQ29udHJhY3QnfSAgICAgICAgICAgICAgID0gJ1VuZGVycGlubmluZyBDb250cmFjdCc7CiAgICAkTGFuZy0+eydBdmFpbGFiaWxpdHknfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ0Jlc2NoaWtiYWFyaGVpZCc7CiAgICAkTGFuZy0+eydFcnJvcnMnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0ZvdXRlbic7CiAgICAkTGFuZy0+eydSZWNvdmVyeSBUaW1lJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ0hlcnN0ZWx0aWpkJzsKICAgICRMYW5nLT57J1Jlc29sdXRpb24gUmF0ZSd9ICAgICAgICAgICAgICAgICAgICAgPSAnT3Bsb3N0aWpkJzsKICAgICRMYW5nLT57J1Jlc3BvbnNlIFRpbWUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnUmVzcG9uc2lldGlqZCc7CiAgICAkTGFuZy0+eydUcmFuc2FjdGlvbnMnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1RyYW5zYWN0aWVzJzsKCiAgICByZXR1cm4gMTsKfQoKMTsK</File>
        <File Location="Kernel/Language/pl_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9wbF9JVFNNQ29yZS5wbSAtIHRoZSBwb2xpc2ggdHJhbnNsYXRpb24gb2YgSVRTTUNvcmUKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMCBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgQ29weXJpZ2h0IChDKSAyMDA4IE1hY2llaiBMb3N6YWpjCiMgLS0KIyAkSWQ6IHBsX0lUU01Db3JlLnBtLHYgMS42IDIwMTAvMDYvMDEgMTk6MjU6MjIgbWIgRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6cGxfSVRTTUNvcmU7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cgp1c2UgdmFycyBxdygkVkVSU0lPTik7CiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjYgJCkgWzFdOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICBteSAkTGFuZyA9ICRTZWxmLT57VHJhbnNsYXRpb259OwoKICAgIHJldHVybiBpZiByZWYgJExhbmcgbmUgJ0hBU0gnOwoKICAgICRMYW5nLT57J0NyaXRpY2FsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J0ltcGFjdCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J0NyaXRpY2FsaXR5IDwtPiBJbXBhY3QgPC0+IFByaW9yaXR5J30gPSAnJzsKICAgICRMYW5nLT57J2FsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J1ByaW9yaXR5IGFsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J1JlbGV2YW50IHRvJ30gICAgICAgICAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J0luY2x1ZGVzJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnWmF3aWVyYSc7CiAgICAkTGFuZy0+eydQYXJ0IG9mJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJyc7CiAgICAkTGFuZy0+eydEZXBlbmRzIG9uJ30gICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1phbGW/bmUgb2QnOwogICAgJExhbmctPnsnUmVxdWlyZWQgZm9yJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdQb3RyemVibmUgZG8nOwogICAgJExhbmctPnsnQ29ubmVjdGVkIHRvJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdQb2SzsWN6b25lIGRvJzsKICAgICRMYW5nLT57J0FsdGVybmF0aXZlIHRvJ30gICAgICAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J0luY2lkZW50IFN0YXRlJ30gICAgICAgICAgICAgICAgICAgICAgPSAnU3RhbiB6ZGFyemVuaWEnOwogICAgJExhbmctPnsnQ3VycmVudCBJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICA9ICdBa3R1YWxueSBzdGFuIHpkYXJ6ZW5pYSc7CiAgICAkTGFuZy0+eydDdXJyZW50IFN0YXRlJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ0FrdHVhbG55IHN0YW4nOwogICAgJExhbmctPnsnU2VydmljZS1BcmVhJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdTZWtjamEgc2Vyd2lzb3dhJzsKICAgICRMYW5nLT57J01pbmltdW0gVGltZSBCZXR3ZWVuIEluY2lkZW50cyd9ICAgICAgPSAnTWluaW1hbG55IGN6YXMgbWnqZHp5IHpkYXJ6ZW5pYW1pJzsKICAgICRMYW5nLT57J1NlcnZpY2UgT3ZlcnZpZXcnfSAgICAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J1NMQSBPdmVydmlldyd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J0Fzc29jaWF0ZWQgU2VydmljZXMnfSAgICAgICAgICAgICAgICAgPSAnUG+zsWN6b25lIHVzs3VnaSc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNMQXMnfSAgICAgICAgICAgICAgICAgICAgID0gJ1Bvs7Fjem9uZSBTTEEnOwogICAgJExhbmctPnsnQmFjayBFbmQnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnRGVtb25zdHJhdGlvbid9ICAgICAgICAgICAgICAgICAgICAgICA9ICdEZW1vbnN0cmFjamEnOwogICAgJExhbmctPnsnRW5kIFVzZXIgU2VydmljZSd9ICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnRnJvbnQgRW5kJ30gICAgICAgICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnSVQgTWFuYWdlbWVudCd9ICAgICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnSVQgT3BlcmF0aW9uYWwnfSAgICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnT3RoZXInfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdJbm5lJzsKICAgICRMYW5nLT57J1Byb2plY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnUHJvamVrdCc7CiAgICAkTGFuZy0+eydSZXBvcnRpbmcnfSAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1JhcG9ydG93YW5pZSc7CiAgICAkTGFuZy0+eydUcmFpbmluZyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1RyZW5pbmcnOwogICAgJExhbmctPnsnVW5kZXJwaW5uaW5nIENvbnRyYWN0J30gICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnQXZhaWxhYmlsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICA9ICdEb3N06nBub7bmJzsKICAgICRMYW5nLT57J0Vycm9ycyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnQrPqZHknOwogICAgJExhbmctPnsnT3RoZXInfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdJbm5lJzsKICAgICRMYW5nLT57J1JlY292ZXJ5IFRpbWUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnQ3phcyBvZHp5c2thbmlhJzsKICAgICRMYW5nLT57J1Jlc29sdXRpb24gUmF0ZSd9ICAgICAgICAgICAgICAgICAgICAgPSAnQ3phcyByb3p3abF6YW5pYSc7CiAgICAkTGFuZy0+eydSZXNwb25zZSBUaW1lJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ0N6YXMgb2Rwb3dpZWR6aSc7CiAgICAkTGFuZy0+eydUcmFuc2FjdGlvbnMnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1RyYW5zYWtjamUnOwoKICAgIHJldHVybiAxOwp9CgoxOwo=</File>
        <File Location="Kernel/Language/pt_BR_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9wdF9CUl9JVFNNQ29yZS5wbSAtIHRoZSBCcmF6aWxpYW4gdHJhbnNsYXRpb24gb2YgSVRTTUNvcmUKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMCBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgQ29weXJpZ2h0IChDKSAyMDEwIENyaXN0aWFubyBLb3JuZPZyZmVyLCBodHRwOi8vd3d3LmRvcmZlci5jb20uYnIvCiMgLS0KIyAkSWQ6IHB0X0JSX0lUU01Db3JlLnBtLHYgMS4yIDIwMTAvMDYvMDEgMTk6MjU6MjIgbWIgRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6cHRfQlJfSVRTTUNvcmU7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cgp1c2UgdmFycyBxdygkVkVSU0lPTik7CiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjIgJCkgWzFdOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICBteSAkTGFuZyA9ICRTZWxmLT57VHJhbnNsYXRpb259OwoKICAgIHJldHVybiBpZiByZWYgJExhbmcgbmUgJ0hBU0gnOwoKICAgICRMYW5nLT57J0NyaXRpY2FsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICAgPSAnQ3JpdGljYWxpZGFkZSc7CiAgICAkTGFuZy0+eydJbXBhY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0ltcGFjdG8nOwogICAgJExhbmctPnsnQ3JpdGljYWxpdHkgPC0+IEltcGFjdCA8LT4gUHJpb3JpdHknfSA9ICdDcml0aWNhbGlkYWRlIDwtPiBJbXBhY3RvIDwtPiBQcmlvcmlkYWRlJzsKICAgICRMYW5nLT57J2FsbG9jYXRlJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnQWxvY2FyJzsKICAgICRMYW5nLT57J1ByaW9yaXR5IGFsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgPSAnQWxvY2FyIHByaW9yaWRhZGUnOwogICAgJExhbmctPnsnUmVsZXZhbnQgdG8nfSAgICAgICAgICAgICAgICAgICAgICAgICA9ICdSZWxldmFudGUgYSc7CiAgICAkTGFuZy0+eydJbmNsdWRlcyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ0luY2x1aSc7CiAgICAkTGFuZy0+eydQYXJ0IG9mJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1BhcnRlIGRlJzsKICAgICRMYW5nLT57J0RlcGVuZHMgb24nfSAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnRGVwZW5kZSBkZSc7CiAgICAkTGFuZy0+eydSZXF1aXJlZCBmb3InfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1JlcXVpc2l0YWRvIHBvcic7CiAgICAkTGFuZy0+eydDb25uZWN0ZWQgdG8nfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ0NvbmVjdGFkbyBhJzsKICAgICRMYW5nLT57J0FsdGVybmF0aXZlIHRvJ30gICAgICAgICAgICAgICAgICAgICAgPSAnQWx0ZXJuYXRpdmEgYSc7CiAgICAkTGFuZy0+eydJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgID0gJ1NpdHVh5+NvIGRlIEluY2lkZW50ZXMnOwogICAgJExhbmctPnsnQ3VycmVudCBJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICA9ICdTaXR1YefjbyBBdHVhbCBkZSBJbmNpZGVudGVzJzsKICAgICRMYW5nLT57J0N1cnJlbnQgU3RhdGUnfSAgICAgICAgICAgICAgICAgICAgICAgPSAnU2l0dWHn428gQXR1YWwnOwogICAgJExhbmctPnsnU2VydmljZS1BcmVhJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICdTZXJ2aedvLcFyZWEnOwogICAgJExhbmctPnsnTWluaW11bSBUaW1lIEJldHdlZW4gSW5jaWRlbnRzJ30gICAgICA9ICdUZW1wbyBN7W5pbW8gZW50cmUgSW5jaWRlbnRlcyc7CiAgICAkTGFuZy0+eydTZXJ2aWNlIE92ZXJ2aWV3J30gICAgICAgICAgICAgICAgICAgID0gJ1Jlc3VtbyBkbyBTZXJ2aedvJzsKICAgICRMYW5nLT57J1NMQSBPdmVydmlldyd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnUmVzdW1vIGRhIFNMQSc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNlcnZpY2VzJ30gICAgICAgICAgICAgICAgID0gJ1NlcnZp529zIEFzc29jaWFkb3MnOwogICAgJExhbmctPnsnQXNzb2NpYXRlZCBTTEFzJ30gICAgICAgICAgICAgICAgICAgICA9ICdTTEFzIEFzc29jaWFkYXMnOwogICAgJExhbmctPnsnQmFjayBFbmQnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICcnOwogICAgJExhbmctPnsnRGVtb25zdHJhdGlvbid9ICAgICAgICAgICAgICAgICAgICAgICA9ICdEZW1vbnN0cmHn428nOwogICAgJExhbmctPnsnRW5kIFVzZXIgU2VydmljZSd9ICAgICAgICAgICAgICAgICAgICA9ICdTZXJ2aedvIGEgVXN14XJpbyBGaW5hbCc7CiAgICAkTGFuZy0+eydGcm9udCBFbmQnfSAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJyc7CiAgICAkTGFuZy0+eydJVCBNYW5hZ2VtZW50J30gICAgICAgICAgICAgICAgICAgICAgID0gJ0dlcmVuY2lhbWVudG8gZGUgVEknOwogICAgJExhbmctPnsnSVQgT3BlcmF0aW9uYWwnfSAgICAgICAgICAgICAgICAgICAgICA9ICdPcGVyYef1ZXMgZGUgVEknOwogICAgJExhbmctPnsnT3RoZXInfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdPdXRybyc7CiAgICAkTGFuZy0+eydQcm9qZWN0J30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ1Byb2pldG8nOwogICAgJExhbmctPnsnUmVwb3J0aW5nJ30gICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdSZWxhdPNyaW8nOwogICAgJExhbmctPnsnVHJhaW5pbmcnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdUcmVpbmFtZW50byc7CiAgICAkTGFuZy0+eydVbmRlcnBpbm5pbmcgQ29udHJhY3QnfSAgICAgICAgICAgICAgID0gJ0NvbnRyYXRvIGNvbSBUZXJjZWlyb3MgKFVDKSc7CiAgICAkTGFuZy0+eydBdmFpbGFiaWxpdHknfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ0F2YWxpYWJpbGlkYWRlJzsKICAgICRMYW5nLT57J0Vycm9ycyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnRXJyb3MnOwogICAgJExhbmctPnsnT3RoZXInfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICdPdXRybyc7CiAgICAkTGFuZy0+eydSZWNvdmVyeSBUaW1lJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ1RlbXBvIGRlIFJlY3VwZXJh5+NvJzsKICAgICRMYW5nLT57J1Jlc29sdXRpb24gUmF0ZSd9ICAgICAgICAgICAgICAgICAgICAgPSAnVGF4YSBkZSBSZXNvbHXn428nOwogICAgJExhbmctPnsnUmVzcG9uc2UgVGltZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICdUZW1wbyBkZSBSZXNwb3N0YSc7CiAgICAkTGFuZy0+eydUcmFuc2FjdGlvbnMnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ1RyYW5zYef1ZXMnOwoKICAgIHJldHVybiAxOwp9CgoxOwo=</File>
        <File Location="Kernel/Language/ru_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9ydV9JVFNNQ29yZS5wbSAtIHRoZSBydXNzaWFuIHRyYW5zbGF0aW9uIG9mIElUU01Db3JlCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTAgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIENvcHlyaWdodCAoQykgMjAwOCBFZ29yIFRzaWxlbmtvIDxiZzhzIGF0IHN5bWxpbmsucnU+CiMgLS0KIyAkSWQ6IHJ1X0lUU01Db3JlLnBtLHYgMS40IDIwMTAvMDYvMDEgMTk6MjU6MjIgbWIgRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6cnVfSVRTTUNvcmU7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cgp1c2UgdmFycyBxdygkVkVSU0lPTik7CiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjQgJCkgWzFdOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICBteSAkTGFuZyA9ICRTZWxmLT57VHJhbnNsYXRpb259OwoKICAgIHJldHVybiBpZiByZWYgJExhbmcgbmUgJ0hBU0gnOwoKICAgICRMYW5nLT57J0NyaXRpY2FsaXR5J30gICAgICAgICAgICAgICAgICAgICAgICAgPSAnyvDo8uj37e7x8vwnOwogICAgJExhbmctPnsnSW1wYWN0J30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfC6+j/7ejlJzsKICAgICRMYW5nLT57J0NyaXRpY2FsaXR5IDwtPiBJbXBhY3QgPC0+IFByaW9yaXR5J30gPSAnyvDo8uj37e7x8vwgPC0+IMLr6P/t6OUgPC0+IM/w6O7w6PLl8ic7CiAgICAkTGFuZy0+eydhbGxvY2F0aW9uJ30gICAgICAgICAgICAgICAgICAgICAgICAgID0gJ83g5+3g9+Xt6OUg7/Do7vDo8uXy7uIgJzsKICAgICRMYW5nLT57J1ByaW9yaXR5IGFsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgPSAnJzsKICAgICRMYW5nLT57J1JlbGV2YW50IHRvJ30gICAgICAgICAgICAgICAgICAgICAgICAgPSAnzvLt7vHo8vH/IOonOwogICAgJExhbmctPnsnSW5jbHVkZXMnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfC6uv+9+Dl8ic7CiAgICAkTGFuZy0+eydQYXJ0IG9mJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ9Hu8fLu6PIg6OcnOwogICAgJExhbmctPnsnRGVwZW5kcyBvbid9ICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfH4OLo8ejyIO7yJzsKICAgICRMYW5nLT57J1JlcXVpcmVkIGZvcid9ICAgICAgICAgICAgICAgICAgICAgICAgPSAn0vDl4fPl8vH/IOTr/yc7CiAgICAkTGFuZy0+eydDb25uZWN0ZWQgdG8nfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ9Hi/+fg7SDxJzsKICAgICRMYW5nLT57J0FsdGVybmF0aXZlIHRvJ30gICAgICAgICAgICAgICAgICAgICAgPSAnx+Ds5e3gIOTr/yc7CiAgICAkTGFuZy0+eydJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgID0gJ9Hu8fLu/+3o5SDo7fbo5OXt8uAnOwogICAgJExhbmctPnsnQ3VycmVudCBJbmNpZGVudCBTdGF0ZSd9ICAgICAgICAgICAgICA9ICfS5erz+eXlIPHu8fLu/+3o5SDo7fbo5OXt8uAnOwogICAgJExhbmctPnsnQ3VycmVudCBTdGF0ZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICfS5erz+eXlIPHu8fLu/+3o5Sc7CiAgICAkTGFuZy0+eydTZXJ2aWNlLUFyZWEnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ87h5+7wIPHl8OLo8e7iJzsKICAgICRMYW5nLT57J01pbmltdW0gVGltZSBCZXR3ZWVuIEluY2lkZW50cyd9ICAgICAgPSAnzOjt6Ozg6/zt7uUg4vDl7P8g7OXm5PMg6O326OTl7fLg7OgnOwogICAgJExhbmctPnsnU2VydmljZSBPdmVydmlldyd9ICAgICAgICAgICAgICAgICAgICA9ICfO4efu8CDx5fDi6PHu4ic7CiAgICAkTGFuZy0+eydTTEEgT3ZlcnZpZXcnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ87h5+7wIFNMQSc7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNlcnZpY2VzJ30gICAgICAgICAgICAgICAgID0gJ9Hi/+fg7e375SDx5fDi6PH7JzsKICAgICRMYW5nLT57J0Fzc29jaWF0ZWQgU0xBcyd9ICAgICAgICAgICAgICAgICAgICAgPSAn0eL/5+Dt7fvlIFNMQSc7CiAgICAkTGFuZy0+eydCYWNrIEVuZCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ9Hl8OLl8O3g/yD34PHy/Cc7CiAgICAkTGFuZy0+eydEZW1vbnN0cmF0aW9uJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ8Tl7O7t8fLw4Pbo/yc7CiAgICAkTGFuZy0+eydFbmQgVXNlciBTZXJ2aWNlJ30gICAgICAgICAgICAgICAgICAgID0gJ8ru7eX37fvpIPHl8OLo8SDv7uv85+7i4PLl6/8nOwogICAgJExhbmctPnsnRnJvbnQgRW5kJ30gICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfI7fLl8PTl6fHt4P8g9+Dx8vwnOwogICAgJExhbmctPnsnSVQgTWFuYWdlbWVudCd9ICAgICAgICAgICAgICAgICAgICAgICA9ICfT7/Dg4uvl7ejlIMjSJzsKICAgICRMYW5nLT57J0lUIE9wZXJhdGlvbmFsJ30gICAgICAgICAgICAgICAgICAgICAgPSAn3erx7+vz4PLg9uj/IMjSJzsKICAgICRMYW5nLT57J090aGVyJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnxPDz4+7lJzsKICAgICRMYW5nLT57J1Byb2plY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnz+vg7ejw7uLg7ejlJzsKICAgICRMYW5nLT57J1JlcG9ydGluZyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAn0e7x8uDi6+Xt6OUg7vL35fLu4ic7CiAgICAkTGFuZy0+eydUcmFpbmluZyd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ87h8/fl7ejlJzsKICAgICRMYW5nLT57J1VuZGVycGlubmluZyBDb250cmFjdCd9ICAgICAgICAgICAgICAgPSAnyu7t8vDg6vIg7+7k5OXw5uroJzsKICAgICRMYW5nLT57J0F2YWlsYWJpbGl0eSd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnxO7x8vPv7e7x8vwnOwogICAgJExhbmctPnsnRXJyb3JzJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfO+Ojh6ugnOwogICAgJExhbmctPnsnT3RoZXInfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICfE8PPj7uUnOwogICAgJExhbmctPnsnUmVjb3ZlcnkgVGltZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICfC8OXs/yDi7vHx8uDt7uLr5e3o/yc7CiAgICAkTGFuZy0+eydSZXNvbHV0aW9uIFJhdGUnfSAgICAgICAgICAgICAgICAgICAgID0gJ87y7e7x6PLl6/zt4P8g8eru8O7x8vwg8OX45e3o/yc7CiAgICAkTGFuZy0+eydSZXNwb25zZSBUaW1lJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ8Lw5ez/IPDl4Or26OgnOwogICAgJExhbmctPnsnVHJhbnNhY3Rpb25zJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICfU6O3g7fHu4vvlIO7v5fDg9ujoJzsKCiAgICByZXR1cm4gMTsKfQoKMTsK</File>
        <File Location="Kernel/Language/zh_CN_ITSMCore.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS96aF9DTl9JVFNNQ29yZS5wbSAtIHRoZSBDaGluZXNlIHNpbXBsZSB0cmFuc2xhdGlvbiBvZiBJVFNNQ29yZQojIENvcHlyaWdodCAoQykgMjAwMS0yMDEwIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLm9yZy8KIyAtLQojICRJZDogemhfQ05fSVRTTUNvcmUucG0sdiAxLjQgMjAxMC8wNi8wMSAxOToyNToyMiBtYiBFeHAgJAojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjp6aF9DTl9JVFNNQ29yZTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnVzZSB2YXJzIHF3KCRWRVJTSU9OKTsKJFZFUlNJT04gPSBxdygkUmV2aXNpb246IDEuNCAkKSBbMV07CgpzdWIgRGF0YSB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgIG15ICRMYW5nID0gJFNlbGYtPntUcmFuc2xhdGlvbn07CgogICAgcmV0dXJuIGlmIHJlZiAkTGFuZyBuZSAnSEFTSCc7CgogICAgJExhbmctPnsnQ3JpdGljYWxpdHknfSAgICAgICAgICAgICAgICAgICAgICAgICA9ICfOo7yxs8y2yCc7CiAgICAkTGFuZy0+eydJbXBhY3QnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ9Owz+y2yCc7CiAgICAkTGFuZy0+eydDcml0aWNhbGl0eSA8LT4gSW1wYWN0IDwtPiBQcmlvcml0eSd9ID0gJ86jvLGzzLbIIDwtPiDTsM/stsggPC0+INPFz8i8trHwJzsKICAgICRMYW5nLT57J2FsbG9jYXRpb24nfSAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnt9bF5Cc7CiAgICAkTGFuZy0+eydQcmlvcml0eSBhbGxvY2F0aW9uJ30gICAgICAgICAgICAgICAgID0gJyc7CiAgICAkTGFuZy0+eydSZWxldmFudCB0byd9ICAgICAgICAgICAgICAgICAgICAgICAgID0gJ8/gudgnOwogICAgJExhbmctPnsnSW5jbHVkZXMnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICew/MCoJzsKICAgICRMYW5nLT57J1BhcnQgb2YnfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnsr+31tPaJzsKICAgICRMYW5nLT57J0RlcGVuZHMgb24nfSAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnyKG+9tPaJzsKICAgICRMYW5nLT57J1JlcXVpcmVkIGZvcid9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnsdjQ6LXEJzsKICAgICRMYW5nLT57J0Nvbm5lY3RlZCB0byd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnway907W9JzsKICAgICRMYW5nLT57J0FsdGVybmF0aXZlIHRvJ30gICAgICAgICAgICAgICAgICAgICAgPSAn0aHU8bbUz/MnOwogICAgJExhbmctPnsnSW5jaWRlbnQgU3RhdGUnfSAgICAgICAgICAgICAgICAgICAgICA9ICfKwrz+17TMrCc7CiAgICAkTGFuZy0+eydDdXJyZW50IEluY2lkZW50IFN0YXRlJ30gICAgICAgICAgICAgID0gJ7Wxx7DKwrz+17TMrCc7CiAgICAkTGFuZy0+eydDdXJyZW50IFN0YXRlJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ8/W17QnOwogICAgJExhbmctPnsnU2VydmljZS1BcmVhJ30gICAgICAgICAgICAgICAgICAgICAgICA9ICe3/s7xx/gnOwogICAgJExhbmctPnsnTWluaW11bSBUaW1lIEJldHdlZW4gSW5jaWRlbnRzJ30gICAgICA9ICfX7rbMtcTKsbzk0+vKwrz+JzsKICAgICRMYW5nLT57J1NlcnZpY2UgT3ZlcnZpZXcnfSAgICAgICAgICAgICAgICAgICAgPSAnt/7O8bjFyvYnOwogICAgJExhbmctPnsnU0xBIE92ZXJ2aWV3J30gICAgICAgICAgICAgICAgICAgICAgICA9ICdTTEEguMXK9ic7CiAgICAkTGFuZy0+eydBc3NvY2lhdGVkIFNlcnZpY2VzJ30gICAgICAgICAgICAgICAgID0gJ7nYwaq1xLf+zvEnOwogICAgJExhbmctPnsnQXNzb2NpYXRlZCBTTEFzJ30gICAgICAgICAgICAgICAgICAgICA9ICe52MGqtcQgU0xBcyc7CiAgICAkTGFuZy0+eydCYWNrIEVuZCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ7rztssnOwogICAgJExhbmctPnsnRGVtb25zdHJhdGlvbid9ICAgICAgICAgICAgICAgICAgICAgICA9ICfKvre2JzsKICAgICRMYW5nLT57J0VuZCBVc2VyIFNlcnZpY2UnfSAgICAgICAgICAgICAgICAgICAgPSAn1+7W1dPDu6e3/s7xJzsKICAgICRMYW5nLT57J0Zyb250IEVuZCd9ICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnx7C2yyc7CiAgICAkTGFuZy0+eydJVCBNYW5hZ2VtZW50J30gICAgICAgICAgICAgICAgICAgICAgID0gJ0lUILncwO0nOwogICAgJExhbmctPnsnSVQgT3BlcmF0aW9uYWwnfSAgICAgICAgICAgICAgICAgICAgICA9ICdJVCDUy9OqJzsKICAgICRMYW5nLT57J090aGVyJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnxuTL/Cc7CiAgICAkTGFuZy0+eydQcm9qZWN0J30gICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gJ8/uxL8nOwogICAgJExhbmctPnsnUmVwb3J0aW5nJ30gICAgICAgICAgICAgICAgICAgICAgICAgICA9ICexqLjmJzsKICAgICRMYW5nLT57J1RyYWluaW5nJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAn0bXBtyc7CiAgICAkTGFuZy0+eydVbmRlcnBpbm5pbmcgQ29udHJhY3QnfSAgICAgICAgICAgICAgID0gJ9LAvt26z82sJzsKICAgICRMYW5nLT57J0F2YWlsYWJpbGl0eSd9ICAgICAgICAgICAgICAgICAgICAgICAgPSAnuam79cfpv/YnOwogICAgJExhbmctPnsnRXJyb3JzJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICe07c7zJzsKICAgICRMYW5nLT57J090aGVyJ30gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnxuTL/Cc7CiAgICAkTGFuZy0+eydSZWNvdmVyeSBUaW1lJ30gICAgICAgICAgICAgICAgICAgICAgID0gJ7vWuLTKsbzkJzsKICAgICRMYW5nLT57J1Jlc29sdXRpb24gUmF0ZSd9ICAgICAgICAgICAgICAgICAgICAgPSAnveK+9r34tsgnOwogICAgJExhbmctPnsnUmVzcG9uc2UgVGltZSd9ICAgICAgICAgICAgICAgICAgICAgICA9ICfP7NOmyrG85Cc7CiAgICAkTGFuZy0+eydUcmFuc2FjdGlvbnMnfSAgICAgICAgICAgICAgICAgICAgICAgID0gJ7270tcnOwoKICAgIHJldHVybiAxOwp9CgoxOwo=</File>
        <File Location="Kernel/Modules/AdminITSMCIPAllocate.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Modules/AdminService.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Modules/AdminSLA.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Modules/AgentITSMService.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9Nb2R1bGVzL0FnZW50SVRTTVNlcnZpY2UucG0gLSB0aGUgT1RSUzo6SVRTTSBTZXJ2aWNlIG1vZHVsZQojIENvcHlyaWdodCAoQykgMjAwMS0yMDEwIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLm9yZy8KIyAtLQojICRJZDogQWdlbnRJVFNNU2VydmljZS5wbSx2IDEuNyAyMDEwLzA0LzEzIDEyOjMwOjIxIHViIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TW9kdWxlczo6QWdlbnRJVFNNU2VydmljZTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnVzZSBLZXJuZWw6OlN5c3RlbTo6U2VydmljZTsKCnVzZSB2YXJzIHF3KCRWRVJTSU9OKTsKJFZFUlNJT04gPSBxdygkUmV2aXNpb246IDEuNyAkKSBbMV07CgpzdWIgbmV3IHsKICAgIG15ICggJFR5cGUsICVQYXJhbSApID0gQF87CgogICAgIyBhbGxvY2F0ZSBuZXcgaGFzaCBmb3Igb2JqZWN0CiAgICBteSAkU2VsZiA9IHslUGFyYW19OwogICAgYmxlc3MoICRTZWxmLCAkVHlwZSApOwoKICAgICMgY2hlY2sgbmVlZGVkIG9iamVjdHMKICAgIGZvciBteSAkT2JqZWN0IChxdyhDb25maWdPYmplY3QgUGFyYW1PYmplY3QgREJPYmplY3QgTGF5b3V0T2JqZWN0IExvZ09iamVjdCkpIHsKICAgICAgICBpZiAoICEkU2VsZi0+eyRPYmplY3R9ICkgewogICAgICAgICAgICAkU2VsZi0+e0xheW91dE9iamVjdH0tPkZhdGFsRXJyb3IoIE1lc3NhZ2UgPT4gIkdvdCBubyAkT2JqZWN0ISIgKTsKICAgICAgICB9CiAgICB9CiAgICAkU2VsZi0+e1NlcnZpY2VPYmplY3R9ID0gS2VybmVsOjpTeXN0ZW06OlNlcnZpY2UtPm5ldyglUGFyYW0pOwoKICAgIHJldHVybiAkU2VsZjsKfQoKc3ViIFJ1biB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgb3V0cHV0IG92ZXJ2aWV3CiAgICAkU2VsZi0+e0xheW91dE9iamVjdH0tPkJsb2NrKAogICAgICAgIE5hbWUgPT4gJ092ZXJ2aWV3JywKICAgICAgICBEYXRhID0+IHslUGFyYW19LAogICAgKTsKCiAgICAjIGdldCBzZXJ2aWNlIGxpc3QKICAgIG15ICVTZXJ2aWNlTGlzdCA9ICRTZWxmLT57U2VydmljZU9iamVjdH0tPlNlcnZpY2VMaXN0KAogICAgICAgIFVzZXJJRCA9PiAkU2VsZi0+e1VzZXJJRH0sCiAgICApOwoKICAgICMgYWRkIHN1ZmZpeCBmb3IgY29ycmVjdCBzb3J0aW5nCiAgICBmb3IgbXkgJFNlcnZpY2UgKCB2YWx1ZXMgJVNlcnZpY2VMaXN0ICkgewogICAgICAgICRTZXJ2aWNlIC49ICc6Oic7CiAgICB9CgogICAgIyBzZXQgaW5jaWRlbnQgc2lnbmFsCiAgICBteSAlSW5jaVNpZ25hbHMgPSAoCiAgICAgICAgb3BlcmF0aW9uYWwgPT4gJ2dyZWVubGVkJywKICAgICAgICB3YXJuaW5nICAgICA9PiAneWVsbG93bGVkJywKICAgICAgICBpbmNpZGVudCAgICA9PiAncmVkbGVkJywKICAgICk7CgogICAgIyBjaGVjayBpZiB0cmVldmlldyBpcyBlbmFibGVkCiAgICBteSAkVHJlZVZpZXcgPSAwOwogICAgaWYgKCAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnVGlja2V0OjpGcm9udGVuZDo6TGlzdFR5cGUnKSBlcSAndHJlZScgKSB7CiAgICAgICAgJFRyZWVWaWV3ID0gMTsKICAgIH0KCiAgICBteSAkQ3NzQ2xhc3MgPSAnJzsKICAgIGZvciBteSAkU2VydmljZUlEICggc29ydCB7ICRTZXJ2aWNlTGlzdHskYX0gY21wICRTZXJ2aWNlTGlzdHskYn0gfSBrZXlzICVTZXJ2aWNlTGlzdCApIHsKCiAgICAgICAgIyBzZXQgb3V0cHV0IG9iamVjdAogICAgICAgICRDc3NDbGFzcyA9ICRDc3NDbGFzcyBlcSAnc2VhcmNocGFzc2l2ZScgPyAnc2VhcmNoYWN0aXZlJyA6ICdzZWFyY2hwYXNzaXZlJzsKCiAgICAgICAgIyBnZXQgc2VydmljZSBkYXRhCiAgICAgICAgbXkgJVNlcnZpY2UgPSAkU2VsZi0+e1NlcnZpY2VPYmplY3R9LT5TZXJ2aWNlR2V0KAogICAgICAgICAgICBTZXJ2aWNlSUQgPT4gJFNlcnZpY2VJRCwKICAgICAgICAgICAgVXNlcklEICAgID0+ICRTZWxmLT57VXNlcklEfSwKICAgICAgICApOwoKICAgICAgICAjIG91dHB1dCByb3cKICAgICAgICBpZiAoJFRyZWVWaWV3KSB7CgogICAgICAgICAgICAjIGNhbGN1bGF0ZSBsZXZlbCBzcGFjZQogICAgICAgICAgICBteSBARnJhZ21lbnQgICA9IHNwbGl0ICc6OicsICRTZXJ2aWNle05hbWV9OwogICAgICAgICAgICBteSAkTGV2ZWwgICAgICA9IHNjYWxhciBARnJhZ21lbnQgLSAxOwogICAgICAgICAgICBteSAkTGV2ZWxTcGFjZSA9ICcmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsnIHggJExldmVsOwoKICAgICAgICAgICAgIyBvdXRwdXQgb3ZlcnZpZXcgcm93CiAgICAgICAgICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soCiAgICAgICAgICAgICAgICBOYW1lID0+ICdPdmVydmlld1JvdycsCiAgICAgICAgICAgICAgICBEYXRhID0+IHsKICAgICAgICAgICAgICAgICAgICAlU2VydmljZSwKICAgICAgICAgICAgICAgICAgICBMZXZlbFNwYWNlICAgID0+ICRMZXZlbFNwYWNlLAogICAgICAgICAgICAgICAgICAgIE5hbWUgICAgICAgICAgPT4gJFNlcnZpY2V7TmFtZVNob3J0fSwKICAgICAgICAgICAgICAgICAgICBDdXJJbmNpU2lnbmFsID0+ICRJbmNpU2lnbmFsc3sgJFNlcnZpY2V7Q3VySW5jaVN0YXRlVHlwZX0gfSwKICAgICAgICAgICAgICAgICAgICBDc3NDbGFzcyAgICAgID0+ICRDc3NDbGFzcywKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICk7CiAgICAgICAgfQogICAgICAgIGVsc2UgewoKICAgICAgICAgICAgIyBvdXRwdXQgb3ZlcnZpZXcgcm93CiAgICAgICAgICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soCiAgICAgICAgICAgICAgICBOYW1lID0+ICdPdmVydmlld1JvdycsCiAgICAgICAgICAgICAgICBEYXRhID0+IHsKICAgICAgICAgICAgICAgICAgICAlU2VydmljZSwKICAgICAgICAgICAgICAgICAgICBOYW1lICAgICAgICAgID0+ICRTZXJ2aWNle05hbWV9LAogICAgICAgICAgICAgICAgICAgIEN1ckluY2lTaWduYWwgPT4gJEluY2lTaWduYWxzeyAkU2VydmljZXtDdXJJbmNpU3RhdGVUeXBlfSB9LAogICAgICAgICAgICAgICAgICAgIENzc0NsYXNzICAgICAgPT4gJENzc0NsYXNzLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgKTsKICAgICAgICB9CiAgICB9CgogICAgIyBpbnZlc3RpZ2F0ZSByZWZyZXNoCiAgICBteSAkUmVmcmVzaCA9ICRTZWxmLT57VXNlclJlZnJlc2hUaW1lfSA/IDYwICogJFNlbGYtPntVc2VyUmVmcmVzaFRpbWV9IDogdW5kZWY7CgogICAgIyBvdXRwdXQgaGVhZGVyCiAgICBteSAkT3V0cHV0ID0gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5IZWFkZXIoCiAgICAgICAgVGl0bGUgICA9PiAnT3ZlcnZpZXcnLAogICAgICAgIFJlZnJlc2ggPT4gJFJlZnJlc2gsCiAgICApOwogICAgJE91dHB1dCAuPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPk5hdmlnYXRpb25CYXIoKTsKCiAgICAjIGdlbmVyYXRlIG91dHB1dAogICAgJE91dHB1dCAuPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPk91dHB1dCgKICAgICAgICBUZW1wbGF0ZUZpbGUgPT4gJ0FnZW50SVRTTVNlcnZpY2UnLAogICAgICAgIERhdGEgICAgICAgICA9PiBcJVBhcmFtLAogICAgKTsKICAgICRPdXRwdXQgLj0gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5Gb290ZXIoKTsKCiAgICByZXR1cm4gJE91dHB1dDsKfQoKMTsK</File>
        <File Location="Kernel/Modules/AgentITSMServicePrint.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Modules/AgentITSMServiceZoom.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Modules/AgentITSMSLA.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9Nb2R1bGVzL0FnZW50SVRTTVNMQS5wbSAtIHRoZSBPVFJTOjpJVFNNIFNMQSBtb2R1bGUKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAwOSBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgLS0KIyAkSWQ6IEFnZW50SVRTTVNMQS5wbSx2IDEuNCAyMDA5LzA1LzE4IDA5OjQ4OjM1IG1oIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TW9kdWxlczo6QWdlbnRJVFNNU0xBOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKdXNlIEtlcm5lbDo6U3lzdGVtOjpTTEE7Cgp1c2UgdmFycyBxdygkVkVSU0lPTik7CiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjQgJCkgWzFdOwoKc3ViIG5ldyB7CiAgICBteSAoICRUeXBlLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgYWxsb2NhdGUgbmV3IGhhc2ggZm9yIG9iamVjdAogICAgbXkgJFNlbGYgPSB7JVBhcmFtfTsKICAgIGJsZXNzKCAkU2VsZiwgJFR5cGUgKTsKCiAgICAjIGNoZWNrIG5lZWRlZCBvYmplY3RzCiAgICBmb3IgbXkgJE9iamVjdCAocXcoQ29uZmlnT2JqZWN0IFBhcmFtT2JqZWN0IERCT2JqZWN0IExheW91dE9iamVjdCBMb2dPYmplY3QpKSB7CiAgICAgICAgaWYgKCAhJFNlbGYtPnskT2JqZWN0fSApIHsKICAgICAgICAgICAgJFNlbGYtPntMYXlvdXRPYmplY3R9LT5GYXRhbEVycm9yKCBNZXNzYWdlID0+ICJHb3Qgbm8gJE9iamVjdCEiICk7CiAgICAgICAgfQogICAgfQogICAgJFNlbGYtPntTTEFPYmplY3R9ID0gS2VybmVsOjpTeXN0ZW06OlNMQS0+bmV3KCVQYXJhbSk7CgogICAgcmV0dXJuICRTZWxmOwp9CgpzdWIgUnVuIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBvdXRwdXQgb3ZlcnZpZXcKICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soCiAgICAgICAgTmFtZSA9PiAnT3ZlcnZpZXcnLAogICAgICAgIERhdGEgPT4geyVQYXJhbX0sCiAgICApOwoKICAgICMgZ2V0IHNsYSBsaXN0CiAgICBteSAlU0xBTGlzdCA9ICRTZWxmLT57U0xBT2JqZWN0fS0+U0xBTGlzdCgKICAgICAgICBVc2VySUQgPT4gJFNlbGYtPntVc2VySUR9LAogICAgKTsKCiAgICBteSAkQ3NzQ2xhc3MgPSAnJzsKICAgIGZvciBteSAkU0xBSUQgKCBzb3J0IHsgJFNMQUxpc3R7JGF9IGNtcCAkU0xBTGlzdHskYn0gfSBrZXlzICVTTEFMaXN0ICkgewoKICAgICAgICAjIHNldCBvdXRwdXQgb2JqZWN0CiAgICAgICAgJENzc0NsYXNzID0gJENzc0NsYXNzIGVxICdzZWFyY2hwYXNzaXZlJyA/ICdzZWFyY2hhY3RpdmUnIDogJ3NlYXJjaHBhc3NpdmUnOwoKICAgICAgICAjIGdldCBzbGEgZGF0YQogICAgICAgIG15ICVTTEEgPSAkU2VsZi0+e1NMQU9iamVjdH0tPlNMQUdldCgKICAgICAgICAgICAgU0xBSUQgID0+ICRTTEFJRCwKICAgICAgICAgICAgVXNlcklEID0+ICRTZWxmLT57VXNlcklEfSwKICAgICAgICApOwoKICAgICAgICAjIG91dHB1dCBvdmVydmlldyByb3cKICAgICAgICAkU2VsZi0+e0xheW91dE9iamVjdH0tPkJsb2NrKAogICAgICAgICAgICBOYW1lID0+ICdPdmVydmlld1JvdycsCiAgICAgICAgICAgIERhdGEgPT4gewogICAgICAgICAgICAgICAgJVNMQSwKICAgICAgICAgICAgICAgIENzc0NsYXNzID0+ICRDc3NDbGFzcywKICAgICAgICAgICAgfSwKICAgICAgICApOwogICAgfQoKICAgICMgaW52ZXN0aWdhdGUgcmVmcmVzaAogICAgbXkgJFJlZnJlc2ggPSAkU2VsZi0+e1VzZXJSZWZyZXNoVGltZX0gPyA2MCAqICRTZWxmLT57VXNlclJlZnJlc2hUaW1lfSA6IHVuZGVmOwoKICAgICMgb3V0cHV0IGhlYWRlcgogICAgbXkgJE91dHB1dCA9ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+SGVhZGVyKAogICAgICAgIFRpdGxlICAgPT4gJ092ZXJ2aWV3JywKICAgICAgICBSZWZyZXNoID0+ICRSZWZyZXNoLAogICAgKTsKICAgICRPdXRwdXQgLj0gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5OYXZpZ2F0aW9uQmFyKCk7CgogICAgIyBnZW5lcmF0ZSBvdXRwdXQKICAgICRPdXRwdXQgLj0gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5PdXRwdXQoCiAgICAgICAgVGVtcGxhdGVGaWxlID0+ICdBZ2VudElUU01TTEEnLAogICAgICAgIERhdGEgICAgICAgICA9PiBcJVBhcmFtLAogICAgKTsKICAgICRPdXRwdXQgLj0gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5Gb290ZXIoKTsKCiAgICByZXR1cm4gJE91dHB1dDsKfQoKMTsK</File>
        <File Location="Kernel/Modules/AgentITSMSLAPrint.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9Nb2R1bGVzL0FnZW50SVRTTVNMQVByaW50LnBtIC0gcHJpbnQgbGF5b3V0IGZvciBpdHNtIHNsYSBhZ2VudCBpbnRlcmZhY2UKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAwOSBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgLS0KIyAkSWQ6IEFnZW50SVRTTVNMQVByaW50LnBtLHYgMS4zIDIwMDkvMDUvMTggMDk6NDg6MzUgbWggRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpNb2R1bGVzOjpBZ2VudElUU01TTEFQcmludDsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnVzZSBLZXJuZWw6OlN5c3RlbTo6UERGOwp1c2UgS2VybmVsOjpTeXN0ZW06OlNMQTsKCnVzZSB2YXJzIHF3KCRWRVJTSU9OKTsKJFZFUlNJT04gPSBxdygkUmV2aXNpb246IDEuMyAkKSBbMV07CgpzdWIgbmV3IHsKICAgIG15ICggJFR5cGUsICVQYXJhbSApID0gQF87CgogICAgIyBhbGxvY2F0ZSBuZXcgaGFzaCBmb3Igb2JqZWN0CiAgICBteSAkU2VsZiA9IHslUGFyYW19OwogICAgYmxlc3MoICRTZWxmLCAkVHlwZSApOwoKICAgICMgY2hlY2sgbmVlZGVkIG9iamVjdHMKICAgIGZvciBteSAkT2JqZWN0IChxdyhDb25maWdPYmplY3QgUGFyYW1PYmplY3QgREJPYmplY3QgTGF5b3V0T2JqZWN0IExvZ09iamVjdCkpIHsKICAgICAgICBpZiAoICEkU2VsZi0+eyRPYmplY3R9ICkgewogICAgICAgICAgICAkU2VsZi0+e0xheW91dE9iamVjdH0tPkZhdGFsRXJyb3IoIE1lc3NhZ2UgPT4gIkdvdCBubyAkT2JqZWN0ISIgKTsKICAgICAgICB9CiAgICB9CiAgICAkU2VsZi0+e1BERk9iamVjdH0gPSBLZXJuZWw6OlN5c3RlbTo6UERGLT5uZXcoJVBhcmFtKTsKICAgICRTZWxmLT57U0xBT2JqZWN0fSA9IEtlcm5lbDo6U3lzdGVtOjpTTEEtPm5ldyglUGFyYW0pOwoKICAgIHJldHVybiAkU2VsZjsKfQoKc3ViIFJ1biB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgZ2V0IHBhcmFtcwogICAgbXkgJFNMQUlEID0gJFNlbGYtPntQYXJhbU9iamVjdH0tPkdldFBhcmFtKCBQYXJhbSA9PiAiU0xBSUQiICk7CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGlmICggISRTTEFJRCApIHsKICAgICAgICByZXR1cm4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5FcnJvclNjcmVlbigKICAgICAgICAgICAgTWVzc2FnZSA9PiAiTm8gU0xBSUQgaXMgZ2l2ZW4hIiwKICAgICAgICAgICAgQ29tbWVudCA9PiAnUGxlYXNlIGNvbnRhY3QgdGhlIGFkbWluLicsCiAgICAgICAgKTsKICAgIH0KCiAgICAjIGdldCBzbGEKICAgIG15ICVTTEEgPSAkU2VsZi0+e1NMQU9iamVjdH0tPlNMQUdldCgKICAgICAgICBTTEFJRCAgPT4gJFNMQUlELAogICAgICAgIFVzZXJJRCA9PiAkU2VsZi0+e1VzZXJJRH0sCiAgICApOwogICAgaWYgKCAhJFNMQXtTTEFJRH0gKSB7CiAgICAgICAgcmV0dXJuICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+RXJyb3JTY3JlZW4oCiAgICAgICAgICAgIE1lc3NhZ2UgPT4gIlNMQUlEICRTTEFJRCBub3QgZm91bmQgaW4gZGF0YWJhc2UhIiwKICAgICAgICAgICAgQ29tbWVudCA9PiAnUGxlYXNlIGNvbnRhY3QgdGhlIGFkbWluLicsCiAgICAgICAgKTsKICAgIH0KCiAgICAjIGdldCBjYWxlbmRhciBuYW1lCiAgICBpZiAoICRTTEF7Q2FsZW5kYXJ9ICkgewogICAgICAgICRTTEF7Q2FsZW5kYXJOYW1lfSA9ICJDYWxlbmRhciAkU0xBe0NhbGVuZGFyfSAtICIKICAgICAgICAgICAgLiAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCggIlRpbWVab25lOjpDYWxlbmRhciIgLiAkU0xBe0NhbGVuZGFyfSAuICJOYW1lIiApOwogICAgfQogICAgZWxzZSB7CiAgICAgICAgJFNMQXtDYWxlbmRhck5hbWV9ID0gJ0NhbGVuZGFyIERlZmF1bHQnOwogICAgfQoKICAgICMgZ2V0IHVzZXIgZGF0YSAoY3JlYXRlIGJ5KQogICAgbXkgJUNyZWF0ZUJ5ID0gJFNlbGYtPntVc2VyT2JqZWN0fS0+R2V0VXNlckRhdGEoCiAgICAgICAgVXNlcklEID0+ICRTTEF7Q3JlYXRlQnl9LAogICAgICAgIENhY2hlZCA9PiAxLAogICAgKTsKCiAgICAjIGdldCB1c2VyIGRhdGEgKGNoYW5nZSBieSkKICAgIG15ICVDaGFuZ2VCeSA9ICRTZWxmLT57VXNlck9iamVjdH0tPkdldFVzZXJEYXRhKAogICAgICAgIFVzZXJJRCA9PiAkU0xBe0NoYW5nZUJ5fSwKICAgICAgICBDYWNoZWQgPT4gMSwKICAgICk7CgogICAgIyBnZW5lcmF0ZSBwZGYgb3V0cHV0CiAgICBpZiAoICRTZWxmLT57UERGT2JqZWN0fSApIHsKICAgICAgICBteSAlUGFnZTsKICAgICAgICBteSAkVXJsID0gJyAnOwogICAgICAgIGlmICggJEVOVntSRVFVRVNUX1VSSX0gKSB7CiAgICAgICAgICAgICRVcmwKICAgICAgICAgICAgICAgID0gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoJ0h0dHBUeXBlJykgLiAnOi8vJwogICAgICAgICAgICAgICAgLiAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnRlFETicpCiAgICAgICAgICAgICAgICAuICRFTlZ7UkVRVUVTVF9VUkl9OwogICAgICAgIH0KCiAgICAgICAgIyBnZXQgbWF4aW11bSBudW1iZXIgb2YgcGFnZXMKICAgICAgICAkUGFnZXtNYXhQYWdlc30gPSAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnUERGOjpNYXhQYWdlcycpOwogICAgICAgIGlmICggISRQYWdle01heFBhZ2VzfSB8fCAkUGFnZXtNYXhQYWdlc30gPCAxIHx8ICRQYWdle01heFBhZ2VzfSA+IDEwMDAgKSB7CiAgICAgICAgICAgICRQYWdle01heFBhZ2VzfSA9IDEwMDsKICAgICAgICB9CiAgICAgICAgJFBhZ2V7TWFyZ2luVG9wfSAgICA9IDMwOwogICAgICAgICRQYWdle01hcmdpblJpZ2h0fSAgPSA0MDsKICAgICAgICAkUGFnZXtNYXJnaW5Cb3R0b219ID0gNDA7CiAgICAgICAgJFBhZ2V7TWFyZ2luTGVmdH0gICA9IDQwOwogICAgICAgICRQYWdle0hlYWRlclJpZ2h0fSAgPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPntMYW5ndWFnZU9iamVjdH0tPkdldCgnU0xBJyk7CiAgICAgICAgJFBhZ2V7SGVhZGxpbmVMZWZ0fSA9ICRTTEF7TmFtZX07CiAgICAgICAgJFBhZ2V7SGVhZGxpbmVSaWdodH0KICAgICAgICAgICAgPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPntMYW5ndWFnZU9iamVjdH0tPkdldCgncHJpbnRlZCBieScpIC4gJyAnCiAgICAgICAgICAgIC4gJFNlbGYtPntVc2VyRmlyc3RuYW1lfSAuICcgJwogICAgICAgICAgICAuICRTZWxmLT57VXNlckxhc3RuYW1lfSAuICcgKCcKICAgICAgICAgICAgLiAkU2VsZi0+e1VzZXJFbWFpbH0gLiAnKSAnCiAgICAgICAgICAgIC4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5PdXRwdXQoIFRlbXBsYXRlID0+ICckRW52eyJUaW1lIn0nICk7CiAgICAgICAgJFBhZ2V7Rm9vdGVyTGVmdH0gPSAkVXJsOwogICAgICAgICRQYWdle1BhZ2VUZXh0fSAgID0gJFNlbGYtPntMYXlvdXRPYmplY3R9LT57TGFuZ3VhZ2VPYmplY3R9LT5HZXQoJ1BhZ2UnKTsKICAgICAgICAkUGFnZXtQYWdlQ291bnR9ICA9IDE7CgogICAgICAgICMgY3JlYXRlIG5ldyBwZGYgZG9jdW1lbnQKICAgICAgICAkU2VsZi0+e1BERk9iamVjdH0tPkRvY3VtZW50TmV3KAogICAgICAgICAgICBUaXRsZSAgPT4gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoJ1Byb2R1Y3QnKSAuICc6ICcgLiAkU0xBe05hbWV9LAogICAgICAgICAgICBFbmNvZGUgPT4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT57VXNlckNoYXJzZXR9LAogICAgICAgICk7CgogICAgICAgICMgY3JlYXRlIGZpcnN0IHBkZiBwYWdlCiAgICAgICAgJFNlbGYtPntQREZPYmplY3R9LT5QYWdlTmV3KAogICAgICAgICAgICAlUGFnZSwKICAgICAgICAgICAgRm9vdGVyUmlnaHQgPT4gJFBhZ2V7UGFnZVRleHR9IC4gJyAnIC4gJFBhZ2V7UGFnZUNvdW50fSwKICAgICAgICApOwogICAgICAgICRQYWdle1BhZ2VDb3VudH0rKzsKCiAgICAgICAgIyBvdXRwdXQgZ2VuZXJhbCBpbmZvcwogICAgICAgICRTZWxmLT5fUERGT3V0cHV0R2VuZXJhbEluZm9zKAogICAgICAgICAgICBQYWdlICAgICA9PiBcJVBhZ2UsCiAgICAgICAgICAgIFNMQSAgICAgID0+IFwlU0xBLAogICAgICAgICAgICBDcmVhdGVCeSA9PiBcJUNyZWF0ZUJ5LAogICAgICAgICAgICBDaGFuZ2VCeSA9PiBcJUNoYW5nZUJ5LAogICAgICAgICk7CgogICAgICAgICMgb3V0cHV0IGRldGFpbGVkIGluZm9zCiAgICAgICAgJFNlbGYtPl9QREZPdXRwdXREZXRhaWxlZEluZm9zKAogICAgICAgICAgICBQYWdlID0+IFwlUGFnZSwKICAgICAgICAgICAgU0xBICA9PiBcJVNMQSwKICAgICAgICApOwoKICAgICAgICAjIGNyZWF0ZSBmaWxlIG5hbWUKICAgICAgICBteSAkRmlsZW5hbWUgPSAkU2VsZi0+e01haW5PYmplY3R9LT5GaWxlbmFtZUNsZWFuVXAoCiAgICAgICAgICAgIEZpbGVuYW1lID0+ICRTTEF7TmFtZX0sCiAgICAgICAgICAgIFR5cGUgICAgID0+ICdBdHRhY2htZW50JywKICAgICAgICApOwogICAgICAgIG15ICggJHMsICRtLCAkaCwgJEQsICRNLCAkWSApID0gJFNlbGYtPntUaW1lT2JqZWN0fS0+U3lzdGVtVGltZTJEYXRlKAogICAgICAgICAgICBTeXN0ZW1UaW1lID0+ICRTZWxmLT57VGltZU9iamVjdH0tPlN5c3RlbVRpbWUoKSwKICAgICAgICApOwogICAgICAgICRNID0gc3ByaW50ZiggIiUwMmQiLCAkTSApOwogICAgICAgICREID0gc3ByaW50ZiggIiUwMmQiLCAkRCApOwogICAgICAgICRoID0gc3ByaW50ZiggIiUwMmQiLCAkaCApOwogICAgICAgICRtID0gc3ByaW50ZiggIiUwMmQiLCAkbSApOwoKICAgICAgICAjIHJldHVybiB0aGUgcGRmIGRvY3VtZW50CiAgICAgICAgcmV0dXJuICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QXR0YWNobWVudCgKICAgICAgICAgICAgRmlsZW5hbWUgICAgPT4gJ3NsYV8nIC4gJEZpbGVuYW1lIC4gIl8kWS0kTS0kRFxfJGgtJG0ucGRmIiwKICAgICAgICAgICAgQ29udGVudFR5cGUgPT4gJ2FwcGxpY2F0aW9uL3BkZicsCiAgICAgICAgICAgIENvbnRlbnQgICAgID0+ICRTZWxmLT57UERGT2JqZWN0fS0+RG9jdW1lbnRPdXRwdXQoKSwKICAgICAgICAgICAgVHlwZSAgICAgICAgPT4gJ2F0dGFjaG1lbnQnLAogICAgICAgICk7CiAgICB9CgogICAgIyBnZW5lcmF0ZSBodG1sIG91dHB1dAogICAgZWxzZSB7CgogICAgICAgICMgb3V0cHV0IGhlYWRlcgogICAgICAgIG15ICRPdXRwdXQgPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPlByaW50SGVhZGVyKCBWYWx1ZSA9PiAkU0xBe05hbWV9ICk7CgogICAgICAgICMgZ2VuZXJhdGUgb3V0cHV0CiAgICAgICAgJE91dHB1dCAuPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPk91dHB1dCgKICAgICAgICAgICAgVGVtcGxhdGVGaWxlID0+ICdBZ2VudElUU01TTEFQcmludCcsCiAgICAgICAgICAgIERhdGEgICAgICAgICA9PiB7CiAgICAgICAgICAgICAgICBDcmVhdGVCeVVzZXJMb2dpbiAgICAgPT4gJENyZWF0ZUJ5e1VzZXJMb2dpbn0sCiAgICAgICAgICAgICAgICBDcmVhdGVCeVVzZXJGaXJzdG5hbWUgPT4gJENyZWF0ZUJ5e1VzZXJGaXJzdG5hbWV9LAogICAgICAgICAgICAgICAgQ3JlYXRlQnlVc2VyTGFzdG5hbWUgID0+ICRDcmVhdGVCeXtVc2VyTGFzdG5hbWV9LAogICAgICAgICAgICAgICAgQ2hhbmdlQnlVc2VyTG9naW4gICAgID0+ICRDaGFuZ2VCeXtVc2VyTG9naW59LAogICAgICAgICAgICAgICAgQ2hhbmdlQnlVc2VyRmlyc3RuYW1lID0+ICRDaGFuZ2VCeXtVc2VyRmlyc3RuYW1lfSwKICAgICAgICAgICAgICAgIENoYW5nZUJ5VXNlckxhc3RuYW1lICA9PiAkQ2hhbmdlQnl7VXNlckxhc3RuYW1lfSwKICAgICAgICAgICAgICAgICVTTEEsCiAgICAgICAgICAgIH0sCiAgICAgICAgKTsKCiAgICAgICAgIyBhZGQgZm9vdGVyCiAgICAgICAgJE91dHB1dCAuPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPlByaW50Rm9vdGVyKCk7CgogICAgICAgICMgcmV0dXJuIG91dHB1dAogICAgICAgIHJldHVybiAkT3V0cHV0OwogICAgfQp9CgpzdWIgX1BERk91dHB1dEdlbmVyYWxJbmZvcyB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVlZGVkIHN0dWZmCiAgICBmb3IgbXkgJEFyZ3VtZW50IChxdyhQYWdlIFNMQSBDcmVhdGVCeSBDaGFuZ2VCeSkpIHsKICAgICAgICBpZiAoICFkZWZpbmVkICRQYXJhbXskQXJndW1lbnR9ICkgewogICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgICAgICBNZXNzYWdlICA9PiAiTmVlZCAkQXJndW1lbnQhIgogICAgICAgICAgICApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgfQoKICAgICMgY3JlYXRlIGxlZnQgdGFibGUKICAgIG15ICRUYWJsZUxlZnQgPSBbCiAgICAgICAgewogICAgICAgICAgICBLZXkgICA9PiAkU2VsZi0+e0xheW91dE9iamVjdH0tPntMYW5ndWFnZU9iamVjdH0tPkdldCgnU0xBJykgLiAnOicsCiAgICAgICAgICAgIFZhbHVlID0+ICRQYXJhbXtTTEF9LT57TmFtZX0sCiAgICAgICAgfSwKICAgIF07CgogICAgIyBjcmVhdGUgcmlnaHQgdGFibGUKICAgIG15ICRUYWJsZVJpZ2h0ID0gWwogICAgICAgIHsKICAgICAgICAgICAgS2V5ICAgPT4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT57TGFuZ3VhZ2VPYmplY3R9LT5HZXQoJ0NyZWF0ZWQnKSAuICc6JywKICAgICAgICAgICAgVmFsdWUgPT4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5PdXRwdXQoCiAgICAgICAgICAgICAgICBUZW1wbGF0ZSA9PiAnJFRpbWVMb25neyIkRGF0YXsiQ3JlYXRlVGltZSJ9In0nLAogICAgICAgICAgICAgICAgRGF0YSAgICAgPT4gXCV7ICRQYXJhbXtTTEF9IH0sCiAgICAgICAgICAgICksCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgIEtleSAgID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCdDcmVhdGVkIGJ5JykgLiAnOicsCiAgICAgICAgICAgIFZhbHVlID0+ICRQYXJhbXtDcmVhdGVCeX0tPntVc2VyTG9naW59IC4gJyAoJwogICAgICAgICAgICAgICAgLiAkUGFyYW17Q3JlYXRlQnl9LT57VXNlckZpcnN0bmFtZX0gLiAnICcKICAgICAgICAgICAgICAgIC4gJFBhcmFte0NyZWF0ZUJ5fS0+e1VzZXJMYXN0bmFtZX0gLiAnKScsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgIEtleSAgID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCdMYXN0IGNoYW5nZWQnKSAuICc6JywKICAgICAgICAgICAgVmFsdWUgPT4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5PdXRwdXQoCiAgICAgICAgICAgICAgICBUZW1wbGF0ZSA9PiAnJFRpbWVMb25neyIkRGF0YXsiQ2hhbmdlVGltZSJ9In0nLAogICAgICAgICAgICAgICAgRGF0YSAgICAgPT4gXCV7ICRQYXJhbXtTTEF9IH0sCiAgICAgICAgICAgICksCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgIEtleSAgID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCdMYXN0IGNoYW5nZWQgYnknKSAuICc6JywKICAgICAgICAgICAgVmFsdWUgPT4gJFBhcmFte0NoYW5nZUJ5fS0+e1VzZXJMb2dpbn0gLiAnICgnCiAgICAgICAgICAgICAgICAuICRQYXJhbXtDaGFuZ2VCeX0tPntVc2VyRmlyc3RuYW1lfSAuICcgJwogICAgICAgICAgICAgICAgLiAkUGFyYW17Q2hhbmdlQnl9LT57VXNlckxhc3RuYW1lfSAuICcpJywKICAgICAgICB9LAogICAgXTsKCiAgICBteSAkUm93cyA9IEB7JFRhYmxlTGVmdH07CiAgICBpZiAoIEB7JFRhYmxlUmlnaHR9ID4gJFJvd3MgKSB7CiAgICAgICAgJFJvd3MgPSBAeyRUYWJsZVJpZ2h0fTsKICAgIH0KCiAgICBteSAlVGFibGVQYXJhbTsKICAgIGZvciBteSAkUm93ICggMSAuLiAkUm93cyApIHsKICAgICAgICAkUm93LS07CiAgICAgICAgJFRhYmxlUGFyYW17Q2VsbERhdGF9WyRSb3ddWzBde0NvbnRlbnR9ICAgICAgICAgPSAkVGFibGVMZWZ0LT5bJFJvd10tPntLZXl9OwogICAgICAgICRUYWJsZVBhcmFte0NlbGxEYXRhfVskUm93XVswXXtGb250fSAgICAgICAgICAgID0gJ1Byb3BvcnRpb25hbEJvbGQnOwogICAgICAgICRUYWJsZVBhcmFte0NlbGxEYXRhfVskUm93XVsxXXtDb250ZW50fSAgICAgICAgID0gJFRhYmxlTGVmdC0+WyRSb3ddLT57VmFsdWV9OwogICAgICAgICRUYWJsZVBhcmFte0NlbGxEYXRhfVskUm93XVsyXXtDb250ZW50fSAgICAgICAgID0gJyAnOwogICAgICAgICRUYWJsZVBhcmFte0NlbGxEYXRhfVskUm93XVsyXXtCYWNrZ3JvdW5kQ29sb3J9ID0gJyNGRkZGRkYnOwogICAgICAgICRUYWJsZVBhcmFte0NlbGxEYXRhfVskUm93XVszXXtDb250ZW50fSAgICAgICAgID0gJFRhYmxlUmlnaHQtPlskUm93XS0+e0tleX07CiAgICAgICAgJFRhYmxlUGFyYW17Q2VsbERhdGF9WyRSb3ddWzNde0ZvbnR9ICAgICAgICAgICAgPSAnUHJvcG9ydGlvbmFsQm9sZCc7CiAgICAgICAgJFRhYmxlUGFyYW17Q2VsbERhdGF9WyRSb3ddWzRde0NvbnRlbnR9ICAgICAgICAgPSAkVGFibGVSaWdodC0+WyRSb3ddLT57VmFsdWV9OwogICAgfQogICAgJFRhYmxlUGFyYW17Q29sdW1uRGF0YX1bMF17V2lkdGh9ID0gNTA7CiAgICAkVGFibGVQYXJhbXtDb2x1bW5EYXRhfVsxXXtXaWR0aH0gPSAyMDAuNTsKICAgICRUYWJsZVBhcmFte0NvbHVtbkRhdGF9WzJde1dpZHRofSA9IDQ7CiAgICAkVGFibGVQYXJhbXtDb2x1bW5EYXRhfVszXXtXaWR0aH0gPSA4MDsKICAgICRUYWJsZVBhcmFte0NvbHVtbkRhdGF9WzRde1dpZHRofSA9IDE3MC41OwogICAgJFRhYmxlUGFyYW17VHlwZX0gICAgICAgICAgICAgICAgID0gJ0N1dCc7CiAgICAkVGFibGVQYXJhbXtCb3JkZXJ9ICAgICAgICAgICAgICAgPSAwOwogICAgJFRhYmxlUGFyYW17Rm9udFNpemV9ICAgICAgICAgICAgID0gNjsKICAgICRUYWJsZVBhcmFte0JhY2tncm91bmRDb2xvckV2ZW59ICA9ICcjQUFBQUFBJzsKICAgICRUYWJsZVBhcmFte0JhY2tncm91bmRDb2xvck9kZH0gICA9ICcjREREREREJzsKICAgICRUYWJsZVBhcmFte1BhZGRpbmd9ICAgICAgICAgICAgICA9IDE7CiAgICAkVGFibGVQYXJhbXtQYWRkaW5nVG9wfSAgICAgICAgICAgPSAzOwogICAgJFRhYmxlUGFyYW17UGFkZGluZ0JvdHRvbX0gICAgICAgID0gMzsKCiAgICAjIG91dHB1dCB0YWJsZQogICAgUEFHRToKICAgIGZvciAoICRQYXJhbXtQYWdlfS0+e1BhZ2VDb3VudH0gLi4gJFBhcmFte1BhZ2V9LT57TWF4UGFnZXN9ICkgewoKICAgICAgICAjIG91dHB1dCB0YWJsZSAob3IgYSBmcmFnbWVudCBvZiBpdCkKICAgICAgICAlVGFibGVQYXJhbSA9ICRTZWxmLT57UERGT2JqZWN0fS0+VGFibGUoJVRhYmxlUGFyYW0pOwoKICAgICAgICAjIHN0b3Agb3V0cHV0IG9yIG91dHB1dCBuZXh0IHBhZ2UKICAgICAgICBsYXN0IFBBR0UgaWYgJFRhYmxlUGFyYW17U3RhdGV9OwoKICAgICAgICAkU2VsZi0+e1BERk9iamVjdH0tPlBhZ2VOZXcoCiAgICAgICAgICAgICV7ICRQYXJhbXtQYWdlfSB9LAogICAgICAgICAgICBGb290ZXJSaWdodCA9PiAkUGFyYW17UGFnZX0tPntQYWdlVGV4dH0gLiAnICcgLiAkUGFyYW17UGFnZX0tPntQYWdlQ291bnR9CiAgICAgICAgKTsKICAgICAgICAkUGFyYW17UGFnZX0tPntQYWdlQ291bnR9Kys7CiAgICB9CiAgICByZXR1cm4gMTsKfQoKc3ViIF9QREZPdXRwdXREZXRhaWxlZEluZm9zIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGZvciBteSAkQXJndW1lbnQgKHF3KFBhZ2UgU0xBKSkgewogICAgICAgIGlmICggIWRlZmluZWQgJFBhcmFteyRBcmd1bWVudH0gKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgICAgIE1lc3NhZ2UgID0+ICJOZWVkICRBcmd1bWVudCEiCiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgIyBzZXQgbmV3IHBvc2l0aW9uCiAgICAkU2VsZi0+e1BERk9iamVjdH0tPlBvc2l0aW9uU2V0KAogICAgICAgIE1vdmUgPT4gJ3JlbGF0aXYnLAogICAgICAgIFkgICAgPT4gLTE1LAogICAgKTsKCiAgICAjIG91dHB1dCBoZWFkbGluZQogICAgJFNlbGYtPntQREZPYmplY3R9LT5UZXh0KAogICAgICAgIFRleHQgICAgID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCdTTEEnKSwKICAgICAgICBIZWlnaHQgICA9PiA3LAogICAgICAgIFR5cGUgICAgID0+ICdDdXQnLAogICAgICAgIEZvbnQgICAgID0+ICdQcm9wb3J0aW9uYWxCb2xkSXRhbGljJywKICAgICAgICBGb250U2l6ZSA9PiA3LAogICAgICAgIENvbG9yICAgID0+ICcjNjY2NjY2JywKICAgICk7CgogICAgIyBzZXQgbmV3IHBvc2l0aW9uCiAgICAkU2VsZi0+e1BERk9iamVjdH0tPlBvc2l0aW9uU2V0KAogICAgICAgIE1vdmUgPT4gJ3JlbGF0aXYnLAogICAgICAgIFkgICAgPT4gLTQsCiAgICApOwoKICAgICMgY3JlYXRlIHRhYmxlCiAgICBteSAkVGFibGUgPSBbCiAgICAgICAgewogICAgICAgICAgICBLZXkgICA9PiAkU2VsZi0+e0xheW91dE9iamVjdH0tPntMYW5ndWFnZU9iamVjdH0tPkdldCgnU0xBJykgLiAnOicsCiAgICAgICAgICAgIFZhbHVlID0+ICRQYXJhbXtTTEF9LT57TmFtZX0sCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgIEtleSAgID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCdUeXBlJykgLiAnOicsCiAgICAgICAgICAgIFZhbHVlID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCAkUGFyYW17U0xBfS0+e1R5cGV9ICksCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgIEtleSAgID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCdDYWxlbmRhcicpIC4gJzonLAogICAgICAgICAgICBWYWx1ZSA9PiAkU2VsZi0+e0xheW91dE9iamVjdH0tPntMYW5ndWFnZU9iamVjdH0tPkdldCggJFBhcmFte1NMQX0tPntDYWxlbmRhck5hbWV9ICksCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgIEtleSA9PiAkU2VsZi0+e0xheW91dE9iamVjdH0tPntMYW5ndWFnZU9iamVjdH0tPkdldCgnRmlyc3QgUmVzcG9uc2UgVGltZScpIC4gJzonLAogICAgICAgICAgICBWYWx1ZSA9PgogICAgICAgICAgICAgICAgJFNlbGYtPntMYXlvdXRPYmplY3R9LT57TGFuZ3VhZ2VPYmplY3R9LT5HZXQoICRQYXJhbXtTTEF9LT57Rmlyc3RSZXNwb25zZVRpbWV9ICkKICAgICAgICAgICAgICAgIC4gJyAnCiAgICAgICAgICAgICAgICAuICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCdtaW51dGVzJyksCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgIEtleSAgID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCdVcGRhdGUgVGltZScpIC4gJzonLAogICAgICAgICAgICBWYWx1ZSA9PiAkU2VsZi0+e0xheW91dE9iamVjdH0tPntMYW5ndWFnZU9iamVjdH0tPkdldCggJFBhcmFte1NMQX0tPntVcGRhdGVUaW1lfSApIC4gJyAnCiAgICAgICAgICAgICAgICAuICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCdtaW51dGVzJyksCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgIEtleSAgID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCdTb2x1dGlvbiBUaW1lJykgLiAnOicsCiAgICAgICAgICAgIFZhbHVlID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCAkUGFyYW17U0xBfS0+e1NvbHV0aW9uVGltZX0gKQogICAgICAgICAgICAgICAgLiAnICcKICAgICAgICAgICAgICAgIC4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT57TGFuZ3VhZ2VPYmplY3R9LT5HZXQoJ21pbnV0ZXMnKSwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgS2V5ID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KCdNaW5pbXVtIFRpbWUgQmV0d2VlbiBJbmNpZGVudHMnKQogICAgICAgICAgICAgICAgLiAnOicsCiAgICAgICAgICAgIFZhbHVlID0+ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+e0xhbmd1YWdlT2JqZWN0fS0+R2V0KAogICAgICAgICAgICAgICAgJFBhcmFte1NMQX0tPntNaW5UaW1lQmV0d2VlbkluY2lkZW50c30sCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAuICcgJwogICAgICAgICAgICAgICAgLiAkU2VsZi0+e0xheW91dE9iamVjdH0tPntMYW5ndWFnZU9iamVjdH0tPkdldCgnbWludXRlcycpLAogICAgICAgIH0sCiAgICBdOwogICAgbXkgJVRhYmxlUGFyYW07CiAgICBteSAkUm93cyA9IEB7JFRhYmxlfTsKICAgIGZvciBteSAkUm93ICggMSAuLiAkUm93cyApIHsKICAgICAgICAkUm93LS07CiAgICAgICAgJFRhYmxlUGFyYW17Q2VsbERhdGF9WyRSb3ddWzBde0NvbnRlbnR9ID0gJFRhYmxlLT5bJFJvd10tPntLZXl9OwogICAgICAgICRUYWJsZVBhcmFte0NlbGxEYXRhfVskUm93XVswXXtGb250fSAgICA9ICdQcm9wb3J0aW9uYWxCb2xkJzsKICAgICAgICAkVGFibGVQYXJhbXtDZWxsRGF0YX1bJFJvd11bMV17Q29udGVudH0gPSAkVGFibGUtPlskUm93XS0+e1ZhbHVlfTsKICAgIH0KICAgICRUYWJsZVBhcmFte0NvbHVtbkRhdGF9WzBde1dpZHRofSA9IDEyMDsKICAgICRUYWJsZVBhcmFte0NvbHVtbkRhdGF9WzFde1dpZHRofSA9IDM5MTsKICAgICRUYWJsZVBhcmFte1R5cGV9ICAgICAgICAgICAgICAgICA9ICdDdXQnOwogICAgJFRhYmxlUGFyYW17Qm9yZGVyfSAgICAgICAgICAgICAgID0gMDsKICAgICRUYWJsZVBhcmFte0ZvbnRTaXplfSAgICAgICAgICAgICA9IDY7CiAgICAkVGFibGVQYXJhbXtCYWNrZ3JvdW5kQ29sb3J9ICAgICAgPSAnI0RERERERCc7CiAgICAkVGFibGVQYXJhbXtQYWRkaW5nfSAgICAgICAgICAgICAgPSAxOwogICAgJFRhYmxlUGFyYW17UGFkZGluZ1RvcH0gICAgICAgICAgID0gMzsKICAgICRUYWJsZVBhcmFte1BhZGRpbmdCb3R0b219ICAgICAgICA9IDM7CgogICAgIyBvdXRwdXQgdGFibGUKICAgIFBBR0U6CiAgICBmb3IgKCAkUGFyYW17UGFnZX0tPntQYWdlQ291bnR9IC4uICRQYXJhbXtQYWdlfS0+e01heFBhZ2VzfSApIHsKCiAgICAgICAgIyBvdXRwdXQgdGFibGUgKG9yIGEgZnJhZ21lbnQgb2YgaXQpCiAgICAgICAgJVRhYmxlUGFyYW0gPSAkU2VsZi0+e1BERk9iamVjdH0tPlRhYmxlKCVUYWJsZVBhcmFtKTsKCiAgICAgICAgIyBzdG9wIG91dHB1dCBvciBvdXRwdXQgbmV4dCBwYWdlCiAgICAgICAgbGFzdCBQQUdFIGlmICRUYWJsZVBhcmFte1N0YXRlfTsKCiAgICAgICAgJFNlbGYtPntQREZPYmplY3R9LT5QYWdlTmV3KAogICAgICAgICAgICAleyAkUGFyYW17UGFnZX0gfSwKICAgICAgICAgICAgRm9vdGVyUmlnaHQgPT4gJFBhcmFte1BhZ2V9LT57UGFnZVRleHR9IC4gJyAnIC4gJFBhcmFte1BhZ2V9LT57UGFnZUNvdW50fQogICAgICAgICk7CiAgICAgICAgJFBhcmFte1BhZ2V9LT57UGFnZUNvdW50fSsrOwogICAgfQogICAgcmV0dXJuIDE7Cn0KCjE7Cg==</File>
        <File Location="Kernel/Modules/AgentITSMSLAZoom.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9Nb2R1bGVzL0FnZW50SVRTTVNMQVpvb20ucG0gLSB0aGUgT1RSUzo6SVRTTSBTTEEgem9vbSBtb2R1bGUKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAwOSBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgLS0KIyAkSWQ6IEFnZW50SVRTTVNMQVpvb20ucG0sdiAxLjYgMjAwOS8wNS8xOCAwOTo0ODozNSBtaCBFeHAgJAojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Ok1vZHVsZXM6OkFnZW50SVRTTVNMQVpvb207Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cgp1c2UgS2VybmVsOjpTeXN0ZW06OlNlcnZpY2U7CnVzZSBLZXJuZWw6OlN5c3RlbTo6U0xBOwoKdXNlIHZhcnMgcXcoJFZFUlNJT04pOwokVkVSU0lPTiA9IHF3KCRSZXZpc2lvbjogMS42ICQpIFsxXTsKCnN1YiBuZXcgewogICAgbXkgKCAkVHlwZSwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGFsbG9jYXRlIG5ldyBoYXNoIGZvciBvYmplY3QKICAgIG15ICRTZWxmID0geyVQYXJhbX07CiAgICBibGVzcyggJFNlbGYsICRUeXBlICk7CgogICAgIyBjaGVjayBuZWVkZWQgb2JqZWN0cwogICAgZm9yIG15ICRPYmplY3QgKHF3KENvbmZpZ09iamVjdCBQYXJhbU9iamVjdCBEQk9iamVjdCBMYXlvdXRPYmplY3QgTG9nT2JqZWN0KSkgewogICAgICAgIGlmICggISRTZWxmLT57JE9iamVjdH0gKSB7CiAgICAgICAgICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+RmF0YWxFcnJvciggTWVzc2FnZSA9PiAiR290IG5vICRPYmplY3QhIiApOwogICAgICAgIH0KICAgIH0KICAgICRTZWxmLT57U2VydmljZU9iamVjdH0gPSBLZXJuZWw6OlN5c3RlbTo6U2VydmljZS0+bmV3KCVQYXJhbSk7CiAgICAkU2VsZi0+e1NMQU9iamVjdH0gICAgID0gS2VybmVsOjpTeXN0ZW06OlNMQS0+bmV3KCVQYXJhbSk7CgogICAgcmV0dXJuICRTZWxmOwp9CgpzdWIgUnVuIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBnZXQgcGFyYW1zCiAgICBteSAkU0xBSUQgPSAkU2VsZi0+e1BhcmFtT2JqZWN0fS0+R2V0UGFyYW0oIFBhcmFtID0+ICJTTEFJRCIgKTsKCiAgICAjIGNoZWNrIG5lZWRlZCBzdHVmZgogICAgaWYgKCAhJFNMQUlEICkgewogICAgICAgIHJldHVybiAkU2VsZi0+e0xheW91dE9iamVjdH0tPkVycm9yU2NyZWVuKAogICAgICAgICAgICBNZXNzYWdlID0+ICJObyBTTEFJRCBpcyBnaXZlbiEiLAogICAgICAgICAgICBDb21tZW50ID0+ICdQbGVhc2UgY29udGFjdCB0aGUgYWRtaW4uJywKICAgICAgICApOwogICAgfQoKICAgICMgZ2V0IHNsYQogICAgbXkgJVNMQSA9ICRTZWxmLT57U0xBT2JqZWN0fS0+U0xBR2V0KAogICAgICAgIFNMQUlEICA9PiAkU0xBSUQsCiAgICAgICAgVXNlcklEID0+ICRTZWxmLT57VXNlcklEfSwKICAgICk7CiAgICBpZiAoICEkU0xBe1NMQUlEfSApIHsKICAgICAgICByZXR1cm4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5FcnJvclNjcmVlbigKICAgICAgICAgICAgTWVzc2FnZSA9PiAiU0xBSUQgJFNMQUlEIG5vdCBmb3VuZCBpbiBkYXRhYmFzZSEiLAogICAgICAgICAgICBDb21tZW50ID0+ICdQbGVhc2UgY29udGFjdCB0aGUgYWRtaW4uJywKICAgICAgICApOwogICAgfQoKICAgICMgZ2V0IGNhbGVuZGFyIG5hbWUKICAgIGlmICggJFNMQXtDYWxlbmRhcn0gKSB7CiAgICAgICAgJFNMQXtDYWxlbmRhck5hbWV9ID0gIkNhbGVuZGFyICRTTEF7Q2FsZW5kYXJ9IC0gIgogICAgICAgICAgICAuICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCAiVGltZVpvbmU6OkNhbGVuZGFyIiAuICRTTEF7Q2FsZW5kYXJ9IC4gIk5hbWUiICk7CiAgICB9CiAgICBlbHNlIHsKICAgICAgICAkU0xBe0NhbGVuZGFyTmFtZX0gPSAnQ2FsZW5kYXIgRGVmYXVsdCc7CiAgICB9CgogICAgIyBydW4gY29uZmlnIGl0ZW0gbWVudSBtb2R1bGVzCiAgICBpZiAoIHJlZiAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnSVRTTVNMQTo6RnJvbnRlbmQ6Ok1lbnVNb2R1bGUnKSBlcSAnSEFTSCcgKSB7CiAgICAgICAgbXkgJU1lbnVzICAgPSAleyAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnSVRTTVNMQTo6RnJvbnRlbmQ6Ok1lbnVNb2R1bGUnKSB9OwogICAgICAgIG15ICRDb3VudGVyID0gMDsKICAgICAgICBmb3IgbXkgJE1lbnUgKCBzb3J0IGtleXMgJU1lbnVzICkgewoKICAgICAgICAgICAgIyBsb2FkIG1vZHVsZQogICAgICAgICAgICBpZiAoICRTZWxmLT57TWFpbk9iamVjdH0tPlJlcXVpcmUoICRNZW51c3skTWVudX0tPntNb2R1bGV9ICkgKSB7CiAgICAgICAgICAgICAgICBteSAkT2JqZWN0ID0gJE1lbnVzeyRNZW51fS0+e01vZHVsZX0tPm5ldygKICAgICAgICAgICAgICAgICAgICAleyRTZWxmfSwKICAgICAgICAgICAgICAgICAgICBTTEFJRCA9PiAkU2VsZi0+e1NMQUlEfSwKICAgICAgICAgICAgICAgICk7CgogICAgICAgICAgICAgICAgIyBydW4gbW9kdWxlCiAgICAgICAgICAgICAgICAkQ291bnRlciA9ICRPYmplY3QtPlJ1bigKICAgICAgICAgICAgICAgICAgICAlUGFyYW0sCiAgICAgICAgICAgICAgICAgICAgU0xBICAgICA9PiBcJVNMQSwKICAgICAgICAgICAgICAgICAgICBDb3VudGVyID0+ICRDb3VudGVyLAogICAgICAgICAgICAgICAgICAgIENvbmZpZyAgPT4gJE1lbnVzeyRNZW51fSwKICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5GYXRhbEVycm9yKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgaWYgKCAkU0xBe1NlcnZpY2VJRHN9ICYmIHJlZiAkU0xBe1NlcnZpY2VJRHN9IGVxICdBUlJBWScgJiYgQHsgJFNMQXtTZXJ2aWNlSURzfSB9ICkgewoKICAgICAgICAjIG91dHB1dCByb3cKICAgICAgICAkU2VsZi0+e0xheW91dE9iamVjdH0tPkJsb2NrKAogICAgICAgICAgICBOYW1lID0+ICdTZXJ2aWNlJywKICAgICAgICApOwoKICAgICAgICAjIGNyZWF0ZSBzZXJ2aWNlIGxpc3QKICAgICAgICBteSAlU2VydmljZUxpc3Q7CiAgICAgICAgZm9yIG15ICRTZXJ2aWNlSUQgKCBAeyAkU0xBe1NlcnZpY2VJRHN9IH0gKSB7CgogICAgICAgICAgICAjIGdldCBzZXJ2aWNlIGRhdGEKICAgICAgICAgICAgbXkgJVNlcnZpY2UgPSAkU2VsZi0+e1NlcnZpY2VPYmplY3R9LT5TZXJ2aWNlR2V0KAogICAgICAgICAgICAgICAgU2VydmljZUlEID0+ICRTZXJ2aWNlSUQsCiAgICAgICAgICAgICAgICBVc2VySUQgICAgPT4gJFNlbGYtPntVc2VySUR9LAogICAgICAgICAgICApOwoKICAgICAgICAgICAgIyBhZGQgc2VydmljZSB0byBoYXNoCiAgICAgICAgICAgICRTZXJ2aWNlTGlzdHskU2VydmljZUlEfSA9IFwlU2VydmljZTsKICAgICAgICB9CgogICAgICAgICMgc2V0IGluY2lkZW50IHNpZ25hbAogICAgICAgIG15ICVJbmNpU2lnbmFscyA9ICgKICAgICAgICAgICAgb3BlcmF0aW9uYWwgPT4gJ2dyZWVubGVkJywKICAgICAgICAgICAgd2FybmluZyAgICAgPT4gJ3llbGxvd2xlZCcsCiAgICAgICAgICAgIGluY2lkZW50ICAgID0+ICdyZWRsZWQnLAogICAgICAgICk7CgogICAgICAgIG15ICRDc3NDbGFzcyA9ICcnOwogICAgICAgIGZvciBteSAkU2VydmljZUlEICgKICAgICAgICAgICAgc29ydCB7ICRTZXJ2aWNlTGlzdHskYX0tPntOYW1lfSBjbXAgJFNlcnZpY2VMaXN0eyRifS0+e05hbWV9IH0KICAgICAgICAgICAga2V5cyAlU2VydmljZUxpc3QKICAgICAgICAgICAgKQogICAgICAgIHsKCiAgICAgICAgICAgICMgc2V0IG91dHB1dCBvYmplY3QKICAgICAgICAgICAgJENzc0NsYXNzID0gJENzc0NsYXNzIGVxICdzZWFyY2hwYXNzaXZlJyA/ICdzZWFyY2hhY3RpdmUnIDogJ3NlYXJjaHBhc3NpdmUnOwoKICAgICAgICAgICAgIyBvdXRwdXQgcm93CiAgICAgICAgICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soCiAgICAgICAgICAgICAgICBOYW1lID0+ICdTZXJ2aWNlUm93JywKICAgICAgICAgICAgICAgIERhdGEgPT4gewogICAgICAgICAgICAgICAgICAgICV7ICRTZXJ2aWNlTGlzdHskU2VydmljZUlEfSB9LAogICAgICAgICAgICAgICAgICAgIEN1ckluY2lTaWduYWwgPT4gJEluY2lTaWduYWxzeyAkU2VydmljZUxpc3R7JFNlcnZpY2VJRH0tPntDdXJJbmNpU3RhdGVUeXBlfSB9LAogICAgICAgICAgICAgICAgICAgIENzc0NsYXNzICAgICAgPT4gJENzc0NsYXNzLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgKTsKICAgICAgICB9CiAgICB9CgogICAgIyBnZXQgY3JlYXRlIHVzZXIgZGF0YQogICAgbXkgJUNyZWF0ZVVzZXIgPSAkU2VsZi0+e1VzZXJPYmplY3R9LT5HZXRVc2VyRGF0YSgKICAgICAgICBVc2VySUQgPT4gJFNMQXtDcmVhdGVCeX0sCiAgICAgICAgQ2FjaGVkID0+IDEsCiAgICApOwogICAgZm9yIG15ICRQb3N0Zml4IChxdyhVc2VyTG9naW4gVXNlckZpcnN0bmFtZSBVc2VyTGFzdG5hbWUpKSB7CiAgICAgICAgJFNMQXsgJ0NyZWF0ZScgLiAkUG9zdGZpeCB9ID0gJENyZWF0ZVVzZXJ7JFBvc3RmaXh9OwogICAgfQoKICAgICMgZ2V0IGNoYW5nZSB1c2VyIGRhdGEKICAgIG15ICVDaGFuZ2VVc2VyID0gJFNlbGYtPntVc2VyT2JqZWN0fS0+R2V0VXNlckRhdGEoCiAgICAgICAgVXNlcklEID0+ICRTTEF7Q2hhbmdlQnl9LAogICAgICAgIENhY2hlZCA9PiAxLAogICAgKTsKICAgIGZvciBteSAkUG9zdGZpeCAocXcoVXNlckxvZ2luIFVzZXJGaXJzdG5hbWUgVXNlckxhc3RuYW1lKSkgewogICAgICAgICRTTEF7ICdDaGFuZ2UnIC4gJFBvc3RmaXggfSA9ICRDaGFuZ2VVc2VyeyRQb3N0Zml4fTsKICAgIH0KCiAgICAjIG91dHB1dCBoZWFkZXIKICAgIG15ICRPdXRwdXQgPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPkhlYWRlcigpOwogICAgJE91dHB1dCAuPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPk5hdmlnYXRpb25CYXIoKTsKCiAgICAjIGdlbmVyYXRlIG91dHB1dAogICAgJE91dHB1dCAuPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPk91dHB1dCgKICAgICAgICBUZW1wbGF0ZUZpbGUgPT4gJ0FnZW50SVRTTVNMQVpvb20nLAogICAgICAgIERhdGEgICAgICAgICA9PiB7CiAgICAgICAgICAgICVQYXJhbSwKICAgICAgICAgICAgJVNMQSwKICAgICAgICB9LAogICAgKTsKICAgICRPdXRwdXQgLj0gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5Gb290ZXIoKTsKCiAgICByZXR1cm4gJE91dHB1dDsKfQoKMTsK</File>
        <File Location="Kernel/Output/HTML/ITSMServiceMenuGeneric.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9PdXRwdXQvSFRNTC9JVFNNU2VydmljZU1lbnVHZW5lcmljLnBtCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMDkgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIC0tCiMgJElkOiBJVFNNU2VydmljZU1lbnVHZW5lcmljLnBtLHYgMS4yIDIwMDkvMDUvMTggMDk6NDg6NDYgbWggRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpPdXRwdXQ6OkhUTUw6OklUU01TZXJ2aWNlTWVudUdlbmVyaWM7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cgp1c2UgdmFycyBxdygkVkVSU0lPTik7CiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjIgJCkgWzFdOwoKc3ViIG5ldyB7CiAgICBteSAoICRUeXBlLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgYWxsb2NhdGUgbmV3IGhhc2ggZm9yIG9iamVjdAogICAgbXkgJFNlbGYgPSB7fTsKICAgIGJsZXNzKCAkU2VsZiwgJFR5cGUgKTsKCiAgICAjIGNoZWNrIG5lZWRlZCBvYmplY3RzCiAgICBmb3IgbXkgJE9iamVjdCAocXcoQ29uZmlnT2JqZWN0IExvZ09iamVjdCBEQk9iamVjdCBMYXlvdXRPYmplY3QgU2VydmljZU9iamVjdCBVc2VySUQpKSB7CiAgICAgICAgJFNlbGYtPnskT2JqZWN0fSA9ICRQYXJhbXskT2JqZWN0fSB8fCBkaWUgIkdvdCBubyAkT2JqZWN0ISI7CiAgICB9CgogICAgcmV0dXJuICRTZWxmOwp9CgpzdWIgUnVuIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGlmICggISRQYXJhbXtTZXJ2aWNlfSApIHsKICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZyggUHJpb3JpdHkgPT4gJ2Vycm9yJywgTWVzc2FnZSA9PiAnTmVlZCBTZXJ2aWNlIScgKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgIyBnZXQgZ3JvdXBzCiAgICBteSAkR3JvdXBzUm8KICAgICAgICA9ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdGcm9udGVuZDo6TW9kdWxlJyktPnsgJFBhcmFte0NvbmZpZ30tPntBY3Rpb259IH0tPntHcm91cFJvfQogICAgICAgIHx8IFtdOwogICAgbXkgJEdyb3Vwc1J3CiAgICAgICAgPSAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnRnJvbnRlbmQ6Ok1vZHVsZScpLT57ICRQYXJhbXtDb25maWd9LT57QWN0aW9ufSB9LT57R3JvdXB9CiAgICAgICAgfHwgW107CgogICAgIyBzZXQgYWNjZXNzCiAgICBteSAkQWNjZXNzID0gMTsKCiAgICAjIGNoZWNrIHBlcm1pc3Npb24KICAgIGlmICggJFBhcmFte0NvbmZpZ30tPntBY3Rpb259ICYmICggQHskR3JvdXBzUm99IHx8IEB7JEdyb3Vwc1J3fSApICkgewoKICAgICAgICAjIHNldCBhY2Nlc3MKICAgICAgICAkQWNjZXNzID0gMDsKCiAgICAgICAgIyBmaW5kIHJlYWQgb25seSBncm91cHMKICAgICAgICBST0dST1VQOgogICAgICAgIGZvciBteSAkUm9Hcm91cCAoIEB7JEdyb3Vwc1JvfSApIHsKCiAgICAgICAgICAgIG5leHQgUk9HUk9VUCBpZiAhJFNlbGYtPntMYXlvdXRPYmplY3R9LT57IlVzZXJJc0dyb3VwUm9bJFJvR3JvdXBdIn07CiAgICAgICAgICAgIG5leHQgUk9HUk9VUCBpZiAkU2VsZi0+e0xheW91dE9iamVjdH0tPnsiVXNlcklzR3JvdXBSb1skUm9Hcm91cF0ifSBuZSAnWWVzJzsKCiAgICAgICAgICAgICMgc2V0IGFjY2VzcwogICAgICAgICAgICAkQWNjZXNzID0gMTsKICAgICAgICAgICAgbGFzdCBST0dST1VQOwogICAgICAgIH0KCiAgICAgICAgIyBmaW5kIHJlYWQgd3JpdGUgZ3JvdXBzCiAgICAgICAgUldHUk9VUDoKICAgICAgICBmb3IgbXkgJFJ3R3JvdXAgKCBAeyRHcm91cHNSd30gKSB7CgogICAgICAgICAgICBuZXh0IFJXR1JPVVAgaWYgISRTZWxmLT57TGF5b3V0T2JqZWN0fS0+eyJVc2VySXNHcm91cFskUndHcm91cF0ifTsKICAgICAgICAgICAgbmV4dCBSV0dST1VQIGlmICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+eyJVc2VySXNHcm91cFskUndHcm91cF0ifSBuZSAnWWVzJzsKCiAgICAgICAgICAgICMgc2V0IGFjY2VzcwogICAgICAgICAgICAkQWNjZXNzID0gMTsKICAgICAgICAgICAgbGFzdCBSV0dST1VQOwogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gJFBhcmFte0NvdW50ZXJ9IGlmICEkQWNjZXNzOwoKICAgICMgb3V0cHV0IG1lbnUgYmxvY2sKICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soIE5hbWUgPT4gJ01lbnUnICk7CgogICAgIyBvdXRwdXQgc2VwZXJhdG9yCiAgICBpZiAoICRQYXJhbXtDb3VudGVyfSApIHsKICAgICAgICAkU2VsZi0+e0xheW91dE9iamVjdH0tPkJsb2NrKCBOYW1lID0+ICdNZW51SXRlbVNwbGl0JyApOwogICAgfQoKICAgICMgb3V0cHV0IG1lbnUgaXRlbQogICAgJFNlbGYtPntMYXlvdXRPYmplY3R9LT5CbG9jaygKICAgICAgICBOYW1lID0+ICdNZW51SXRlbScsCiAgICAgICAgRGF0YSA9PiB7CiAgICAgICAgICAgICVQYXJhbSwKICAgICAgICAgICAgJXsgJFBhcmFte1NlcnZpY2V9IH0sCiAgICAgICAgICAgICV7ICRQYXJhbXtDb25maWd9IH0sCiAgICAgICAgfSwKICAgICk7CiAgICAkUGFyYW17Q291bnRlcn0rKzsKCiAgICByZXR1cm4gJFBhcmFte0NvdW50ZXJ9Owp9CgoxOwo=</File>
        <File Location="Kernel/Output/HTML/ITSMServiceMenuLink.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9PdXRwdXQvSFRNTC9JVFNNU2VydmljZU1lbnVMaW5rLnBtCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMDkgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIC0tCiMgJElkOiBJVFNNU2VydmljZU1lbnVMaW5rLnBtLHYgMS40IDIwMDkvMDUvMTggMDk6NDg6NDYgbWggRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpPdXRwdXQ6OkhUTUw6OklUU01TZXJ2aWNlTWVudUxpbms7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cgp1c2UgdmFycyBxdygkVkVSU0lPTik7CiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjQgJCkgWzFdOwoKc3ViIG5ldyB7CiAgICBteSAoICRUeXBlLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgYWxsb2NhdGUgbmV3IGhhc2ggZm9yIG9iamVjdAogICAgbXkgJFNlbGYgPSB7fTsKICAgIGJsZXNzKCAkU2VsZiwgJFR5cGUgKTsKCiAgICAjIGNoZWNrIG5lZWRlZCBvYmplY3RzCiAgICBmb3IgbXkgJE9iamVjdCAoCiAgICAgICAgcXcoQ29uZmlnT2JqZWN0IExvZ09iamVjdCBEQk9iamVjdCBMYXlvdXRPYmplY3QgU2VydmljZU9iamVjdCBMaW5rT2JqZWN0IFVzZXJJRCkKICAgICAgICApCiAgICB7CiAgICAgICAgJFNlbGYtPnskT2JqZWN0fSA9ICRQYXJhbXskT2JqZWN0fSB8fCBkaWUgIkdvdCBubyAkT2JqZWN0ISI7CiAgICB9CgogICAgcmV0dXJuICRTZWxmOwp9CgpzdWIgUnVuIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGlmICggISRQYXJhbXtTZXJ2aWNlfSApIHsKICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZyggUHJpb3JpdHkgPT4gJ2Vycm9yJywgTWVzc2FnZSA9PiAnTmVlZCBTZXJ2aWNlIScgKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgIyBnZXQgZ3JvdXBzCiAgICBteSAkR3JvdXBzUncKICAgICAgICA9ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdGcm9udGVuZDo6TW9kdWxlJyktPnsgJFBhcmFte0NvbmZpZ30tPntBY3Rpb259IH0tPntHcm91cH0KICAgICAgICB8fCBbXTsKCiAgICAjIHNldCBhY2Nlc3MKICAgIG15ICRBY2Nlc3MgPSAxOwoKICAgICMgY2hlY2sgcGVybWlzc2lvbgogICAgaWYgKCAkUGFyYW17Q29uZmlnfS0+e0FjdGlvbn0gJiYgQHskR3JvdXBzUnd9ICkgewoKICAgICAgICAjIHNldCBhY2Nlc3MKICAgICAgICAkQWNjZXNzID0gMDsKCiAgICAgICAgIyBmaW5kIHJlYWQgd3JpdGUgZ3JvdXBzCiAgICAgICAgUldHUk9VUDoKICAgICAgICBmb3IgbXkgJFJ3R3JvdXAgKCBAeyRHcm91cHNSd30gKSB7CgogICAgICAgICAgICBuZXh0IFJXR1JPVVAgaWYgISRTZWxmLT57TGF5b3V0T2JqZWN0fS0+eyJVc2VySXNHcm91cFskUndHcm91cF0ifTsKICAgICAgICAgICAgbmV4dCBSV0dST1VQIGlmICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+eyJVc2VySXNHcm91cFskUndHcm91cF0ifSBuZSAnWWVzJzsKCiAgICAgICAgICAgICMgc2V0IGFjY2VzcwogICAgICAgICAgICAkQWNjZXNzID0gMTsKICAgICAgICAgICAgbGFzdCBSV0dST1VQOwogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gJFBhcmFte0NvdW50ZXJ9IGlmICEkQWNjZXNzOwoKICAgICMgY2hlY2sgaWYgc2VydmljZXMgY2FuIGJlIGxpbmtlZCB3aXRoIG90aGVyIG9iamVjdHMKICAgIG15ICVQb3NzaWJsZU9iamVjdHMgPSAkU2VsZi0+e0xpbmtPYmplY3R9LT5Qb3NzaWJsZU9iamVjdHNMaXN0KAogICAgICAgIE9iamVjdCA9PiAnU2VydmljZScsCiAgICAgICAgVXNlcklEID0+ICRTZWxmLT57VXNlcklEfSwKICAgICk7CgogICAgIyBkb24ndCBzaG93IGxpbmsgbWVudSBpdGVtIGlmIHRoZXJlIGFyZSBubyBsaW5rYWJsZSBvYmplY3RzCiAgICByZXR1cm4gaWYgISVQb3NzaWJsZU9iamVjdHM7CgogICAgJFNlbGYtPntMYXlvdXRPYmplY3R9LT5CbG9jayggTmFtZSA9PiAnTWVudScgKTsKICAgIGlmICggJFBhcmFte0NvdW50ZXJ9ICkgewogICAgICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soIE5hbWUgPT4gJ01lbnVJdGVtU3BsaXQnICk7CiAgICB9CgogICAgJFNlbGYtPntMYXlvdXRPYmplY3R9LT5CbG9jaygKICAgICAgICBOYW1lID0+ICdNZW51SXRlbScsCiAgICAgICAgRGF0YSA9PiB7CiAgICAgICAgICAgICVQYXJhbSwKICAgICAgICAgICAgJXsgJFBhcmFte1NlcnZpY2V9IH0sCiAgICAgICAgICAgICV7ICRQYXJhbXtDb25maWd9IH0sCiAgICAgICAgfSwKICAgICk7CgogICAgJFBhcmFte0NvdW50ZXJ9Kys7CgogICAgcmV0dXJuICRQYXJhbXtDb3VudGVyfTsKfQoKMTsK</File>
        <File Location="Kernel/Output/HTML/ITSMSLAMenuGeneric.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9PdXRwdXQvSFRNTC9JVFNNU0xBTWVudUdlbmVyaWMucG0KIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAwOSBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgLS0KIyAkSWQ6IElUU01TTEFNZW51R2VuZXJpYy5wbSx2IDEuMiAyMDA5LzA1LzE4IDA5OjQ4OjQ2IG1oIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6T3V0cHV0OjpIVE1MOjpJVFNNU0xBTWVudUdlbmVyaWM7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cgp1c2UgdmFycyBxdygkVkVSU0lPTik7CiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjIgJCkgWzFdOwoKc3ViIG5ldyB7CiAgICBteSAoICRUeXBlLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgYWxsb2NhdGUgbmV3IGhhc2ggZm9yIG9iamVjdAogICAgbXkgJFNlbGYgPSB7fTsKICAgIGJsZXNzKCAkU2VsZiwgJFR5cGUgKTsKCiAgICAjIGNoZWNrIG5lZWRlZCBvYmplY3RzCiAgICBmb3IgbXkgJE9iamVjdCAocXcoQ29uZmlnT2JqZWN0IExvZ09iamVjdCBEQk9iamVjdCBMYXlvdXRPYmplY3QgU0xBT2JqZWN0IFVzZXJJRCkpIHsKICAgICAgICAkU2VsZi0+eyRPYmplY3R9ID0gJFBhcmFteyRPYmplY3R9IHx8IGRpZSAiR290IG5vICRPYmplY3QhIjsKICAgIH0KCiAgICByZXR1cm4gJFNlbGY7Cn0KCnN1YiBSdW4gewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGNoZWNrIG5lZWRlZCBzdHVmZgogICAgaWYgKCAhJFBhcmFte1NMQX0gKSB7CiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coIFByaW9yaXR5ID0+ICdlcnJvcicsIE1lc3NhZ2UgPT4gJ05lZWQgU0xBIScgKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgIyBnZXQgZ3JvdXBzCiAgICBteSAkR3JvdXBzUm8KICAgICAgICA9ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdGcm9udGVuZDo6TW9kdWxlJyktPnsgJFBhcmFte0NvbmZpZ30tPntBY3Rpb259IH0tPntHcm91cFJvfQogICAgICAgIHx8IFtdOwogICAgbXkgJEdyb3Vwc1J3CiAgICAgICAgPSAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnRnJvbnRlbmQ6Ok1vZHVsZScpLT57ICRQYXJhbXtDb25maWd9LT57QWN0aW9ufSB9LT57R3JvdXB9CiAgICAgICAgfHwgW107CgogICAgIyBzZXQgYWNjZXNzCiAgICBteSAkQWNjZXNzID0gMTsKCiAgICAjIGNoZWNrIHBlcm1pc3Npb24KICAgIGlmICggJFBhcmFte0NvbmZpZ30tPntBY3Rpb259ICYmICggQHskR3JvdXBzUm99IHx8IEB7JEdyb3Vwc1J3fSApICkgewoKICAgICAgICAjIHNldCBhY2Nlc3MKICAgICAgICAkQWNjZXNzID0gMDsKCiAgICAgICAgIyBmaW5kIHJlYWQgb25seSBncm91cHMKICAgICAgICBST0dST1VQOgogICAgICAgIGZvciBteSAkUm9Hcm91cCAoIEB7JEdyb3Vwc1JvfSApIHsKCiAgICAgICAgICAgIG5leHQgUk9HUk9VUCBpZiAhJFNlbGYtPntMYXlvdXRPYmplY3R9LT57IlVzZXJJc0dyb3VwUm9bJFJvR3JvdXBdIn07CiAgICAgICAgICAgIG5leHQgUk9HUk9VUCBpZiAkU2VsZi0+e0xheW91dE9iamVjdH0tPnsiVXNlcklzR3JvdXBSb1skUm9Hcm91cF0ifSBuZSAnWWVzJzsKCiAgICAgICAgICAgICMgc2V0IGFjY2VzcwogICAgICAgICAgICAkQWNjZXNzID0gMTsKICAgICAgICAgICAgbGFzdCBST0dST1VQOwogICAgICAgIH0KCiAgICAgICAgIyBmaW5kIHJlYWQgd3JpdGUgZ3JvdXBzCiAgICAgICAgUldHUk9VUDoKICAgICAgICBmb3IgbXkgJFJ3R3JvdXAgKCBAeyRHcm91cHNSd30gKSB7CgogICAgICAgICAgICBuZXh0IFJXR1JPVVAgaWYgISRTZWxmLT57TGF5b3V0T2JqZWN0fS0+eyJVc2VySXNHcm91cFskUndHcm91cF0ifTsKICAgICAgICAgICAgbmV4dCBSV0dST1VQIGlmICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+eyJVc2VySXNHcm91cFskUndHcm91cF0ifSBuZSAnWWVzJzsKCiAgICAgICAgICAgICMgc2V0IGFjY2VzcwogICAgICAgICAgICAkQWNjZXNzID0gMTsKICAgICAgICAgICAgbGFzdCBSV0dST1VQOwogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gJFBhcmFte0NvdW50ZXJ9IGlmICEkQWNjZXNzOwoKICAgICMgb3V0cHV0IG1lbnUgYmxvY2sKICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soIE5hbWUgPT4gJ01lbnUnICk7CgogICAgIyBvdXRwdXQgc2VwZXJhdG9yCiAgICBpZiAoICRQYXJhbXtDb3VudGVyfSApIHsKICAgICAgICAkU2VsZi0+e0xheW91dE9iamVjdH0tPkJsb2NrKCBOYW1lID0+ICdNZW51SXRlbVNwbGl0JyApOwogICAgfQoKICAgICMgb3V0cHV0IG1lbnUgaXRlbQogICAgJFNlbGYtPntMYXlvdXRPYmplY3R9LT5CbG9jaygKICAgICAgICBOYW1lID0+ICdNZW51SXRlbScsCiAgICAgICAgRGF0YSA9PiB7CiAgICAgICAgICAgICVQYXJhbSwKICAgICAgICAgICAgJXsgJFBhcmFte1NMQX0gfSwKICAgICAgICAgICAgJXsgJFBhcmFte0NvbmZpZ30gfSwKICAgICAgICB9LAogICAgKTsKICAgICRQYXJhbXtDb3VudGVyfSsrOwoKICAgIHJldHVybiAkUGFyYW17Q291bnRlcn07Cn0KCjE7Cg==</File>
        <File Location="Kernel/Output/HTML/LinkObjectService.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Output/HTML/Standard/AdminITSMCIPAllocate.dtl" Permission="644" Encode="Base64">IyAtLQojIEFkbWluSVRTTUNJUEFsbG9jYXRlLmR0bCAtIHByb3ZpZGVzIEhUTUwgZm9ybSBmb3IgQWRtaW5JVFNNQ0lQQWxsb2NhdGUKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMCBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgLS0KIyAkSWQ6IEFkbWluSVRTTUNJUEFsbG9jYXRlLmR0bCx2IDEuOSAyMDEwLzA2LzAxIDE2OjA0OjM1IG1iIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgo8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIzIj4KICAgIDx0cj4KICAgICAgICA8dGQgY29sc3Bhbj0iMiIgY2xhc3M9Im1haW5oZWFkIj4KICAgICAgICAgICAgJEVudnsiQm94MCJ9JFRleHR7IkNyaXRpY2FsaXR5IDwtPiBJbXBhY3QgPC0+IFByaW9yaXR5In0kRW52eyJCb3gxIn0KICAgICAgICA8L3RkPgogICAgPC90cj4KICAgIDx0cj4KICAgICAgICA8dGQgY2xhc3M9Im1haW5ib2R5IiBhbGlnbj0iY2VudGVyIj4KICAgICAgICAgICAgPGJyPgogICAgICAgICAgICA8Zm9ybSBhY3Rpb249IiRFbnZ7IkNHSUhhbmRsZSJ9IiBtZXRob2Q9InBvc3QiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iQWN0aW9uIiB2YWx1ZT0iJEVudnsiQWN0aW9uIn0iPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iU3ViYWN0aW9uIiB2YWx1ZT0iQ0lQQWxsb2NhdGUiPgogICAgICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSI4MDAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iNCI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRoZWFkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRUZXh0eyJQcmlvcml0eSBhbGxvY2F0aW9uIn06CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGJvZHkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIzIiB3aWR0aD0iMTAwJSI+CjwhLS0gZHRsOmJsb2NrOkNJUEFsbG9jYXRlUm93IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KPCEtLSBkdGw6YmxvY2s6Q0lQQWxsb2NhdGVSb3dDb2x1bW5EZXNjcmlwdGlvbiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIiB3aWR0aD0iMTAwJSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiIGFsaWduPSJjZW50ZXIiPiRUZXh0eyIkRGF0YXsiT2JqZWN0VHlwZSJ9In08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnR2YWx1ZSIgYWxpZ249ImNlbnRlciI+JFRleHR7IiREYXRheyJPYmplY3RPcHRpb24ifSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KPCEtLSBkdGw6YmxvY2s6Q0lQQWxsb2NhdGVSb3dDb2x1bW5EZXNjcmlwdGlvbiAtLT4KPCEtLSBkdGw6YmxvY2s6Q0lQQWxsb2NhdGVSb3dDb2x1bW5Db250ZW50IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnR2YWx1ZSIgYWxpZ249ImNlbnRlciI+JERhdGF7Ik9wdGlvblN0cmcifTwvdGQ+CjwhLS0gZHRsOmJsb2NrOkNJUEFsbG9jYXRlUm93Q29sdW1uQ29udGVudCAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgo8IS0tIGR0bDpibG9jazpDSVBBbGxvY2F0ZVJvdyAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGZvb3RlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9ImJ1dHRvbiIgdHlwZT0ic3VibWl0IiB2YWx1ZT0iJFRleHR7IlNhdmUifSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgPGJyPgogICAgICAgIDwvdGQ+CiAgICA8L3RyPgo8L3RhYmxlPgo=</File>
        <File Location="Kernel/Output/HTML/Standard/AdminService.dtl" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Output/HTML/Standard/AdminSLA.dtl" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Output/HTML/Standard/AgentITSMService.dtl" Permission="644" Encode="Base64">IyAtLQojIEFnZW50SVRTTVNlcnZpY2UuZHRsIC0gcHJvdmlkZXMgSFRNTCBmb3JtIGZvciBBZ2VudElUU01TZXJ2aWNlCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTAgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIC0tCiMgJElkOiBBZ2VudElUU01TZXJ2aWNlLmR0bCx2IDEuNSAyMDEwLzAzLzE4IDE1OjA2OjM5IHViIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgo8IS0tIGR0bDpibG9jazpPdmVydmlldyAtLT4KPHRhYmxlIGJvcmRlcj0iMCIgd2lkdGg9IjEwMCUiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMyI+CiAgICA8dHI+CiAgICAgICAgPHRkIGNsYXNzPSJtYWluaGVhZCI+CiAgICAgICAgICAgICRFbnZ7IkJveDAifSRUZXh0eyJPdmVydmlldyJ9OiAkVGV4dHsiU2VydmljZSJ9JEVudnsiQm94MSJ9CiAgICAgICAgPC90ZD4KICAgIDwvdHI+CiAgICA8dHI+CiAgICAgICAgPHRkIGNsYXNzPSJtYWluYm9keSIgYWxpZ249ImNlbnRlciI+CiAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgd2lkdGg9IjgwMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIzIj4KICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0iY29udGVudGhlYWQiPgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSIgd2lkdGg9IjIwIj4mbmJzcDs8L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IlNlcnZpY2UifTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5Ij4kVGV4dHsiVHlwZSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJDcml0aWNhbGl0eSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiIHdpZHRoPSIxNTAiPiRUZXh0eyJDaGFuZ2VkIn08L3RkPgogICAgICAgICAgICAgICAgPC90cj4KPCEtLSBkdGw6YmxvY2s6T3ZlcnZpZXdSb3cgLS0+CiAgICAgICAgICAgICAgICA8dHIgY2xhc3M9ImNvbnRlbnRib2R5Ij4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9IiRRRGF0YXsiQ3NzQ2xhc3MifSIgYWxpZ249InJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBib3JkZXI9IjAiIHNyYz0iJENvbmZpZ3siRnJvbnRlbmQ6OkltYWdlUGF0aCJ9JFFEYXRheyJDdXJJbmNpU2lnbmFsIn0ucG5nIiB0aXRsZT0iJFF1b3RleyIkVGV4dHsiJERhdGF7IkN1ckluY2lTdGF0ZSJ9In0ifSIgYWx0PSIkUXVvdGV7IiRUZXh0eyIkRGF0YXsiQ3VySW5jaVN0YXRlIn0ifSJ9Ij4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iJFFEYXRheyJDc3NDbGFzcyJ9Ij4KICAgICAgICAgICAgICAgICAgICAgICAgJERhdGF7IkxldmVsU3BhY2UifQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIkRW52eyJCYXNlbGluayJ9QWN0aW9uPUFnZW50SVRTTVNlcnZpY2Vab29tJlNlcnZpY2VJRD0kUURhdGF7IlNlcnZpY2VJRCJ9Ij4KICAgICAgICAgICAgICAgICAgICAgICAgJFFEYXRheyJOYW1lIn0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSIkUURhdGF7IkNzc0NsYXNzIn0iPiRUZXh0eyIkUURhdGF7IlR5cGUifSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9IiRRRGF0YXsiQ3NzQ2xhc3MifSI+JFRleHR7IiRRRGF0YXsiQ3JpdGljYWxpdHkifSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9IiRRRGF0YXsiQ3NzQ2xhc3MifSIgd2lkdGg9IjE1MCI+JFRpbWVMb25neyIkUURhdGF7IkNoYW5nZVRpbWUifSJ9PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CjwhLS0gZHRsOmJsb2NrOk92ZXJ2aWV3Um93IC0tPgogICAgICAgICAgICAgICAgPHRyIGNsYXNzPSJjb250ZW50Zm9vdGVyIj4KICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj0iNSI+Jm5ic3A7PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgIDxicj4KICAgICAgICA8L3RkPgogICAgPC90cj4KPC90YWJsZT4KPCEtLSBkdGw6YmxvY2s6T3ZlcnZpZXcgLS0+Cg==</File>
        <File Location="Kernel/Output/HTML/Standard/AgentITSMServicePrint.dtl" Permission="644" Encode="Base64">IyAtLQojIEFnZW50SVRTTVNlcnZpY2VQcmludC5kdGwgLSBwcm92aWRlcyBIVE1MIHByaW50IHZpZXcKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAwOSBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgLS0KIyAkSWQ6IEFnZW50SVRTTVNlcnZpY2VQcmludC5kdGwsdiAxLjIgMjAwOS8wNS8xOCAwOTo0ODo0NiBtaCBFeHAgJAojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjEiIGNlbGxwYWRkaW5nPSIwIiB3aWR0aD0iMTAwJSI+CiAgPHRyPgogICAgPHRkIGNsYXNzPSJtYWluaGVhZCI+JFRleHR7IlNlcnZpY2UifTwvdGQ+CiAgPC90cj4KPC90YWJsZT4KPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjEiIGNlbGxwYWRkaW5nPSIxMCIgd2lkdGg9IjEwMCUiPgogIDx0cj4KICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+CiAgICAgICRUZXh0eyJTZXJ2aWNlLUluZm8ifToKICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjMiIGNlbGxwYWRkaW5nPSIwIiB3aWR0aD0iMTAwJSI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5IiB3aWR0aD0iMTAlIj4kVGV4dHsiU2VydmljZSJ9OjwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnR2YWx1ZSIgd2lkdGg9IjQwJSI+JFFEYXRheyJOYW1lU2hvcnQifTwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiIHdpZHRoPSIyMCUiPiRUZXh0eyJDcmVhdGVkIn06PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIiB3aWR0aD0iMzAlIj4kVGltZUxvbmd7IiREYXRheyJDcmVhdGVUaW1lIn0ifTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJDdXJyZW50IEluY2lkZW50IFN0YXRlIn06PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kVGV4dHsiJFFEYXRheyJDdXJJbmNpU3RhdGUifSJ9PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IkNyZWF0ZWQgYnkifTo8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPiRRRGF0YXsiQ3JlYXRlQnlVc2VyTG9naW4ifSAoJFFEYXRheyJDcmVhdGVCeVVzZXJGaXJzdG5hbWUifSAkUURhdGF7IkNyZWF0ZUJ5VXNlckxhc3RuYW1lIn0pPC90ZD4KICAgICAgICA8L3RyPgogICAgICAgIDx0cj4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj48L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5Ij4kVGV4dHsiTGFzdCBjaGFuZ2VkIn06PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kVGltZUxvbmd7IiREYXRheyJDaGFuZ2VUaW1lIn0ifTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPjwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnR2YWx1ZSI+PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+JFRleHR7Ikxhc3QgY2hhbmdlZCBieSJ9OjwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnR2YWx1ZSI+JFFEYXRheyJDaGFuZ2VCeVVzZXJMb2dpbiJ9ICgkUURhdGF7IkNoYW5nZUJ5VXNlckZpcnN0bmFtZSJ9ICRRRGF0YXsiQ2hhbmdlQnlVc2VyTGFzdG5hbWUifSk8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5Ij4mbmJzcDs8L3RkPgogICAgICAgICAgPHRkIGNvbHNwYW49IjMiIGNsYXNzPSJjb250ZW50dmFsdWUiPiZuYnNwOzwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgPC90YWJsZT4KICAgIDwvdGQ+CiAgPC90cj4KPCEtLSBkdGw6YmxvY2s6QXNzb2NpYXRlZFNMQXMgLS0+CiAgPHRyPgogICAgPHRkIGNsYXNzPSJjb250ZW50a2V5Ij4KICAgICAgJFRleHR7IkFzc29jaWF0ZWQgU0xBcyJ9OgogICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMyIgY2VsbHBhZGRpbmc9IjAiIHdpZHRoPSIxMDAlIj4KPCEtLSBkdGw6YmxvY2s6QXNzb2NpYXRlZFNMQXNSb3cgLS0+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5IiB3aWR0aD0iMjAlIj4kVGV4dHsiU0xBIn06PC90ZD4KICAgICAgICAgIDx0ZCBjb2xzcGFuPSIzIiBjbGFzcz0iY29udGVudHZhbHVlIj4kUURhdGF7Ik5hbWUifTwvdGQ+CiAgICAgICAgPC90cj4KPCEtLSBkdGw6YmxvY2s6QXNzb2NpYXRlZFNMQXNSb3cgLS0+CiAgICAgIDwvdGFibGU+CiAgICA8L3RkPgogIDwvdHI+CjwvdGFibGU+CjwhLS0gZHRsOmJsb2NrOkFzc29jaWF0ZWRTTEFzIC0tPgo8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iNjQwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGJnY29sb3I9IiMwMDAwMDAiIGNsYXNzPSJjb250YWluZXIiPgogIDx0cj4KICAgIDx0ZD4KICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgd2lkdGg9IjY0MCIgY2VsbHBhZGRpbmc9IjEwIiBjZWxsc3BhY2luZz0iMSIgYmdjb2xvcj0iI2ZmZmZmZiI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkPgogICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIzIj4KICAgICAgICAgICAgICA8dHIgYmdjb2xvcj0iI2ZmZmZmZiI+CiAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiIHdpZHRoPSIxMDAlIiBjbGFzcz0ic21hbGwiPgogICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIxIj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiIHdpZHRoPSIyMCUiPiRUZXh0eyJTZXJ2aWNlIn06PC90ZD4KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kUURhdGF7Ik5hbWUifTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJUeXBlIn06PC90ZD4KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kVGV4dHsiJFFEYXRheyJUeXBlIn0ifTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJDcml0aWNhbGl0eSJ9OjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnR2YWx1ZSI+JFRleHR7IiRRRGF0YXsiQ3JpdGljYWxpdHkifSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgPC90ZD4KICAgICAgICA8L3RyPgogICAgICA8L3RhYmxlPgogICAgPC90ZD4KICA8L3RyPgo8L3RhYmxlPg==</File>
        <File Location="Kernel/Output/HTML/Standard/AgentITSMServiceZoom.dtl" Permission="644" Encode="Base64">IyAtLQojIEFnZW50SVRTTVNlcnZpY2Vab29tLmR0bCAtIHByb3ZpZGVzIEhUTUwgZm9ybSBmb3IgQWdlbnRJVFNNU2VydmljZVpvb20KIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAwOSBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgLS0KIyAkSWQ6IEFnZW50SVRTTVNlcnZpY2Vab29tLmR0bCx2IDEuNSAyMDA5LzA4LzE4IDIyOjIwOjUyIG1oIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgo8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIzIj4KICA8dHI+CiAgICA8dGQgY2xhc3M9Im1haW5oZWFkIj4KICAgICAgJEVudnsiQm94MCJ9JFRleHR7Ilpvb20ifTogJFRleHR7IlNlcnZpY2UifSRFbnZ7IkJveDEifQogICAgPC90ZD4KICA8L3RyPgo8L3RhYmxlPgo8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIzIj4KICA8dHI+CiAgICA8dGQgd2lkdGg9Ijc1JSIgY2xhc3M9Im1lbnUiPgo8IS0tIGR0bDpibG9jazpNZW51IC0tPgo8IS0tIGR0bDpibG9jazpNZW51SXRlbVNwbGl0IC0tPgogICAgICAtCjwhLS0gZHRsOmJsb2NrOk1lbnVJdGVtU3BsaXQgLS0+CjwhLS0gZHRsOmJsb2NrOk1lbnVJdGVtIC0tPgogICAgICA8YSBocmVmPSIkRW52eyJCYXNlbGluayJ9JERhdGF7IkxpbmsifSIgJERhdGF7IkxpbmtQYXJhbSJ9IG9ubW91c2VvdmVyPSJ3aW5kb3cuc3RhdHVzPSckSlNUZXh0eyIkUURhdGF7Ik5hbWUifSJ9JzsgcmV0dXJuIHRydWU7IiBvbm1vdXNlb3V0PSJ3aW5kb3cuc3RhdHVzPScnOyIgY2xhc3M9Im1lbnVpdGVtIj4kVGV4dHsiJFFEYXRheyJOYW1lIn0ifTwvYT4KPCEtLSBkdGw6YmxvY2s6TWVudUl0ZW0gLS0+CjwhLS0gZHRsOmJsb2NrOk1lbnUgLS0+CiAgICA8L3RkPgogICAgPHRkIGFsaWduPSJyaWdodCIgd2lkdGg9IjI1JSIgY2xhc3M9Im1lbnUiPjwvdGQ+CiAgPC90cj4KPC90YWJsZT4KPHRhYmxlIGJvcmRlcj0iMCIgd2lkdGg9IjEwMCUiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMyI+CiAgPHRyPgogICAgPHRkIGNsYXNzPSJtYWluYm9keSIgYWxpZ249ImNlbnRlciI+CiAgICAgIDxicj4KICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgd2lkdGg9IjEwMCUiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMSI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkIHdpZHRoPSIyMCUiIGNsYXNzPSJjb250ZW50a2V5Ij4kVGV4dHsiU2VydmljZSJ9OiA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPiRRRGF0YXsiTmFtZSJ9PC90ZD4KICAgICAgICA8L3RyPgogICAgICAgIDx0cj4KICAgICAgICAgIDx0ZCB3aWR0aD0iMjAlIiBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IlR5cGUifTogPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kVGV4dHsiJFFEYXRheyJUeXBlIn0ifTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgd2lkdGg9IjIwJSIgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJDcml0aWNhbGl0eSJ9OiA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPiRUZXh0eyIkUURhdGF7IkNyaXRpY2FsaXR5In0ifTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgPC90YWJsZT4KPCEtLSBkdGw6YmxvY2s6SG9yaXpvbnRhbFJ1bGVyIC0tPgogICAgICA8aHIgc2l6ZT0iMiI+CjwhLS0gZHRsOmJsb2NrOkhvcml6b250YWxSdWxlciAtLT4KICAgICAgPGJyPgo8IS0tIGR0bDpibG9jazpTTEEgLS0+CiAgICAgIDx0YWJsZSB3aWR0aD0iMTAwJSIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiPgogICAgICAgIDx0cj4KICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIj4KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSI5OCUiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIzIj4KICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj0iNCI+CiAgICAgICAgICAgICAgICAgIDxiPjxpPiRUZXh0eyJBc3NvY2lhdGVkIFNMQXMifTwvaT48L2I+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgPHRyIGNsYXNzPSJjb250ZW50aGVhZCI+CiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiIHdpZHRoPSIxMCI+Jm5ic3A7PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IlNMQSJ9PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IlR5cGUifTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiIHdpZHRoPSIxNTAiPiRUZXh0eyJDaGFuZ2VkIn08L3RkPgogICAgICAgICAgICAgIDwvdHI+CjwhLS0gZHRsOmJsb2NrOlNMQVJvdyAtLT4KICAgICAgICAgICAgICA8dHIgY2xhc3M9ImNvbnRlbnRib2R5Ij4KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iJFFEYXRheyJDc3NDbGFzcyJ9Ij4mbmJzcDs8L3RkPgogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSIkUURhdGF7IkNzc0NsYXNzIn0iPgogICAgICAgICAgICAgICAgICA8YSBocmVmPSIkRW52eyJCYXNlbGluayJ9QWN0aW9uPUFnZW50SVRTTVNMQVpvb20mU0xBSUQ9JFFEYXRheyJTTEFJRCJ9Ij4KICAgICAgICAgICAgICAgICAgJFFEYXRheyJOYW1lIn0KICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iJFFEYXRheyJDc3NDbGFzcyJ9Ij4kVGV4dHsiJFFEYXRheyJUeXBlIn0ifTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9IiRRRGF0YXsiQ3NzQ2xhc3MifSIgd2lkdGg9IjE1MCI+JFRpbWVMb25neyIkUURhdGF7IkNoYW5nZVRpbWUifSJ9PC90ZD4KICAgICAgICAgICAgICA8L3RyPgo8IS0tIGR0bDpibG9jazpTTEFSb3cgLS0+CiAgICAgICAgICAgICAgPHRyIGNsYXNzPSJjb250ZW50Zm9vdGVyIj4KICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSI0Ij4mbmJzcDs8L3RkPgogICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICA8L3RkPgogICAgICAgIDwvdHI+CiAgICAgIDwvdGFibGU+CiAgICAgIDxicj4KPCEtLSBkdGw6YmxvY2s6U0xBIC0tPgo8IS0tIGR0bDpibG9jazpMaW5rVGFibGVDb21wbGV4IC0tPgogICAgICA8dGFibGUgd2lkdGg9Ijk4JSIgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiPgogICAgICAgIDx0cj4KICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgJERhdGF7IkxpbmtUYWJsZVN0cmcifQogICAgICAgICAgPC90ZD4KICAgICAgICA8L3RyPgogICAgICA8L3RhYmxlPgogICAgICA8YnI+CjwhLS0gZHRsOmJsb2NrOkxpbmtUYWJsZUNvbXBsZXggLS0+CiAgICA8L3RkPgogICAgPHRkIHdpZHRoPSIyNSUiIGNsYXNzPSJtZW51Ij4KICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjEiIGNlbGxwYWRkaW5nPSIwIiB3aWR0aD0iMTAwJSI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkPjxiPiRUZXh0eyJDdXJyZW50IEluY2lkZW50IFN0YXRlIn06IDwvYj48L3RkPgogICAgICAgICAgPHRkPgogICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiPgogICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgPGRpdiB0aXRsZT0iJFRleHR7IiRRRGF0YXsiQ3VySW5jaVN0YXRlIn0ifSI+CiAgICAgICAgICAgICAgICAgICRRdW90ZXsiJFRleHR7IiREYXRheyJDdXJJbmNpU3RhdGUifSJ9IiwiMjUifSZuYnNwOyZuYnNwOwogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgIDxpbWcgYm9yZGVyPSIwIiBzcmM9IiRDb25maWd7IkZyb250ZW5kOjpJbWFnZVBhdGgifSRRRGF0YXsiQ3VySW5jaVNpZ25hbCJ9LnBuZyIgdGl0bGU9IiRUZXh0eyIkUURhdGF7IkN1ckluY2lTdGF0ZSJ9In0iIGFsdD0iJFRleHR7IiRRRGF0YXsiQ3VySW5jaVN0YXRlIn0ifSI+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICA8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkIGNvbHNwYW49IjIiPiZuYnNwOzwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgY2xhc3M9Im1haW5rZXkiPiRUZXh0eyJDcmVhdGVkIn06PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0ibWFpbnZhbHVlIj4kVGltZUxvbmd7IiREYXRheyJDcmVhdGVUaW1lIn0ifTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgY2xhc3M9Im1haW5rZXkiPiRUZXh0eyJDcmVhdGVkIGJ5In06PC90ZD4KICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgPGRpdiB0aXRsZT0iJFFEYXRheyJDcmVhdGVVc2VyTG9naW4ifSAoJFF1b3RleyIkRGF0YXsiQ3JlYXRlVXNlckZpcnN0bmFtZSJ9ICREYXRheyJDcmVhdGVVc2VyTGFzdG5hbWUifSJ9KSI+CiAgICAgICAgICAgICRRRGF0YXsiQ3JlYXRlVXNlckxvZ2luIiwiMTUifSAoJFF1b3RleyIkRGF0YXsiQ3JlYXRlVXNlckZpcnN0bmFtZSJ9ICREYXRheyJDcmVhdGVVc2VyTGFzdG5hbWUifSIsIjE1In0pCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgICA8L3RyPgogICAgICAgIDx0cj4KICAgICAgICAgIDx0ZCBjbGFzcz0ibWFpbmtleSI+JFRleHR7Ikxhc3QgY2hhbmdlZCJ9OjwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Im1haW52YWx1ZSI+JFRpbWVMb25neyIkRGF0YXsiQ2hhbmdlVGltZSJ9In08L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkIGNsYXNzPSJtYWlua2V5Ij4kVGV4dHsiTGFzdCBjaGFuZ2VkIGJ5In06PC90ZD4KICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgPGRpdiB0aXRsZT0iJFFEYXRheyJDaGFuZ2VVc2VyTG9naW4ifSAoJFF1b3RleyIkRGF0YXsiQ2hhbmdlVXNlckZpcnN0bmFtZSJ9ICREYXRheyJDaGFuZ2VVc2VyTGFzdG5hbWUifSJ9KSI+CiAgICAgICAgICAgICRRRGF0YXsiQ2hhbmdlVXNlckxvZ2luIiwiMTUifSAoJFF1b3RleyIkRGF0YXsiQ2hhbmdlVXNlckZpcnN0bmFtZSJ9ICREYXRheyJDaGFuZ2VVc2VyTGFzdG5hbWUifSIsIjE1In0pCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgICA8L3RyPgo8IS0tIGR0bDpibG9jazpMaW5rVGFibGVTaW1wbGUgLS0+CiAgICAgICAgJERhdGF7IkxpbmtUYWJsZVN0cmcifQo8IS0tIGR0bDpibG9jazpMaW5rVGFibGVTaW1wbGUgLS0+CiAgICAgIDwvdGFibGU+CiAgICA8L3RkPgogIDwvdHI+CjwvdGFibGU+Cg==</File>
        <File Location="Kernel/Output/HTML/Standard/AgentITSMSLA.dtl" Permission="644" Encode="Base64">IyAtLQojIEFnZW50SVRTTVNMQS5kdGwgLSBwcm92aWRlcyBIVE1MIGZvcm0gZm9yIEFnZW50SVRTTVNMQQojIENvcHlyaWdodCAoQykgMjAwMS0yMDA5IE9UUlMgQUcsIGh0dHA6Ly9vdHJzLm9yZy8KIyAtLQojICRJZDogQWdlbnRJVFNNU0xBLmR0bCx2IDEuMiAyMDA5LzA1LzE4IDA5OjQ4OjQ2IG1oIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgo8IS0tIGR0bDpibG9jazpPdmVydmlldyAtLT4KPHRhYmxlIGJvcmRlcj0iMCIgd2lkdGg9IjEwMCUiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMyI+CiAgPHRyPgogICAgPHRkIGNsYXNzPSJtYWluaGVhZCI+CiAgICAgICRFbnZ7IkJveDAifSRUZXh0eyJPdmVydmlldyJ9OiAkVGV4dHsiU0xBIn0kRW52eyJCb3gxIn0KICAgIDwvdGQ+CiAgPC90cj4KICA8dHI+CiAgICA8dGQgY2xhc3M9Im1haW5ib2R5IiBhbGlnbj0iY2VudGVyIj4KICAgICAgPGJyPgogICAgICA8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iODAwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjMiPgogICAgICAgIDx0ciBjbGFzcz0iY29udGVudGhlYWQiPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5IiB3aWR0aD0iMTAiPiZuYnNwOzwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJTTEEifTwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJUeXBlIn08L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5IiB3aWR0aD0iMTUwIj4kVGV4dHsiQ2hhbmdlZCJ9PC90ZD4KICAgICAgICA8L3RyPgo8IS0tIGR0bDpibG9jazpPdmVydmlld1JvdyAtLT4KICAgICAgICA8dHIgY2xhc3M9ImNvbnRlbnRib2R5Ij4KICAgICAgICAgIDx0ZCBjbGFzcz0iJFFEYXRheyJDc3NDbGFzcyJ9Ij4mbmJzcDs8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSIkUURhdGF7IkNzc0NsYXNzIn0iPgogICAgICAgICAgICA8YSBocmVmPSIkRW52eyJCYXNlbGluayJ9QWN0aW9uPUFnZW50SVRTTVNMQVpvb20mU0xBSUQ9JFFEYXRheyJTTEFJRCJ9Ij4KICAgICAgICAgICAgJFFEYXRheyJOYW1lIn0KICAgICAgICAgICAgPC9hPgogICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iJFFEYXRheyJDc3NDbGFzcyJ9Ij4kVGV4dHsiJFFEYXRheyJUeXBlIn0ifTwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9IiRRRGF0YXsiQ3NzQ2xhc3MifSIgd2lkdGg9IjE1MCI+JFRpbWVMb25neyIkUURhdGF7IkNoYW5nZVRpbWUifSJ9PC90ZD4KICAgICAgICA8L3RyPgo8IS0tIGR0bDpibG9jazpPdmVydmlld1JvdyAtLT4KICAgICAgICA8dHIgY2xhc3M9ImNvbnRlbnRmb290ZXIiPgogICAgICAgICAgPHRkIGNvbHNwYW49IjQiPiZuYnNwOzwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgPC90YWJsZT4KICAgICAgPGJyPgogICAgPC90ZD4KICA8L3RyPgo8L3RhYmxlPgo8IS0tIGR0bDpibG9jazpPdmVydmlldyAtLT4K</File>
        <File Location="Kernel/Output/HTML/Standard/AgentITSMSLAPrint.dtl" Permission="644" Encode="Base64">IyAtLQojIEFnZW50SVRTTVNMQVByaW50LmR0bCAtIHByb3ZpZGVzIEhUTUwgcHJpbnQgdmlldwojIENvcHlyaWdodCAoQykgMjAwMS0yMDA5IE9UUlMgQUcsIGh0dHA6Ly9vdHJzLm9yZy8KIyAtLQojICRJZDogQWdlbnRJVFNNU0xBUHJpbnQuZHRsLHYgMS4yIDIwMDkvMDUvMTggMDk6NDg6NDYgbWggRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCjx0YWJsZSBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIxIiBjZWxscGFkZGluZz0iMCIgd2lkdGg9IjEwMCUiPgogIDx0cj4KICAgIDx0ZCBjbGFzcz0ibWFpbmhlYWQiPiRUZXh0eyJTTEEifTwvdGQ+CiAgPC90cj4KPC90YWJsZT4KPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjEiIGNlbGxwYWRkaW5nPSIxMCIgd2lkdGg9IjEwMCUiPgogIDx0cj4KICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+CiAgICAgICRUZXh0eyJTTEEtSW5mbyJ9OgogICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMyIgY2VsbHBhZGRpbmc9IjAiIHdpZHRoPSIxMDAlIj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiIHdpZHRoPSIyMCUiPiRUZXh0eyJTTEEifTo8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiIHdpZHRoPSIzMCUiPiRRRGF0YXsiTmFtZSJ9PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSIgd2lkdGg9IjIwJSI+JFRleHR7IkNyZWF0ZWQifTo8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiIHdpZHRoPSIzMCUiPiRUaW1lTG9uZ3siJERhdGF7IkNyZWF0ZVRpbWUifSJ9PC90ZD4KICAgICAgICA8L3RyPgogICAgICAgIDx0cj4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj48L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5Ij4kVGV4dHsiQ3JlYXRlZCBieSJ9OjwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnR2YWx1ZSI+JFFEYXRheyJDcmVhdGVCeVVzZXJMb2dpbiJ9ICgkUURhdGF7IkNyZWF0ZUJ5VXNlckZpcnN0bmFtZSJ9ICRRRGF0YXsiQ3JlYXRlQnlVc2VyTGFzdG5hbWUifSk8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5Ij48L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPjwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJMYXN0IGNoYW5nZWQifTo8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPiRUaW1lTG9uZ3siJERhdGF7IkNoYW5nZVRpbWUifSJ9PC90ZD4KICAgICAgICA8L3RyPgogICAgICAgIDx0cj4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj48L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5Ij4kVGV4dHsiTGFzdCBjaGFuZ2VkIGJ5In06PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kUURhdGF7IkNoYW5nZUJ5VXNlckxvZ2luIn0gKCRRRGF0YXsiQ2hhbmdlQnlVc2VyRmlyc3RuYW1lIn0gJFFEYXRheyJDaGFuZ2VCeVVzZXJMYXN0bmFtZSJ9KTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPiZuYnNwOzwvdGQ+CiAgICAgICAgICA8dGQgY29sc3Bhbj0iMyIgY2xhc3M9ImNvbnRlbnR2YWx1ZSI+Jm5ic3A7PC90ZD4KICAgICAgICA8L3RyPgogICAgICA8L3RhYmxlPgogICAgPC90ZD4KICA8L3RyPgo8L3RhYmxlPgo8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iNjQwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGJnY29sb3I9IiMwMDAwMDAiIGNsYXNzPSJjb250YWluZXIiPgogIDx0cj4KICAgIDx0ZD4KICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgd2lkdGg9IjY0MCIgY2VsbHBhZGRpbmc9IjEwIiBjZWxsc3BhY2luZz0iMSIgYmdjb2xvcj0iI2ZmZmZmZiI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkPgogICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIzIj4KICAgICAgICAgICAgICA8dHIgYmdjb2xvcj0iI2ZmZmZmZiI+CiAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiIHdpZHRoPSIxMDAlIiBjbGFzcz0ic21hbGwiPgogICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIxIj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJTTEEifTo8L3RkPgogICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPiRRRGF0YXsiTmFtZSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IlR5cGUifTo8L3RkPgogICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPiRUZXh0eyIkUURhdGF7IlR5cGUifSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IkNhbGVuZGFyIn06PC90ZD4KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kVGV4dHsiJFFEYXRheyJDYWxlbmRhck5hbWUifSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IkZpcnN0IFJlc3BvbnNlIFRpbWUifTo8L3RkPgogICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPiRRRGF0YXsiRmlyc3RSZXNwb25zZVRpbWUifSAkVGV4dHsibWludXRlcyJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IlVwZGF0ZSBUaW1lIn06PC90ZD4KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kUURhdGF7IlVwZGF0ZVRpbWUifSAkVGV4dHsibWludXRlcyJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IlNvbHV0aW9uIFRpbWUifTo8L3RkPgogICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPiRRRGF0YXsiU29sdXRpb25UaW1lIn0gJFRleHR7Im1pbnV0ZXMifTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJNaW5pbXVtIFRpbWUgQmV0d2VlbiBJbmNpZGVudHMifTo8L3RkPgogICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPiRRRGF0YXsiTWluVGltZUJldHdlZW5JbmNpZGVudHMifSAkVGV4dHsibWludXRlcyJ9PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgPC90ZD4KICAgICAgICA8L3RyPgogICAgICA8L3RhYmxlPgogICAgPC90ZD4KICA8L3RyPgo8L3RhYmxlPg==</File>
        <File Location="Kernel/Output/HTML/Standard/AgentITSMSLAZoom.dtl" Permission="644" Encode="Base64">IyAtLQojIEFnZW50SVRTTVNMQVpvb20uZHRsIC0gcHJvdmlkZXMgSFRNTCBmb3JtIGZvciBBZ2VudElUU01TTEFab29tCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMDkgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIC0tCiMgJElkOiBBZ2VudElUU01TTEFab29tLmR0bCx2IDEuNCAyMDA5LzA4LzE4IDIyOjIwOjUyIG1oIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgo8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIzIj4KICA8dHI+CiAgICA8dGQgY2xhc3M9Im1haW5oZWFkIj4KICAgICAgJEVudnsiQm94MCJ9JFRleHR7Ilpvb20ifTogJFRleHR7IlNMQSJ9JEVudnsiQm94MSJ9CiAgICA8L3RkPgogIDwvdHI+CjwvdGFibGU+Cjx0YWJsZSBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjMiPgogIDx0cj4KICAgIDx0ZCB3aWR0aD0iNzUlIiBjbGFzcz0ibWVudSI+CjwhLS0gZHRsOmJsb2NrOk1lbnUgLS0+CjwhLS0gZHRsOmJsb2NrOk1lbnVJdGVtU3BsaXQgLS0+CiAgICAgIC0KPCEtLSBkdGw6YmxvY2s6TWVudUl0ZW1TcGxpdCAtLT4KPCEtLSBkdGw6YmxvY2s6TWVudUl0ZW0gLS0+CiAgICAgIDxhIGhyZWY9IiRFbnZ7IkJhc2VsaW5rIn0kRGF0YXsiTGluayJ9IiAkRGF0YXsiTGlua1BhcmFtIn0gb25tb3VzZW92ZXI9IndpbmRvdy5zdGF0dXM9JyRKU1RleHR7IiRRRGF0YXsiTmFtZSJ9In0nOyByZXR1cm4gdHJ1ZTsiIG9ubW91c2VvdXQ9IndpbmRvdy5zdGF0dXM9Jyc7IiBjbGFzcz0ibWVudWl0ZW0iPiRUZXh0eyIkUURhdGF7Ik5hbWUifSJ9PC9hPgo8IS0tIGR0bDpibG9jazpNZW51SXRlbSAtLT4KPCEtLSBkdGw6YmxvY2s6TWVudSAtLT4KICAgIDwvdGQ+CiAgICA8dGQgYWxpZ249InJpZ2h0IiB3aWR0aD0iMjUlIiBjbGFzcz0ibWVudSI+PC90ZD4KICA8L3RyPgo8L3RhYmxlPgo8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIzIj4KICA8dHI+CiAgICA8dGQgY2xhc3M9Im1haW5ib2R5IiBhbGlnbj0iY2VudGVyIj4KICAgICAgPGJyPgogICAgICA8dGFibGUgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIxIj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgd2lkdGg9IjIwJSIgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJTTEEifTogPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kUURhdGF7Ik5hbWUifTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgd2lkdGg9IjIwJSIgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJUeXBlIn06IDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnR2YWx1ZSI+JFRleHR7IiRRRGF0YXsiVHlwZSJ9In08L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkIHdpZHRoPSIyMCUiIGNsYXNzPSJjb250ZW50a2V5Ij4kVGV4dHsiQ2FsZW5kYXIifTogPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kVGV4dHsiJFFEYXRheyJDYWxlbmRhck5hbWUifSJ9PC90ZD4KICAgICAgICA8L3RyPgogICAgICAgIDx0cj4KICAgICAgICAgIDx0ZCB3aWR0aD0iMjAlIiBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IkZpcnN0IFJlc3BvbnNlIFRpbWUifTogPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kUURhdGF7IkZpcnN0UmVzcG9uc2VUaW1lIn0gJFRleHR7Im1pbnV0ZXMifTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgd2lkdGg9IjIwJSIgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJVcGRhdGUgVGltZSJ9OiA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPiRRRGF0YXsiVXBkYXRlVGltZSJ9ICRUZXh0eyJtaW51dGVzIn08L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkIHdpZHRoPSIyMCUiIGNsYXNzPSJjb250ZW50a2V5Ij4kVGV4dHsiU29sdXRpb24gVGltZSJ9OiA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50dmFsdWUiPiRRRGF0YXsiU29sdXRpb25UaW1lIn0gJFRleHR7Im1pbnV0ZXMifTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgd2lkdGg9IjIwJSIgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJNaW5pbXVtIFRpbWUgQmV0d2VlbiBJbmNpZGVudHMifTogPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudHZhbHVlIj4kUURhdGF7Ik1pblRpbWVCZXR3ZWVuSW5jaWRlbnRzIn0gJFRleHR7Im1pbnV0ZXMifTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgPC90YWJsZT4KPCEtLSBkdGw6YmxvY2s6U2VydmljZSAtLT4KICAgICAgPGhyIHNpemU9IjIiPgogICAgICA8YnI+CiAgICAgIDx0YWJsZSB3aWR0aD0iMTAwJSIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiPgogICAgICAgIDx0cj4KICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIj4KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSI5OCUiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIzIj4KICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj0iNCI+CiAgICAgICAgICAgICAgICAgIDxiPjxpPiRUZXh0eyJBc3NvY2lhdGVkIFNlcnZpY2VzIn08L2k+PC9iPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgIDx0ciBjbGFzcz0iY29udGVudGhlYWQiPgogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5IiB3aWR0aD0iMjAiPiZuYnNwOzwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnRrZXkiPiRUZXh0eyJTZXJ2aWNlIn08L3RkPgogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5Ij4kVGV4dHsiVHlwZSJ9PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29udGVudGtleSI+JFRleHR7IkNyaXRpY2FsaXR5In08L3RkPgogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb250ZW50a2V5IiB3aWR0aD0iMTUwIj4kVGV4dHsiQ2hhbmdlZCJ9PC90ZD4KICAgICAgICAgICAgICA8L3RyPgo8IS0tIGR0bDpibG9jazpTZXJ2aWNlUm93IC0tPgogICAgICAgICAgICAgIDx0ciBjbGFzcz0iY29udGVudGJvZHkiPgogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSIkUURhdGF7IkNzc0NsYXNzIn0iIGFsaWduPSJyaWdodCI+CiAgICAgICAgICAgICAgICAgIDxpbWcgYm9yZGVyPSIwIiBzcmM9IiRDb25maWd7IkZyb250ZW5kOjpJbWFnZVBhdGgifSRRRGF0YXsiQ3VySW5jaVNpZ25hbCJ9LnBuZyIgdGl0bGU9IiRRdW90ZXsiJFRleHR7IiREYXRheyJDdXJJbmNpU3RhdGUifSJ9In0iIGFsdD0iJFF1b3RleyIkVGV4dHsiJERhdGF7IkN1ckluY2lTdGF0ZSJ9In0ifSI+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSIkUURhdGF7IkNzc0NsYXNzIn0iPgogICAgICAgICAgICAgICAgICA8YSBocmVmPSIkRW52eyJCYXNlbGluayJ9QWN0aW9uPUFnZW50SVRTTVNlcnZpY2Vab29tJlNlcnZpY2VJRD0kUURhdGF7IlNlcnZpY2VJRCJ9Ij4KICAgICAgICAgICAgICAgICAgJFFEYXRheyJOYW1lIn0KICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iJFFEYXRheyJDc3NDbGFzcyJ9Ij4kVGV4dHsiJFFEYXRheyJUeXBlIn0ifTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9IiRRRGF0YXsiQ3NzQ2xhc3MifSI+JFRleHR7IiRRRGF0YXsiQ3JpdGljYWxpdHkifSJ9PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iJFFEYXRheyJDc3NDbGFzcyJ9IiB3aWR0aD0iMTUwIj4kVGltZUxvbmd7IiRRRGF0YXsiQ2hhbmdlVGltZSJ9In08L3RkPgogICAgICAgICAgICAgIDwvdHI+CjwhLS0gZHRsOmJsb2NrOlNlcnZpY2VSb3cgLS0+CiAgICAgICAgICAgICAgPHRyIGNsYXNzPSJjb250ZW50Zm9vdGVyIj4KICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSI1Ij4mbmJzcDs8L3RkPgogICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICA8L3RkPgogICAgICAgIDwvdHI+CiAgICAgIDwvdGFibGU+CjwhLS0gZHRsOmJsb2NrOlNlcnZpY2UgLS0+CiAgICAgIDxicj4KICAgIDwvdGQ+CiAgICA8dGQgd2lkdGg9IjI1JSIgY2xhc3M9Im1lbnUiPgogICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMSIgY2VsbHBhZGRpbmc9IjAiIHdpZHRoPSIxMDAlIj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgY2xhc3M9Im1haW5rZXkiPiRUZXh0eyJDcmVhdGVkIn06PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0ibWFpbnZhbHVlIj4kVGltZUxvbmd7IiREYXRheyJDcmVhdGVUaW1lIn0ifTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGQgY2xhc3M9Im1haW5rZXkiPiRUZXh0eyJDcmVhdGVkIGJ5In06PC90ZD4KICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgPGRpdiB0aXRsZT0iJFFEYXRheyJDcmVhdGVVc2VyTG9naW4ifSAoJFF1b3RleyIkRGF0YXsiQ3JlYXRlVXNlckZpcnN0bmFtZSJ9ICREYXRheyJDcmVhdGVVc2VyTGFzdG5hbWUifSJ9KSI+CiAgICAgICAgICAgICRRRGF0YXsiQ3JlYXRlVXNlckxvZ2luIiwiMTUifSAoJFF1b3RleyIkRGF0YXsiQ3JlYXRlVXNlckZpcnN0bmFtZSJ9ICREYXRheyJDcmVhdGVVc2VyTGFzdG5hbWUifSIsIjE1In0pCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgICA8L3RyPgogICAgICAgIDx0cj4KICAgICAgICAgIDx0ZCBjbGFzcz0ibWFpbmtleSI+JFRleHR7Ikxhc3QgY2hhbmdlZCJ9OjwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Im1haW52YWx1ZSI+JFRpbWVMb25neyIkRGF0YXsiQ2hhbmdlVGltZSJ9In08L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPHRyPgogICAgICAgICAgPHRkIGNsYXNzPSJtYWlua2V5Ij4kVGV4dHsiTGFzdCBjaGFuZ2VkIGJ5In06PC90ZD4KICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgPGRpdiB0aXRsZT0iJFFEYXRheyJDaGFuZ2VVc2VyTG9naW4ifSAoJFF1b3RleyIkRGF0YXsiQ2hhbmdlVXNlckZpcnN0bmFtZSJ9ICREYXRheyJDaGFuZ2VVc2VyTGFzdG5hbWUifSJ9KSI+CiAgICAgICAgICAgICRRRGF0YXsiQ2hhbmdlVXNlckxvZ2luIiwiMTUifSAoJFF1b3RleyIkRGF0YXsiQ2hhbmdlVXNlckZpcnN0bmFtZSJ9ICREYXRheyJDaGFuZ2VVc2VyTGFzdG5hbWUifSIsIjE1In0pCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgICA8L3RyPgogICAgICA8L3RhYmxlPgogICAgPC90ZD4KICA8L3RyPgo8L3RhYmxlPgo=</File>
        <File Location="Kernel/Output/HTML/Standard/RichTextEditorITSM.dtl" Permission="644" Encode="Base64">IyAtLQojIFJpY2hUZXh0RWRpdG9ySVRTTS5kdGwgLSBwcm92aWRlcyBSaWNoIFRleHQgRWRpdG9yCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTAgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIC0tCiMgJElkOiBSaWNoVGV4dEVkaXRvcklUU00uZHRsLHYgMS40IDIwMTAvMDUvMjYgMTc6MDg6MzIgdWIgRXhwICQKIyAkT2xkSWQ6IFJpY2hUZXh0RWRpdG9yLmR0bCx2IDEuMjAuMi4xMSAyMDEwLzA1LzI2IDEyOjQ2OjMxIHViIEV4cCAkCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgojIGxvYWQganMKPHNjcmlwdCBzcmM9IiRDb25maWd7IkZyb250ZW5kOjpKYXZhU2NyaXB0UGF0aCJ9ZmNrZWRpdG9yLTIuNi40LjEvZmNrZWRpdG9yLmpzIj48L3NjcmlwdD4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KLy8gdXBkYXRlIGJvZHkgd2l0aCBjdXJyZW50IHJpY2ggdGV4dCBjb250ZW50CiMgLS0tCiMgSVRTTQojIC0tLQojZnVuY3Rpb24gUmljaFRleHRVcGRhdGVMaW5rZWRGaWVsZCgpIHsKIyAgICBGQ0tlZGl0b3JBUEkuR2V0SW5zdGFuY2UoJ1JpY2hUZXh0JykuVXBkYXRlTGlua2VkRmllbGQoKTsKZnVuY3Rpb24gUmljaFRleHRVcGRhdGVMaW5rZWRGaWVsZCggRmllbGRuYW1lICkgewogICAgRkNLZWRpdG9yQVBJLkdldEluc3RhbmNlKCBGaWVsZG5hbWUgKS5VcGRhdGVMaW5rZWRGaWVsZCgpOwojIC0tLQp9CgovLyBzZXQgZm9jdXMgdG8gcmljaCB0ZXh0IGVkaXRvcgojIC0tLQojIElUU00KIyAtLS0KI2Z1bmN0aW9uIFJpY2hUZXh0Rm9jdXMoKSB7CiMgICAgRkNLZWRpdG9yQVBJLkdldEluc3RhbmNlKCdSaWNoVGV4dCcpLkZvY3VzKCk7CmZ1bmN0aW9uIFJpY2hUZXh0Rm9jdXMoIEZpZWxkbmFtZSApIHsKICAgIEZDS2VkaXRvckFQSS5HZXRJbnN0YW5jZSggRmllbGRuYW1lICkuRm9jdXMoKTsKIyAtLS0KfQoKLy8gY2xlYW51cCByZWFsIGJvZHkKLy8gSWYgdGhlIGJvZHkgb25seSBjb250YWlucyB3aGl0ZXNwYWNlIG9yIGh0bWwgdGFncyBidXQgbm8gdGV4dCwKLy8gcmVzZXQgaXQgdG8gJycuIFRoaXMgaXMgbmVlZGVkIGZvciB0aGUgZnJvbnRlbmQgYW5kIGJhY2tlbmQKLy8gY29udGVudCBjaGVja3MgdG8gd29yayBwcm9wZXJseS4KZnVuY3Rpb24gUmljaFRleHRDbGVhbnVwKCkgewojIC0tLQojIElUU00KIyAtLS0KIyAgICB2YXIgRWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdSaWNoVGV4dCcpOwogICAgZm9yICggdmFyIGkgPSAxOyBpIDw9IDY7IGkrKyApIHsKICAgICAgICB2YXIgRWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdSaWNoVGV4dCcgKyBpKTsKIyAtLS0KICAgIGlmIChFbGVtKSB7CiAgICAgICAgdmFyIFN0cmlwcGVkQ29udGVudCA9IEVsZW0udmFsdWUucmVwbGFjZSgvXHMrfCZuYnNwO3w8XC8/XHcrXHM/XC8/Pi9nLCAnJyk7CiAgICAgICAgaWYgKFN0cmlwcGVkQ29udGVudC5sZW5ndGggPT0gMCkgewogICAgICAgICAgICBFbGVtLnZhbHVlID0gJyc7CiAgICAgICAgfQogICAgfQojIC0tLQojIElUU00KIyAtLS0KICAgIH0KIyAtLS0KfQoKIyAtLS0KIyBJVFNNCiMgLS0tCiNmdW5jdGlvbiBJbml0UmljaFRleHQoKSB7CiMgICAgdmFyIG9GQ0tlZGl0b3IgPSBuZXcgRkNLZWRpdG9yKCAnUmljaFRleHQnICk7CmZ1bmN0aW9uIEluaXRSaWNoVGV4dElUU00oIEZpZWxkbmFtZSApIHsKICAgIHZhciBvRkNLZWRpdG9yID0gbmV3IEZDS2VkaXRvciggRmllbGRuYW1lICk7CiMgLS0tCiAgICBvRkNLZWRpdG9yLkhlaWdodCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnJENvbmZpZ3siRnJvbnRlbmQ6OlJpY2hUZXh0SGVpZ2h0In0nIHx8IDMyMDsKICAgIG9GQ0tlZGl0b3IuV2lkdGggICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICckQ29uZmlneyJGcm9udGVuZDo6UmljaFRleHRXaWR0aCJ9JyB8fCA2MjA7CiAgICBvRkNLZWRpdG9yLkJhc2VQYXRoICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnJENvbmZpZ3siRnJvbnRlbmQ6OkphdmFTY3JpcHRQYXRoIn0vZmNrZWRpdG9yLTIuNi40LjEvJzsKICAgIG9GQ0tlZGl0b3IuQ29uZmlnWyJGb3JjZVBhc3RlQXNQbGFpblRleHQiXSAgICA9IGZhbHNlOwogICAgb0ZDS2VkaXRvci5Db25maWdbIkVkaXRvckFyZWFTdHlsZXMiXSAgICAgICAgID0gJ2JvZHkgeyAkQ29uZmlneyJGcm9udGVuZDo6UmljaFRleHQ6OkRlZmF1bHRDU1MifSB9JzsKICAgIG9GQ0tlZGl0b3IuQ29uZmlnWyJBdXRvRGV0ZWN0TGFuZ3VhZ2UiXSAgICAgICA9IGZhbHNlOwoKICAgIC8vIEZpeCBmb3IgYnVnIzUzODMgLSBsYW5ndWFnZSBzdHJpbmdzIHN1Y2ggYXMgcHRfQlIgc2hvdWxkIGJlIHJlZm9ybWF0dGVkIGFzIHB0LWJyOgogICAgb0ZDS2VkaXRvci5Db25maWdbIkRlZmF1bHRMYW5ndWFnZSJdICAgICAgICAgID0gU3RyaW5nKCckRW52eyJVc2VyTGFuZ3VhZ2UifScpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgiXyIsICItIik7CgogICAgb0ZDS2VkaXRvci5Db25maWdbIkltYWdlVXBsb2FkVVJMIl0gICAgICAgICAgID0gJyRFbnZ7IkJhc2VsaW5rIn0nOwogICAgb0ZDS2VkaXRvci5Db25maWdbIkZpcmVmb3hTcGVsbENoZWNrZXIiXSAgICAgID0gdHJ1ZTsKICAgIG9GQ0tlZGl0b3IuQ29uZmlnWyJCcm93c2VyQ29udGV4dE1lbnUiXSAgICAgICA9IHRydWU7CiAgICBvRkNLZWRpdG9yLkNvbmZpZ1siU3BlbGxDaGVja2VyIl0gICAgICAgICAgICAgPSAnU3BlbGxlclBhZ2VzJzsKICAgIG9GQ0tlZGl0b3IuQ29uZmlnWyJTcGVsbGVyUGFnZXNTZXJ2ZXJTY3JpcHQiXSA9ICckRW52eyJCYXNlbGluayJ9JzsKICAgIG9GQ0tlZGl0b3IuQ29uZmlnWyJGb250U2l6ZXMiXSAgICAgICAgICAgICAgICA9ICc4cHg7MTBweDsxMnB4OzE2cHg7MThweDsyMHB4OzIycHg7MjRweDsyNnB4OzI4cHg7MzBweDsnOwogICAgb0ZDS2VkaXRvci5Db25maWdbIkVudGVyTW9kZSJdICAgICAgICAgICAgICAgID0gJ2JyJzsKICAgIG9GQ0tlZGl0b3IuQ29uZmlnWyJTaGlmdEVudGVyTW9kZSJdICAgICAgICAgICA9ICdicic7CiAgICBvRkNLZWRpdG9yLkNvbmZpZ1siTGlua1VwbG9hZCJdICAgICAgICAgICAgICAgPSBmYWxzZTsKCiAgICBpZiAoICckRW52eyJUZXh0RGlyZWN0aW9uIn0nICkgewogICAgICAgIG9GQ0tlZGl0b3IuQ29uZmlnWyJDb250ZW50TGFuZ0RpcmVjdGlvbiJdID0gJyRFbnZ7IlRleHREaXJlY3Rpb24ifSc7CiAgICB9CgogICAgdmFyIFRvb2xiYXJTZXQgPSAnJzsKICAgIGlmICggZG9jdW1lbnQuY29tcG9zZSAmJiBkb2N1bWVudC5jb21wb3NlLkZvcm1JRCApIHsKICAgICAgICBvRkNLZWRpdG9yLkNvbmZpZ1siQWN0aW9uIl0gPSAnUGljdHVyZVVwbG9hZCc7CiAgICAgICAgb0ZDS2VkaXRvci5Db25maWdbIkZvcm1JRCJdID0gZG9jdW1lbnQuY29tcG9zZS5Gb3JtSUQudmFsdWU7CiAgICAgICAgVG9vbGJhclNldCA9ICdGdWxsJzsKICAgICAgICBpZiAoICckRW52eyJCcm93c2VyU3BlbGxDaGVja2VySW5saW5lIn0nICkgewogICAgICAgICAgICBUb29sYmFyU2V0ID0gJ0Z1bGxTcGVsbCc7CiAgICAgICAgfQogICAgfQogICAgZWxzZSB7CiAgICAgICAgVG9vbGJhclNldCA9ICdTaW1wbGUnOwogICAgICAgIGlmICggJyRFbnZ7IkJyb3dzZXJTcGVsbENoZWNrZXJJbmxpbmUifScgKSB7CiAgICAgICAgICAgIFRvb2xiYXJTZXQgPSAnU2ltcGxlU3BlbGwnOwogICAgICAgIH0KICAgIH0KICAgIG9GQ0tlZGl0b3IuVG9vbGJhclNldCA9IFRvb2xiYXJTZXQ7CgogICAgb0ZDS2VkaXRvci5SZXBsYWNlVGV4dGFyZWEoKTsKfQoKLy8gcHJlc2VydmUgb2xkIHdpbmRvdyBvbmxvYWQgZXZlbnQKdmFyIE9sZE9uTG9hZCA9IHdpbmRvdy5vbmxvYWQ7CndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbigpIHsKICAgIGlmICh0eXBlb2YgT2xkT25Mb2FkID09ICdmdW5jdGlvbicpIHsKICAgICAgICBPbGRPbkxvYWQoKTsKICAgIH0KIyAtLS0KIyBJVFNNCiMgLS0tCiMgICAgSW5pdFJpY2hUZXh0KCk7CiAgICBmb3IgKCB2YXIgaSA9IDE7IGkgPD0gNjsgaSsrICkgewogICAgICAgIGlmICggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ1JpY2hUZXh0JyArIGkpICkgewogICAgICAgICAgICB2YXIgbXlFZGl0b3IgPSBJbml0UmljaFRleHRJVFNNKCdSaWNoVGV4dCcgKyBpKTsKICAgICAgICB9CiAgICB9CiMgLS0tCn0KCmZ1bmN0aW9uIEZDS2VkaXRvcl9PbkNvbXBsZXRlKCBlZGl0b3JJbnN0YW5jZSApIHsKICAgIC8vIHdvcmthcm91bmQgZm9yIGh0dHA6Ly9kZXYuZmNrZWRpdG9yLm5ldC90aWNrZXQvMzA1MwogICAgLy8gc2VlIGFsc28gaHR0cDovL3d3dy5mY2tlZGl0b3IubmV0L2ZvcnVtcy92aWV3dG9waWMucGhwP2Y9NiZ0PTEzMjIyCiAgICB2YXIgZmNrX2lmcmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdSaWNoVGV4dF9fX0ZyYW1lJyk7CiAgICBpZiAoIGZja19pZnJhbWUgJiYgZmNrX2lmcmFtZS5jb250ZW50RG9jdW1lbnQgKSB7CiAgICAgICAgdmFyIGZja19lZGl0aW5nX2FyZWEgPSBmY2tfaWZyYW1lLmNvbnRlbnREb2N1bWVudC5nZXRFbGVtZW50QnlJZCgneEVkaXRpbmdBcmVhJyk7CiAgICAgICAgZmNrX2VkaXRpbmdfYXJlYS5zdHlsZS5oZWlnaHQgPSAnMTAwLjElJzsKICAgICAgICBzZXRUaW1lb3V0KCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgZmNrX2VkaXRpbmdfYXJlYS5zdHlsZS5oZWlnaHQgPSAnMTAwJScKICAgICAgICB9LCAxMDAgKTsKICAgIH0KCiAgICAvLyBjbGVhbnVwIGhpZGRlbiBib2R5IGZpZWxkIGFmdGVyIHVwZGF0ZSB3aXRoIGNvbnRlbnQgb2YgcmljaCB0ZXh0CiAgICBlZGl0b3JJbnN0YW5jZS5FdmVudHMuQXR0YWNoRXZlbnQoICdPbkFmdGVyTGlua2VkRmllbGRVcGRhdGUnLCBSaWNoVGV4dENsZWFudXAgKTsKfQo8L3NjcmlwdD4K</File>
        <File Location="Kernel/System/EventHandler.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/System/LinkObject/Service.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9TeXN0ZW0vTGlua09iamVjdC9TZXJ2aWNlLnBtIC0gdG8gbGluayBzZXJ2aWNlIG9iamVjdHMKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAwOSBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgLS0KIyAkSWQ6IFNlcnZpY2UucG0sdiAxLjcgMjAwOS8wOC8xOCAyMjoyMDo1MiBtaCBFeHAgJAojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6OlN5c3RlbTo6TGlua09iamVjdDo6U2VydmljZTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnVzZSBLZXJuZWw6OlN5c3RlbTo6U2VydmljZTsKCnVzZSB2YXJzIHF3KCRWRVJTSU9OKTsKJFZFUlNJT04gPSBxdygkUmV2aXNpb246IDEuNyAkKSBbMV07CgpzdWIgbmV3IHsKICAgIG15ICggJFR5cGUsICVQYXJhbSApID0gQF87CgogICAgIyBhbGxvY2F0ZSBuZXcgaGFzaCBmb3Igb2JqZWN0CiAgICBteSAkU2VsZiA9IHt9OwogICAgYmxlc3MoICRTZWxmLCAkVHlwZSApOwoKICAgICMgY2hlY2sgbmVlZGVkIG9iamVjdHMKICAgIGZvciBteSAkT2JqZWN0ICgKICAgICAgICBxdyhEQk9iamVjdCBDb25maWdPYmplY3QgTG9nT2JqZWN0IE1haW5PYmplY3QgRW5jb2RlT2JqZWN0IFRpbWVPYmplY3QgTGlua09iamVjdCkKICAgICAgICApCiAgICB7CiAgICAgICAgJFNlbGYtPnskT2JqZWN0fSA9ICRQYXJhbXskT2JqZWN0fSB8fCBkaWUgIkdvdCBubyAkT2JqZWN0ISI7CiAgICB9CgogICAgJFNlbGYtPntTZXJ2aWNlT2JqZWN0fSA9IEtlcm5lbDo6U3lzdGVtOjpTZXJ2aWNlLT5uZXcoICV7JFNlbGZ9ICk7CgogICAgcmV0dXJuICRTZWxmOwp9Cgo9aXRlbSBMaW5rTGlzdFdpdGhEYXRhKCkKCmZpbGwgdXAgdGhlIGxpbmsgbGlzdCB3aXRoIGRhdGEKCiAgICAkU3VjY2VzcyA9ICRMaW5rT2JqZWN0QmFja2VuZC0+TGlua0xpc3RXaXRoRGF0YSgKICAgICAgICBMaW5rTGlzdCA9PiAkSGFzaFJlZiwKICAgICAgICBVc2VySUQgICA9PiAxLAogICAgKTsKCj1jdXQKCnN1YiBMaW5rTGlzdFdpdGhEYXRhIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGZvciBteSAkQXJndW1lbnQgKHF3KExpbmtMaXN0IFVzZXJJRCkpIHsKICAgICAgICBpZiAoICEkUGFyYW17JEFyZ3VtZW50fSApIHsKICAgICAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICAgICAgTWVzc2FnZSAgPT4gIk5lZWQgJEFyZ3VtZW50ISIsCiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgIyBjaGVjayBsaW5rIGxpc3QKICAgIGlmICggcmVmICRQYXJhbXtMaW5rTGlzdH0gbmUgJ0hBU0gnICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAnTGlua0xpc3QgbXVzdCBiZSBhIGhhc2ggcmVmZXJlbmNlIScsCiAgICAgICAgKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgZm9yIG15ICRMaW5rVHlwZSAoIGtleXMgJXsgJFBhcmFte0xpbmtMaXN0fSB9ICkgewoKICAgICAgICBmb3IgbXkgJERpcmVjdGlvbiAoIGtleXMgJXsgJFBhcmFte0xpbmtMaXN0fS0+eyRMaW5rVHlwZX0gfSApIHsKCiAgICAgICAgICAgIFNFUlZJQ0VJRDoKICAgICAgICAgICAgZm9yIG15ICRTZXJ2aWNlSUQgKCBrZXlzICV7ICRQYXJhbXtMaW5rTGlzdH0tPnskTGlua1R5cGV9LT57JERpcmVjdGlvbn0gfSApIHsKCiAgICAgICAgICAgICAgICAjIGdldCBzZXJ2aWNlIGRhdGEKICAgICAgICAgICAgICAgIG15ICVTZXJ2aWNlRGF0YSA9ICRTZWxmLT57U2VydmljZU9iamVjdH0tPlNlcnZpY2VHZXQoCiAgICAgICAgICAgICAgICAgICAgU2VydmljZUlEID0+ICRTZXJ2aWNlSUQsCiAgICAgICAgICAgICAgICAgICAgVXNlcklEICAgID0+ICRQYXJhbXtVc2VySUR9LAogICAgICAgICAgICAgICAgKTsKCiAgICAgICAgICAgICAgICAjIHJlbW92ZSBpZCBmcm9tIGhhc2ggaWYgc2VydmljZSBjYW4gbm90IGdldAogICAgICAgICAgICAgICAgaWYgKCAhJVNlcnZpY2VEYXRhICkgewogICAgICAgICAgICAgICAgICAgIGRlbGV0ZSAkUGFyYW17TGlua0xpc3R9LT57JExpbmtUeXBlfS0+eyREaXJlY3Rpb259LT57JFNlcnZpY2VJRH07CiAgICAgICAgICAgICAgICAgICAgbmV4dCBTRVJWSUNFSUQ7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgIyBhZGQgc2VydmljZSBkYXRhCiAgICAgICAgICAgICAgICAkUGFyYW17TGlua0xpc3R9LT57JExpbmtUeXBlfS0+eyREaXJlY3Rpb259LT57JFNlcnZpY2VJRH0gPSBcJVNlcnZpY2VEYXRhOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiAxOwp9Cgo9aXRlbSBPYmplY3REZXNjcmlwdGlvbkdldCgpCgpyZXR1cm4gYSBoYXNoIG9mIG9iamVjdCBkZXNjcmlwdGlvbnMKClJldHVybgogICAgJURlc2NyaXB0aW9uID0gKAogICAgICAgIE5vcm1hbCA9PiAiU2VydmljZTogU2VydmljZU5hbWUiLAogICAgICAgIExvbmcgICA9PiAiU2VydmljZTogUGFyZW50U2VydmljZTo6U2VydmljZU5hbWUiLAogICAgKTsKCiAgICAlRGVzY3JpcHRpb24gPSAkTGlua09iamVjdC0+T2JqZWN0RGVzY3JpcHRpb25HZXQoCiAgICAgICAgS2V5ICAgICA9PiAxMjMsCiAgICAgICAgVXNlcklEICA9PiAxLAogICAgKTsKCj1jdXQKCnN1YiBPYmplY3REZXNjcmlwdGlvbkdldCB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVlZGVkIHN0dWZmCiAgICBmb3IgbXkgJEFyZ3VtZW50IChxdyhPYmplY3QgS2V5IFVzZXJJRCkpIHsKICAgICAgICBpZiAoICEkUGFyYW17JEFyZ3VtZW50fSApIHsKICAgICAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICAgICAgTWVzc2FnZSAgPT4gIk5lZWQgJEFyZ3VtZW50ISIsCiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgIyBjcmVhdGUgZGVzY3JpcHRpb24KICAgIG15ICVEZXNjcmlwdGlvbiA9ICgKICAgICAgICBOb3JtYWwgPT4gJ1NlcnZpY2UnLAogICAgICAgIExvbmcgICA9PiAnU2VydmljZScsCiAgICApOwoKICAgIHJldHVybiAlRGVzY3JpcHRpb24gaWYgJFBhcmFte01vZGV9ICYmICRQYXJhbXtNb2RlfSBlcSAnVGVtcG9yYXJ5JzsKCiAgICAjIGdldCBzZXJ2aWNlCiAgICBteSAlU2VydmljZSA9ICRTZWxmLT57U2VydmljZU9iamVjdH0tPlNlcnZpY2VHZXQoCiAgICAgICAgU2VydmljZUlEID0+ICRQYXJhbXtLZXl9LAogICAgICAgIFVzZXJJRCAgICA9PiAxLAogICAgKTsKCiAgICByZXR1cm4gaWYgISVTZXJ2aWNlOwoKICAgICMgY3JlYXRlIGRlc2NyaXB0aW9uCiAgICAlRGVzY3JpcHRpb24gPSAoCiAgICAgICAgTm9ybWFsID0+ICJTZXJ2aWNlICckU2VydmljZXtOYW1lU2hvcnR9JyIsCiAgICAgICAgTG9uZyAgID0+ICJTZXJ2aWNlICckU2VydmljZXtOYW1lfSciLAogICAgKTsKCiAgICByZXR1cm4gJURlc2NyaXB0aW9uOwp9Cgo9aXRlbSBPYmplY3RTZWFyY2goKQoKcmV0dXJuIGEgaGFzaCBsaXN0IG9mIHRoZSBzZWFyY2ggcmVzdWx0cwoKUmV0dXJuCiAgICAkU2VhcmNoTGlzdCA9IHsKICAgICAgICBOT1RMSU5LRUQgPT4gewogICAgICAgICAgICBTb3VyY2UgPT4gewogICAgICAgICAgICAgICAgMTIgID0+ICREYXRhT2ZJdGVtMTIsCiAgICAgICAgICAgICAgICAyMTIgPT4gJERhdGFPZkl0ZW0yMTIsCiAgICAgICAgICAgICAgICAzMzIgPT4gJERhdGFPZkl0ZW0zMzIsCiAgICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgIH07CgogICAgJFNlYXJjaExpc3QgPSAkTGlua09iamVjdEJhY2tlbmQtPk9iamVjdFNlYXJjaCgKICAgICAgICBTZWFyY2hQYXJhbXMgPT4gJEhhc2hSZWYsICAjIChvcHRpb25hbCkKICAgICAgICBVc2VySUQgICAgICAgPT4gMSwKICAgICk7Cgo9Y3V0CgpzdWIgT2JqZWN0U2VhcmNoIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGlmICggISRQYXJhbXtVc2VySUR9ICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAnTmVlZCBVc2VySUQhJywKICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgIH0KCiAgICAjIHNldCBkZWZhdWx0IHBhcmFtcwogICAgJFBhcmFte1NlYXJjaFBhcmFtc30gfHw9IHt9OwoKICAgICMgYWRkIHdpbGRjYXJkcwogICAgbXkgJVNlYXJjaDsKICAgIGlmICggJFBhcmFte1NlYXJjaFBhcmFtc30tPntOYW1lfSApIHsKICAgICAgICAkU2VhcmNoe05hbWV9ID0gJyonIC4gJFBhcmFte1NlYXJjaFBhcmFtc30tPntOYW1lfSAuICcqJzsKICAgIH0KCiAgICAjIHNlYXJjaCB0aGUgc2VydmljZXMKICAgIG15IEBTZXJ2aWNlSURzID0gJFNlbGYtPntTZXJ2aWNlT2JqZWN0fS0+U2VydmljZVNlYXJjaCgKICAgICAgICAleyAkUGFyYW17U2VhcmNoUGFyYW1zfSB9LAogICAgICAgICVTZWFyY2gsCiAgICAgICAgTGltaXQgID0+IDUwLAogICAgICAgIFVzZXJJRCA9PiAkUGFyYW17VXNlcklEfSwKICAgICk7CgogICAgbXkgJVNlYXJjaExpc3Q7CiAgICBTRVJWSUNFSUQ6CiAgICBmb3IgbXkgJFNlcnZpY2VJRCAoQFNlcnZpY2VJRHMpIHsKCiAgICAgICAgIyBnZXQgc2VydmljZSBkYXRhCiAgICAgICAgbXkgJVNlcnZpY2VEYXRhID0gJFNlbGYtPntTZXJ2aWNlT2JqZWN0fS0+U2VydmljZUdldCgKICAgICAgICAgICAgU2VydmljZUlEID0+ICRTZXJ2aWNlSUQsCiAgICAgICAgICAgIFVzZXJJRCAgICA9PiAkUGFyYW17VXNlcklEfSwKICAgICAgICApOwoKICAgICAgICBuZXh0IFNFUlZJQ0VJRCBpZiAhJVNlcnZpY2VEYXRhOwoKICAgICAgICAjIGFkZCBzZXJ2aWNlIGRhdGEKICAgICAgICAkU2VhcmNoTGlzdHtOT1RMSU5LRUR9LT57U291cmNlfS0+eyRTZXJ2aWNlSUR9ID0gXCVTZXJ2aWNlRGF0YTsKICAgIH0KCiAgICByZXR1cm4gXCVTZWFyY2hMaXN0Owp9Cgo9aXRlbSBMaW5rQWRkUHJlKCkKCmxpbmsgYWRkIHByZSBldmVudCBtb2R1bGUKCiAgICAkVHJ1ZSA9ICRMaW5rT2JqZWN0LT5MaW5rQWRkUHJlKAogICAgICAgIEtleSAgICAgICAgICA9PiAxMjMsCiAgICAgICAgU291cmNlT2JqZWN0ID0+ICdTZXJ2aWNlJywKICAgICAgICBTb3VyY2VLZXkgICAgPT4gMzIxLAogICAgICAgIFR5cGUgICAgICAgICA9PiAnTm9ybWFsJywKICAgICAgICBTdGF0ZSAgICAgICAgPT4gJ1ZhbGlkJywKICAgICAgICBVc2VySUQgICAgICAgPT4gMSwKICAgICk7CgogICAgb3IKCiAgICAkVHJ1ZSA9ICRMaW5rT2JqZWN0LT5MaW5rQWRkUHJlKAogICAgICAgIEtleSAgICAgICAgICA9PiAxMjMsCiAgICAgICAgVGFyZ2V0T2JqZWN0ID0+ICdTZXJ2aWNlJywKICAgICAgICBUYXJnZXRLZXkgICAgPT4gMzIxLAogICAgICAgIFR5cGUgICAgICAgICA9PiAnTm9ybWFsJywKICAgICAgICBTdGF0ZSAgICAgICAgPT4gJ1ZhbGlkJywKICAgICAgICBVc2VySUQgICAgICAgPT4gMSwKICAgICk7Cgo9Y3V0CgpzdWIgTGlua0FkZFByZSB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVlZGVkIHN0dWZmCiAgICBmb3IgbXkgJEFyZ3VtZW50IChxdyhLZXkgVHlwZSBTdGF0ZSBVc2VySUQpKSB7CiAgICAgICAgaWYgKCAhJFBhcmFteyRBcmd1bWVudH0gKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgICAgIE1lc3NhZ2UgID0+ICJOZWVkICRBcmd1bWVudCEiLAogICAgICAgICAgICApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiAxIGlmICRQYXJhbXtTdGF0ZX0gZXEgJ1RlbXBvcmFyeSc7CgogICAgcmV0dXJuIDE7Cn0KCj1pdGVtIExpbmtBZGRQb3N0KCkKCmxpbmsgYWRkIHByZSBldmVudCBtb2R1bGUKCiAgICAkVHJ1ZSA9ICRMaW5rT2JqZWN0LT5MaW5rQWRkUG9zdCgKICAgICAgICBLZXkgICAgICAgICAgPT4gMTIzLAogICAgICAgIFNvdXJjZU9iamVjdCA9PiAnU2VydmljZScsCiAgICAgICAgU291cmNlS2V5ICAgID0+IDMyMSwKICAgICAgICBUeXBlICAgICAgICAgPT4gJ05vcm1hbCcsCiAgICAgICAgU3RhdGUgICAgICAgID0+ICdWYWxpZCcsCiAgICAgICAgVXNlcklEICAgICAgID0+IDEsCiAgICApOwoKICAgIG9yCgogICAgJFRydWUgPSAkTGlua09iamVjdC0+TGlua0FkZFBvc3QoCiAgICAgICAgS2V5ICAgICAgICAgID0+IDEyMywKICAgICAgICBUYXJnZXRPYmplY3QgPT4gJ1NlcnZpY2UnLAogICAgICAgIFRhcmdldEtleSAgICA9PiAzMjEsCiAgICAgICAgVHlwZSAgICAgICAgID0+ICdOb3JtYWwnLAogICAgICAgIFN0YXRlICAgICAgICA9PiAnVmFsaWQnLAogICAgICAgIFVzZXJJRCAgICAgICA9PiAxLAogICAgKTsKCj1jdXQKCnN1YiBMaW5rQWRkUG9zdCB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVlZGVkIHN0dWZmCiAgICBmb3IgbXkgJEFyZ3VtZW50IChxdyhLZXkgVHlwZSBTdGF0ZSBVc2VySUQpKSB7CiAgICAgICAgaWYgKCAhJFBhcmFteyRBcmd1bWVudH0gKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgICAgIE1lc3NhZ2UgID0+ICJOZWVkICRBcmd1bWVudCEiLAogICAgICAgICAgICApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiAxIGlmICRQYXJhbXtTdGF0ZX0gZXEgJ1RlbXBvcmFyeSc7CgogICAgcmV0dXJuIDE7Cn0KCj1pdGVtIExpbmtEZWxldGVQcmUoKQoKbGluayBkZWxldGUgcHJlIGV2ZW50IG1vZHVsZQoKICAgICRUcnVlID0gJExpbmtPYmplY3QtPkxpbmtEZWxldGVQcmUoCiAgICAgICAgS2V5ICAgICAgICAgID0+IDEyMywKICAgICAgICBTb3VyY2VPYmplY3QgPT4gJ1NlcnZpY2UnLAogICAgICAgIFNvdXJjZUtleSAgICA9PiAzMjEsCiAgICAgICAgVHlwZSAgICAgICAgID0+ICdOb3JtYWwnLAogICAgICAgIFN0YXRlICAgICAgICA9PiAnVmFsaWQnLAogICAgICAgIFVzZXJJRCAgICAgICA9PiAxLAogICAgKTsKCiAgICBvcgoKICAgICRUcnVlID0gJExpbmtPYmplY3QtPkxpbmtEZWxldGVQcmUoCiAgICAgICAgS2V5ICAgICAgICAgID0+IDEyMywKICAgICAgICBUYXJnZXRPYmplY3QgPT4gJ1NlcnZpY2UnLAogICAgICAgIFRhcmdldEtleSAgICA9PiAzMjEsCiAgICAgICAgVHlwZSAgICAgICAgID0+ICdOb3JtYWwnLAogICAgICAgIFN0YXRlICAgICAgICA9PiAnVmFsaWQnLAogICAgICAgIFVzZXJJRCAgICAgICA9PiAxLAogICAgKTsKCj1jdXQKCnN1YiBMaW5rRGVsZXRlUHJlIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGZvciBteSAkQXJndW1lbnQgKHF3KEtleSBUeXBlIFN0YXRlIFVzZXJJRCkpIHsKICAgICAgICBpZiAoICEkUGFyYW17JEFyZ3VtZW50fSApIHsKICAgICAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICAgICAgTWVzc2FnZSAgPT4gIk5lZWQgJEFyZ3VtZW50ISIsCiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgcmV0dXJuIDEgaWYgJFBhcmFte1N0YXRlfSBlcSAnVGVtcG9yYXJ5JzsKCiAgICByZXR1cm4gMTsKfQoKPWl0ZW0gTGlua0RlbGV0ZVBvc3QoKQoKbGluayBkZWxldGUgcG9zdCBldmVudCBtb2R1bGUKCiAgICAkVHJ1ZSA9ICRMaW5rT2JqZWN0LT5MaW5rRGVsZXRlUG9zdCgKICAgICAgICBLZXkgICAgICAgICAgPT4gMTIzLAogICAgICAgIFNvdXJjZU9iamVjdCA9PiAnU2VydmljZScsCiAgICAgICAgU291cmNlS2V5ICAgID0+IDMyMSwKICAgICAgICBUeXBlICAgICAgICAgPT4gJ05vcm1hbCcsCiAgICAgICAgU3RhdGUgICAgICAgID0+ICdWYWxpZCcsCiAgICAgICAgVXNlcklEICAgICAgID0+IDEsCiAgICApOwoKICAgIG9yCgogICAgJFRydWUgPSAkTGlua09iamVjdC0+TGlua0RlbGV0ZVBvc3QoCiAgICAgICAgS2V5ICAgICAgICAgID0+IDEyMywKICAgICAgICBUYXJnZXRPYmplY3QgPT4gJ1NlcnZpY2UnLAogICAgICAgIFRhcmdldEtleSAgICA9PiAzMjEsCiAgICAgICAgVHlwZSAgICAgICAgID0+ICdOb3JtYWwnLAogICAgICAgIFN0YXRlICAgICAgICA9PiAnVmFsaWQnLAogICAgICAgIFVzZXJJRCAgICAgICA9PiAxLAogICAgKTsKCj1jdXQKCnN1YiBMaW5rRGVsZXRlUG9zdCB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVlZGVkIHN0dWZmCiAgICBmb3IgbXkgJEFyZ3VtZW50IChxdyhLZXkgVHlwZSBTdGF0ZSBVc2VySUQpKSB7CiAgICAgICAgaWYgKCAhJFBhcmFteyRBcmd1bWVudH0gKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgICAgIE1lc3NhZ2UgID0+ICJOZWVkICRBcmd1bWVudCEiLAogICAgICAgICAgICApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiAxIGlmICRQYXJhbXtTdGF0ZX0gZXEgJ1RlbXBvcmFyeSc7CgogICAgcmV0dXJuIDE7Cn0KCjE7Cg==</File>
        <File Location="Kernel/System/ITSMCIPAllocate.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/System/Service.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9TeXN0ZW0vU2VydmljZS5wbSAtIGFsbCBzZXJ2aWNlIGZ1bmN0aW9uCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTAgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIC0tCiMgJElkOiBTZXJ2aWNlLnBtLHYgMS4xNSAyMDEwLzA0LzEzIDE3OjQwOjIwIHViIEV4cCAkCiMgJE9sZElkOiBTZXJ2aWNlLnBtLHYgMS4zOS4yLjEgMjAxMC8wNC8xMyAxNzozMTo0NSB1YiBFeHAgJAojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6OlN5c3RlbTo6U2VydmljZTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnVzZSBLZXJuZWw6OlN5c3RlbTo6Q2hlY2tJdGVtOwp1c2UgS2VybmVsOjpTeXN0ZW06OlZhbGlkOwojIC0tLQojIElUU00KIyAtLS0KdXNlIEtlcm5lbDo6U3lzdGVtOjpHZW5lcmFsQ2F0YWxvZzsKdXNlIEtlcm5lbDo6U3lzdGVtOjpMaW5rT2JqZWN0Owp1c2UgS2VybmVsOjpTeXN0ZW06OlRpbWU7CiMgLS0tCgp1c2UgdmFycyBxdyhASVNBICRWRVJTSU9OKTsKJFZFUlNJT04gPSBxdygkUmV2aXNpb246IDEuMTUgJCkgWzFdOwoKPWhlYWQxIE5BTUUKCktlcm5lbDo6U3lzdGVtOjpTZXJ2aWNlIC0gc2VydmljZSBsaWIKCj1oZWFkMSBTWU5PUFNJUwoKQWxsIHNlcnZpY2UgZnVuY3Rpb25zLgoKPWhlYWQxIFBVQkxJQyBJTlRFUkZBQ0UKCj1vdmVyIDQKCj1jdXQKCj1pdGVtIG5ldygpCgpjcmVhdGUgYW4gb2JqZWN0CgogICAgdXNlIEtlcm5lbDo6Q29uZmlnOwogICAgdXNlIEtlcm5lbDo6U3lzdGVtOjpFbmNvZGU7CiAgICB1c2UgS2VybmVsOjpTeXN0ZW06OkxvZzsKICAgIHVzZSBLZXJuZWw6OlN5c3RlbTo6TWFpbjsKICAgIHVzZSBLZXJuZWw6OlN5c3RlbTo6REI7CiAgICB1c2UgS2VybmVsOjpTeXN0ZW06OlNlcnZpY2U7CgogICAgbXkgJENvbmZpZ09iamVjdCA9IEtlcm5lbDo6Q29uZmlnLT5uZXcoKTsKICAgIG15ICRFbmNvZGVPYmplY3QgPSBLZXJuZWw6OlN5c3RlbTo6RW5jb2RlLT5uZXcoCiAgICAgICAgQ29uZmlnT2JqZWN0ID0+ICRDb25maWdPYmplY3QsCiAgICApOwogICAgbXkgJExvZ09iamVjdCA9IEtlcm5lbDo6U3lzdGVtOjpMb2ctPm5ldygKICAgICAgICBDb25maWdPYmplY3QgPT4gJENvbmZpZ09iamVjdCwKICAgICAgICBFbmNvZGVPYmplY3QgPT4gJEVuY29kZU9iamVjdCwKICAgICk7CiAgICBteSAkTWFpbk9iamVjdCA9IEtlcm5lbDo6U3lzdGVtOjpNYWluLT5uZXcoCiAgICAgICAgQ29uZmlnT2JqZWN0ID0+ICRDb25maWdPYmplY3QsCiAgICAgICAgRW5jb2RlT2JqZWN0ID0+ICRFbmNvZGVPYmplY3QsCiAgICAgICAgTG9nT2JqZWN0ICAgID0+ICRMb2dPYmplY3QsCiAgICApOwogICAgbXkgJERCT2JqZWN0ID0gS2VybmVsOjpTeXN0ZW06OkRCLT5uZXcoCiAgICAgICAgQ29uZmlnT2JqZWN0ID0+ICRDb25maWdPYmplY3QsCiAgICAgICAgRW5jb2RlT2JqZWN0ID0+ICRFbmNvZGVPYmplY3QsCiAgICAgICAgTG9nT2JqZWN0ICAgID0+ICRMb2dPYmplY3QsCiAgICAgICAgTWFpbk9iamVjdCAgID0+ICRNYWluT2JqZWN0LAogICAgKTsKICAgIG15ICRTZXJ2aWNlT2JqZWN0ID0gS2VybmVsOjpTeXN0ZW06OlNlcnZpY2UtPm5ldygKICAgICAgICBDb25maWdPYmplY3QgPT4gJENvbmZpZ09iamVjdCwKICAgICAgICBFbmNvZGVPYmplY3QgPT4gJEVuY29kZU9iamVjdCwKICAgICAgICBMb2dPYmplY3QgICAgPT4gJExvZ09iamVjdCwKICAgICAgICBEQk9iamVjdCAgICAgPT4gJERCT2JqZWN0LAogICAgICAgIE1haW5PYmplY3QgICA9PiAkTWFpbk9iamVjdCwKICAgICk7Cgo9Y3V0CgpzdWIgbmV3IHsKICAgIG15ICggJFR5cGUsICVQYXJhbSApID0gQF87CgogICAgIyBhbGxvY2F0ZSBuZXcgaGFzaCBmb3Igb2JqZWN0CiAgICBteSAkU2VsZiA9IHt9OwogICAgYmxlc3MoICRTZWxmLCAkVHlwZSApOwoKICAgICMgY2hlY2sgbmVlZGVkIG9iamVjdHMKICAgIGZvciBteSAkT2JqZWN0IChxdyhEQk9iamVjdCBDb25maWdPYmplY3QgTG9nT2JqZWN0IEVuY29kZU9iamVjdCBNYWluT2JqZWN0KSkgewogICAgICAgICRTZWxmLT57JE9iamVjdH0gPSAkUGFyYW17JE9iamVjdH0gfHwgZGllICJHb3Qgbm8gJE9iamVjdCEiOwogICAgfQogICAgJFNlbGYtPntDaGVja0l0ZW1PYmplY3R9ID0gS2VybmVsOjpTeXN0ZW06OkNoZWNrSXRlbS0+bmV3KCAleyRTZWxmfSApOwogICAgJFNlbGYtPntWYWxpZE9iamVjdH0gICAgID0gS2VybmVsOjpTeXN0ZW06OlZhbGlkLT5uZXcoICV7JFNlbGZ9ICk7CiMgLS0tCiMgSVRTTQojIC0tLQogICAgJFNlbGYtPntUaW1lT2JqZWN0fSAgICAgICAgICAgPSBLZXJuZWw6OlN5c3RlbTo6VGltZS0+bmV3KCAleyRTZWxmfSApOwogICAgJFNlbGYtPntHZW5lcmFsQ2F0YWxvZ09iamVjdH0gPSBLZXJuZWw6OlN5c3RlbTo6R2VuZXJhbENhdGFsb2ctPm5ldyggJXskU2VsZn0gKTsKICAgICRTZWxmLT57TGlua09iamVjdH0gICAgICAgICAgID0gS2VybmVsOjpTeXN0ZW06OkxpbmtPYmplY3QtPm5ldyggJXskU2VsZn0gKTsKIyAtLS0KCiAgICAjIGxvYWQgZ2VuZXJhdG9yIHByZWZlcmVuY2VzIG1vZHVsZQogICAgbXkgJEdlbmVyYXRvck1vZHVsZSA9ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdTZXJ2aWNlOjpQcmVmZXJlbmNlc01vZHVsZScpCiAgICAgICAgfHwgJ0tlcm5lbDo6U3lzdGVtOjpTZXJ2aWNlOjpQcmVmZXJlbmNlc0RCJzsKICAgIGlmICggJFNlbGYtPntNYWluT2JqZWN0fS0+UmVxdWlyZSgkR2VuZXJhdG9yTW9kdWxlKSApIHsKICAgICAgICAkU2VsZi0+e1ByZWZlcmVuY2VzT2JqZWN0fSA9ICRHZW5lcmF0b3JNb2R1bGUtPm5ldyglUGFyYW0pOwogICAgfQoKICAgIHJldHVybiAkU2VsZjsKfQoKPWl0ZW0gU2VydmljZUxpc3QoKQoKcmV0dXJuIGEgaGFzaCBsaXN0IG9mIHNlcnZpY2VzCgogICAgbXkgJVNlcnZpY2VMaXN0ID0gJFNlcnZpY2VPYmplY3QtPlNlcnZpY2VMaXN0KAogICAgICAgIFZhbGlkICA9PiAwLCAgICMgKG9wdGlvbmFsKSBkZWZhdWx0IDEgKDB8MSkKICAgICAgICBVc2VySUQgPT4gMSwKICAgICk7Cgo9Y3V0CgpzdWIgU2VydmljZUxpc3QgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGNoZWNrIG5lZWRlZCBzdHVmZgogICAgaWYgKCAhJFBhcmFte1VzZXJJRH0gKSB7CiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgIE1lc3NhZ2UgID0+ICdOZWVkIFVzZXJJRCEnLAogICAgICAgICk7CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgICMgY2hlY2sgdmFsaWQgcGFyYW0KICAgIGlmICggIWRlZmluZWQgJFBhcmFte1ZhbGlkfSApIHsKICAgICAgICAkUGFyYW17VmFsaWR9ID0gMTsKICAgIH0KCiAgICAjIGFzayBkYXRhYmFzZQogICAgJFNlbGYtPntEQk9iamVjdH0tPlByZXBhcmUoCiAgICAgICAgU1FMID0+ICdTRUxFQ1QgaWQsIG5hbWUsIHZhbGlkX2lkIEZST00gc2VydmljZScsCiAgICApOwoKICAgICMgZmV0Y2ggdGhlIHJlc3VsdAogICAgbXkgJVNlcnZpY2VMaXN0OwogICAgbXkgJVNlcnZpY2VWYWxpZExpc3Q7CiAgICB3aGlsZSAoIG15IEBSb3cgPSAkU2VsZi0+e0RCT2JqZWN0fS0+RmV0Y2hyb3dBcnJheSgpICkgewogICAgICAgICRTZXJ2aWNlTGlzdHsgJFJvd1swXSB9ICAgICAgPSAkUm93WzFdOwogICAgICAgICRTZXJ2aWNlVmFsaWRMaXN0eyAkUm93WzBdIH0gPSAkUm93WzJdOwogICAgfQoKICAgIHJldHVybiAlU2VydmljZUxpc3QgaWYgISRQYXJhbXtWYWxpZH07CgogICAgIyBnZXQgdmFsaWQgaWRzCiAgICBteSBAVmFsaWRJRHMgPSAkU2VsZi0+e1ZhbGlkT2JqZWN0fS0+VmFsaWRJRHNHZXQoKTsKCiAgICAjIGR1cGxpY2F0ZSBzZXJ2aWNlIGxpc3QKICAgIG15ICVTZXJ2aWNlTGlzdFRtcCA9ICVTZXJ2aWNlTGlzdDsKCiAgICAjIGFkZCBzdWZmaXggZm9yIGNvcnJlY3Qgc29ydGluZwogICAgZm9yIG15ICRTZXJ2aWNlSUQgKCBrZXlzICVTZXJ2aWNlTGlzdFRtcCApIHsKICAgICAgICAkU2VydmljZUxpc3RUbXB7JFNlcnZpY2VJRH0gLj0gJzo6JzsKICAgIH0KCiAgICBteSAlU2VydmljZUludmFsaWRMaXN0OwogICAgU0VSVklDRUlEOgogICAgZm9yIG15ICRTZXJ2aWNlSUQgKCBzb3J0IHsgJFNlcnZpY2VMaXN0VG1weyRhfSBjbXAgJFNlcnZpY2VMaXN0VG1weyRifSB9IGtleXMgJVNlcnZpY2VMaXN0VG1wICkKICAgIHsKCiAgICAgICAgbXkgJFZhbGlkID0gc2NhbGFyIGdyZXAgeyAkXyBlcSAkU2VydmljZVZhbGlkTGlzdHskU2VydmljZUlEfSB9IEBWYWxpZElEczsKCiAgICAgICAgbmV4dCBTRVJWSUNFSUQgaWYgJFZhbGlkOwoKICAgICAgICAkU2VydmljZUludmFsaWRMaXN0eyAkU2VydmljZUxpc3R7JFNlcnZpY2VJRH0gfSA9IDE7CiAgICAgICAgZGVsZXRlICRTZXJ2aWNlTGlzdHskU2VydmljZUlEfTsKICAgIH0KCiAgICAjIGRlbGV0ZSBpbnZhbGlkIHNlcnZpY2VzIGFuZCBjaGlsZHMKICAgIGZvciBteSAkU2VydmljZUlEICgga2V5cyAlU2VydmljZUxpc3QgKSB7CgogICAgICAgIElOVkFMSUROQU1FOgogICAgICAgIGZvciBteSAkSW52YWxpZE5hbWUgKCBrZXlzICVTZXJ2aWNlSW52YWxpZExpc3QgKSB7CgogICAgICAgICAgICBpZiAoICRTZXJ2aWNlTGlzdHskU2VydmljZUlEfSA9fiBteyBcQSAkSW52YWxpZE5hbWUgOjogfXhtcyApIHsKICAgICAgICAgICAgICAgIGRlbGV0ZSAkU2VydmljZUxpc3R7JFNlcnZpY2VJRH07CiAgICAgICAgICAgICAgICBsYXN0IElOVkFMSUROQU1FOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiAlU2VydmljZUxpc3Q7Cn0KCj1pdGVtIFNlcnZpY2VHZXQoKQoKcmV0dXJuIGEgc2VydmljZSBhcyBoYXNoCgpSZXR1cm4KICAgICRTZXJ2aWNlRGF0YXtTZXJ2aWNlSUR9CiAgICAkU2VydmljZURhdGF7UGFyZW50SUR9CiAgICAkU2VydmljZURhdGF7TmFtZX0KICAgICRTZXJ2aWNlRGF0YXtOYW1lU2hvcnR9CiAgICAkU2VydmljZURhdGF7VmFsaWRJRH0KICAgICRTZXJ2aWNlRGF0YXtDb21tZW50fQogICAgJFNlcnZpY2VEYXRhe0NyZWF0ZVRpbWV9CiAgICAkU2VydmljZURhdGF7Q3JlYXRlQnl9CiAgICAkU2VydmljZURhdGF7Q2hhbmdlVGltZX0KICAgICRTZXJ2aWNlRGF0YXtDaGFuZ2VCeX0KIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAkU2VydmljZURhdGF7VHlwZUlEfQogICAgJFNlcnZpY2VEYXRhe1R5cGV9CiAgICAkU2VydmljZURhdGF7Q3JpdGljYWxpdHlJRH0KICAgICRTZXJ2aWNlRGF0YXtDcml0aWNhbGl0eX0KICAgICRTZXJ2aWNlRGF0YXtDdXJJbmNpU3RhdGVJRH0KICAgICRTZXJ2aWNlRGF0YXtDdXJJbmNpU3RhdGV9CiAgICAkU2VydmljZURhdGF7Q3VySW5jaVN0YXRlVHlwZX0KIyAtLS0KCiAgICBteSAlU2VydmljZURhdGEgPSAkU2VydmljZU9iamVjdC0+U2VydmljZUdldCgKICAgICAgICBTZXJ2aWNlSUQgPT4gMTIzLAogICAgICAgIFVzZXJJRCAgICA9PiAxLAogICAgKTsKCj1jdXQKCnN1YiBTZXJ2aWNlR2V0IHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGZvciBteSAkQXJndW1lbnQgKHF3KFNlcnZpY2VJRCBVc2VySUQpKSB7CiAgICAgICAgaWYgKCAhJFBhcmFteyRBcmd1bWVudH0gKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgICAgIE1lc3NhZ2UgID0+ICJOZWVkICRBcmd1bWVudCEiLAogICAgICAgICAgICApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgfQoKICAgICMgZ2V0IHNlcnZpY2UgZnJvbSBkYgogICAgJFNlbGYtPntEQk9iamVjdH0tPlByZXBhcmUoCiAgICAgICAgU1FMID0+CiAgICAgICAgICAgICdTRUxFQ1QgaWQsIG5hbWUsIHZhbGlkX2lkLCBjb21tZW50cywgY3JlYXRlX3RpbWUsIGNyZWF0ZV9ieSwgY2hhbmdlX3RpbWUsIGNoYW5nZV9ieSAnCiMgLS0tCiMgSVRTTQojIC0tLQogICAgICAgICAgICAuICIsIHR5cGVfaWQsIGNyaXRpY2FsaXR5X2lkICIKIyAtLS0KICAgICAgICAgICAgLiAnRlJPTSBzZXJ2aWNlIFdIRVJFIGlkID0gPycsCiAgICAgICAgQmluZCAgPT4gWyBcJFBhcmFte1NlcnZpY2VJRH0gXSwKICAgICAgICBMaW1pdCA9PiAxLAogICAgKTsKCiAgICAjIGZldGNoIHRoZSByZXN1bHQKICAgIG15ICVTZXJ2aWNlRGF0YTsKICAgIHdoaWxlICggbXkgQFJvdyA9ICRTZWxmLT57REJPYmplY3R9LT5GZXRjaHJvd0FycmF5KCkgKSB7CiAgICAgICAgJFNlcnZpY2VEYXRhe1NlcnZpY2VJRH0gID0gJFJvd1swXTsKICAgICAgICAkU2VydmljZURhdGF7TmFtZX0gICAgICAgPSAkUm93WzFdOwogICAgICAgICRTZXJ2aWNlRGF0YXtWYWxpZElEfSAgICA9ICRSb3dbMl07CiAgICAgICAgJFNlcnZpY2VEYXRhe0NvbW1lbnR9ICAgID0gJFJvd1szXSB8fCAnJzsKICAgICAgICAkU2VydmljZURhdGF7Q3JlYXRlVGltZX0gPSAkUm93WzRdOwogICAgICAgICRTZXJ2aWNlRGF0YXtDcmVhdGVCeX0gICA9ICRSb3dbNV07CiAgICAgICAgJFNlcnZpY2VEYXRhe0NoYW5nZVRpbWV9ID0gJFJvd1s2XTsKICAgICAgICAkU2VydmljZURhdGF7Q2hhbmdlQnl9ICAgPSAkUm93WzddOwojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAkU2VydmljZURhdGF7VHlwZUlEfSAgICAgICAgPSAkUm93WzhdOwogICAgICAgICRTZXJ2aWNlRGF0YXtDcml0aWNhbGl0eUlEfSA9ICRSb3dbOV07CiMgLS0tCiAgICB9CgogICAgIyBjaGVjayBzZXJ2aWNlCiAgICBpZiAoICEkU2VydmljZURhdGF7U2VydmljZUlEfSApIHsKICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgTWVzc2FnZSAgPT4gIk5vIHN1Y2ggU2VydmljZUlEICgkUGFyYW17U2VydmljZUlEfSkhIiwKICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgIH0KCiAgICAjIGNyZWF0ZSBzaG9ydCBuYW1lIGFuZCBwYXJlbnRpZAogICAgJFNlcnZpY2VEYXRhe05hbWVTaG9ydH0gPSAkU2VydmljZURhdGF7TmFtZX07CiAgICBpZiAoICRTZXJ2aWNlRGF0YXtOYW1lfSA9fiAvXiguKik6OiguKz8pJC8gKSB7CiAgICAgICAgJFNlcnZpY2VEYXRhe05hbWVTaG9ydH0gPSAkMjsKCiAgICAgICAgIyBsb29rdXAgcGFyZW50CiAgICAgICAgbXkgJFNlcnZpY2VJRCA9ICRTZWxmLT5TZXJ2aWNlTG9va3VwKAogICAgICAgICAgICBOYW1lID0+ICQxLAogICAgICAgICk7CiAgICAgICAgJFNlcnZpY2VEYXRhe1BhcmVudElEfSA9ICRTZXJ2aWNlSUQ7CiAgICB9CgogICAgIyBnZXQgc2VydmljZSBwcmVmZXJlbmNlcwogICAgbXkgJVByZWZlcmVuY2VzID0gJFNlbGYtPlNlcnZpY2VQcmVmZXJlbmNlc0dldCgKICAgICAgICBTZXJ2aWNlSUQgPT4gJFBhcmFte1NlcnZpY2VJRH0sCiAgICApOwojIC0tLQojIElUU00KIyAtLS0KCiAgICAjIGdldCBzZXJ2aWNlIHR5cGUgbGlzdAogICAgbXkgJFNlcnZpY2VUeXBlTGlzdCA9ICRTZWxmLT57R2VuZXJhbENhdGFsb2dPYmplY3R9LT5JdGVtTGlzdCgKICAgICAgICBDbGFzcyA9PiAnSVRTTTo6U2VydmljZTo6VHlwZScsCiAgICApOwogICAgJFNlcnZpY2VEYXRhe1R5cGV9ID0gJFNlcnZpY2VUeXBlTGlzdC0+eyAkU2VydmljZURhdGF7VHlwZUlEfSB9IHx8ICcnOwoKICAgICMgZ2V0IGNyaXRpY2FsaXR5IGxpc3QKICAgIG15ICRDcml0aWNhbGl0eUxpc3QgPSAkU2VsZi0+e0dlbmVyYWxDYXRhbG9nT2JqZWN0fS0+SXRlbUxpc3QoCiAgICAgICAgQ2xhc3MgPT4gJ0lUU006OkNvcmU6OkNyaXRpY2FsaXR5JywKICAgICk7CiAgICAkU2VydmljZURhdGF7Q3JpdGljYWxpdHl9ID0gJENyaXRpY2FsaXR5TGlzdC0+eyAkU2VydmljZURhdGF7Q3JpdGljYWxpdHlJRH0gfSB8fCAnJzsKCiAgICAjIHNldCBkZWZhdWx0IGluY2lkZW50IHN0YXRlIHR5cGUKICAgICRTZXJ2aWNlRGF0YXtDdXJJbmNpU3RhdGVUeXBlfSA9ICdvcGVyYXRpb25hbCc7CgogICAgIyBnZXQgSVRTTSBtb2R1bGUgZGlyZWN0b3J5CiAgICBteSAkQ29uZmlnSXRlbU1vZHVsZSA9ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdIb21lJykgLiAnL0tlcm5lbC9TeXN0ZW0vSVRTTUNvbmZpZ0l0ZW0ucG0nOwoKICAgICMgY2hlY2sgaWYgSVRTTUNvbmZpZ3VyYXRpb25NYW5hZ2VtZW50IHBhY2thZ2UgaXMgaW5zdGFsbGVkCiAgICBpZiAoIC1lICRDb25maWdJdGVtTW9kdWxlICkgewoKICAgICAgICAjIGNoZWNrIGlmIGEgcHJlZmVyZW5jZSBzZXR0aW5nIGZvciBDdXJJbmNpU3RhdGVUeXBlRnJvbUNJcyBleGlzdHMKICAgICAgICBpZiAoICRQcmVmZXJlbmNlc3tDdXJJbmNpU3RhdGVUeXBlRnJvbUNJc30gKSB7CgogICAgICAgICAgICAjIHNldCBkZWZhdWx0IGluY2lkZW50IHN0YXRlIHR5cGUgZnJvbSBzZXJ2aWNlIHByZWZlcmVuY2VzICdDdXJJbmNpU3RhdGVUeXBlRnJvbUNJcycKICAgICAgICAgICAgJFNlcnZpY2VEYXRhe0N1ckluY2lTdGF0ZVR5cGV9ID0gJFByZWZlcmVuY2Vze0N1ckluY2lTdGF0ZVR5cGVGcm9tQ0lzfTsKICAgICAgICB9CgogICAgICAgICMgc2V0IHRoZSBwcmVmZXJlbmNlcyBzZXR0aW5nIGZvciBDdXJJbmNpU3RhdGVUeXBlRnJvbUNJcwogICAgICAgIGVsc2UgewoKICAgICAgICAgICAgIyBnZXQgdGhlIGluY2lkZW50IGxpbmsgdHlwZQogICAgICAgICAgICBteSAkTGlua1R5cGUgPSAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnSVRTTTo6Q29yZTo6SW5jaWRlbnRMaW5rVHlwZScpOwoKICAgICAgICAgICAgIyBmaW5kIGFsbCBsaW5rZWQgY29uZmlnIGl0ZW1zCiAgICAgICAgICAgIG15ICVMaW5rZWRDb25maWdJdGVtSURzID0gJFNlbGYtPntMaW5rT2JqZWN0fS0+TGlua0tleUxpc3RXaXRoRGF0YSgKICAgICAgICAgICAgICAgIE9iamVjdDEgICA9PiAnU2VydmljZScsCiAgICAgICAgICAgICAgICBLZXkxICAgICAgPT4gJFBhcmFte1NlcnZpY2VJRH0sCiAgICAgICAgICAgICAgICBPYmplY3QyICAgPT4gJ0lUU01Db25maWdJdGVtJywKICAgICAgICAgICAgICAgIFN0YXRlICAgICA9PiAnVmFsaWQnLAogICAgICAgICAgICAgICAgVHlwZSAgICAgID0+ICRMaW5rVHlwZSwKICAgICAgICAgICAgICAgIFVzZXJJRCAgICA9PiAxLAogICAgICAgICAgICApOwoKICAgICAgICAgICAgIyBpbnZlc3RpZ2F0ZSB0aGUgY3VycmVudCBpbmNpZGVudCBzdGF0ZSBvZiBlYWNoIGNvbmZpZyBpdGVtCiAgICAgICAgICAgIENPTkZJR0lURU1JRDoKICAgICAgICAgICAgZm9yIG15ICRDb25maWdJdGVtSUQgKCBrZXlzICVMaW5rZWRDb25maWdJdGVtSURzICkgewoKICAgICAgICAgICAgICAgICMgZXh0cmFjdCBjb25maWcgaXRlbSBkYXRhCiAgICAgICAgICAgICAgICBteSAkQ29uZmlnSXRlbURhdGEgPSAkTGlua2VkQ29uZmlnSXRlbUlEc3skQ29uZmlnSXRlbUlEfTsKCiAgICAgICAgICAgICAgICBuZXh0IENPTkZJR0lURU1JRCBpZiAkQ29uZmlnSXRlbURhdGEtPntDdXJEZXBsU3RhdGVUeXBlfSBuZSAncHJvZHVjdGl2ZSc7CiAgICAgICAgICAgICAgICBuZXh0IENPTkZJR0lURU1JRCBpZiAkQ29uZmlnSXRlbURhdGEtPntDdXJJbmNpU3RhdGVUeXBlfSBlcSAnb3BlcmF0aW9uYWwnOwoKICAgICAgICAgICAgICAgICMgY2hlY2sgaWYgc2VydmljZSBtdXN0IGJlIHNldCB0byAnd2FybmluZycKICAgICAgICAgICAgICAgIGlmICggJENvbmZpZ0l0ZW1EYXRhLT57Q3VySW5jaVN0YXRlVHlwZX0gZXEgJ3dhcm5pbmcnICkgewogICAgICAgICAgICAgICAgICAgICRTZXJ2aWNlRGF0YXtDdXJJbmNpU3RhdGVUeXBlfSA9ICd3YXJuaW5nJzsKICAgICAgICAgICAgICAgICAgICBuZXh0IENPTkZJR0lURU1JRDsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAjIGNoZWNrIGlmIHNlcnZpY2UgbXVzdCBiZSBzZXQgdG8gJ2luY2lkZW50JwogICAgICAgICAgICAgICAgaWYgKCAkQ29uZmlnSXRlbURhdGEtPntDdXJJbmNpU3RhdGVUeXBlfSBlcSAnaW5jaWRlbnQnICkgewogICAgICAgICAgICAgICAgICAgICRTZXJ2aWNlRGF0YXtDdXJJbmNpU3RhdGVUeXBlfSA9ICdpbmNpZGVudCc7CiAgICAgICAgICAgICAgICAgICAgbGFzdCBDT05GSUdJVEVNSUQ7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICMgdXBkYXRlIHRoZSBjdXJyZW50IGluY2lkZW50IHN0YXRlIHR5cGUgZnJvbSBDSXMgb2YgdGhlIHNlcnZpY2UKICAgICAgICAgICAgJFNlbGYtPlNlcnZpY2VQcmVmZXJlbmNlc1NldCgKICAgICAgICAgICAgICAgIFNlcnZpY2VJRCA9PiAkUGFyYW17U2VydmljZUlEfSwKICAgICAgICAgICAgICAgIEtleSAgICAgICA9PiAnQ3VySW5jaVN0YXRlVHlwZUZyb21DSXMnLAogICAgICAgICAgICAgICAgVmFsdWUgICAgID0+ICRTZXJ2aWNlRGF0YXtDdXJJbmNpU3RhdGVUeXBlfSwKICAgICAgICAgICAgICAgIFVzZXJJRCAgICA9PiAxLAogICAgICAgICAgICApOwogICAgICAgIH0KICAgIH0KCiAgICAjIGludmVzdGlnYXRlIHRoZSBzdGF0ZSBvZiBhbGwgY2hpbGQgc2VydmljZXMKICAgIGlmICggJFNlcnZpY2VEYXRhe0N1ckluY2lTdGF0ZVR5cGV9IGVxICdvcGVyYXRpb25hbCcgKSB7CgogICAgICAgICMgY3JlYXRlIHRoZSB2YWxpZCBzdHJpbmcKICAgICAgICBteSAkVmFsaWRJRFN0cmluZyA9IGpvaW4gcXssIH0sICRTZWxmLT57VmFsaWRPYmplY3R9LT5WYWxpZElEc0dldCgpOwoKICAgICAgICAjIHByZXBhcmUgbmFtZQogICAgICAgIG15ICROYW1lID0gJFNlcnZpY2VEYXRhe05hbWV9OwogICAgICAgICROYW1lID0gJFNlbGYtPntEQk9iamVjdH0tPlF1b3RlKCAkTmFtZSwgJ0xpa2UnICk7CgogICAgICAgICMgZ2V0IGxpc3Qgb2YgYWxsIHZhbGlkIGNoaWxkcwogICAgICAgICRTZWxmLT57REJPYmplY3R9LT5QcmVwYXJlKAogICAgICAgICAgICBTUUwgPT4gIlNFTEVDVCBpZCwgbmFtZSBGUk9NIHNlcnZpY2UgIgogICAgICAgICAgICAgICAgLiAiV0hFUkUgbmFtZSBMSUtFICciIC4gJE5hbWUgLiAiOjolJyAiCiAgICAgICAgICAgICAgICAuICJBTkQgdmFsaWRfaWQgSU4gKCIgLiAkVmFsaWRJRFN0cmluZyAuICIpIiwKICAgICAgICApOwoKICAgICAgICAjIGZpbmQgbGVuZ3RoIG9mIGNoaWxkcyBwcmVmaXgKICAgICAgICBteSAkUHJlZml4TGVuZ3RoID0gbGVuZ3RoICIkU2VydmljZURhdGF7TmFtZX06OiI7CgogICAgICAgICMgZmV0Y2ggdGhlIHJlc3VsdAogICAgICAgIG15IEBDaGlsZElEczsKICAgICAgICBST1c6CiAgICAgICAgd2hpbGUgKCBteSBAUm93ID0gJFNlbGYtPntEQk9iamVjdH0tPkZldGNocm93QXJyYXkoKSApIHsKCiAgICAgICAgICAgICMgZXh0cmFjdCBjaGlsZCBwYXJ0CiAgICAgICAgICAgIG15ICRDaGlsZFBhcnQgPSBzdWJzdHIgJFJvd1sxXSwgJFByZWZpeExlbmd0aDsKCiAgICAgICAgICAgIG5leHQgUk9XIGlmICRDaGlsZFBhcnQgPX4gbXsgOjogfXhtczsKCiAgICAgICAgICAgIHB1c2ggQENoaWxkSURzLCAkUm93WzBdOwogICAgICAgIH0KCiAgICAgICAgU0VSVklDRUlEOgogICAgICAgIGZvciBteSAkU2VydmljZUlEICggQENoaWxkSURzICkgewoKICAgICAgICAgICAgIyBnZXQgZGF0YSBvZiBjaGlsZCBzZXJ2aWNlCiAgICAgICAgICAgIG15ICVDaGlsZFNlcnZpY2VEYXRhID0gJFNlbGYtPlNlcnZpY2VHZXQoCiAgICAgICAgICAgICAgICBTZXJ2aWNlSUQgPT4gJFNlcnZpY2VJRCwKICAgICAgICAgICAgICAgIFVzZXJJRCAgICA9PiAkUGFyYW17VXNlcklEfSwKICAgICAgICAgICAgKTsKCiAgICAgICAgICAgIG5leHQgU0VSVklDRUlEIGlmICRDaGlsZFNlcnZpY2VEYXRhe0N1ckluY2lTdGF0ZVR5cGV9IGVxICdvcGVyYXRpb25hbCc7CgogICAgICAgICAgICAkU2VydmljZURhdGF7Q3VySW5jaVN0YXRlVHlwZX0gPSAnd2FybmluZyc7CiAgICAgICAgICAgIGxhc3QgU0VSVklDRUlEOwogICAgICAgIH0KICAgIH0KCiAgICAjIGRlZmluZSBkZWZhdWx0IGluY2lkZW50IHN0YXRlcwogICAgbXkgJURlZmF1bHRJbmNpU3RhdGVzID0gKAogICAgICAgIG9wZXJhdGlvbmFsID0+ICdPcGVyYXRpb25hbCcsCiAgICAgICAgd2FybmluZyAgICAgPT4gJ1dhcm5pbmcnLAogICAgICAgIGluY2lkZW50ICAgID0+ICdJbmNpZGVudCcsCiAgICApOwoKICAgICMgZ2V0IHRoZSBpbmNpZGVudCBzdGF0ZSBsaXN0IG9mIHRoaXMgdHlwZQogICAgbXkgJEluY2lTdGF0ZUxpc3QgPSAkU2VsZi0+e0dlbmVyYWxDYXRhbG9nT2JqZWN0fS0+SXRlbUxpc3QoCiAgICAgICAgQ2xhc3MgICAgICAgICA9PiAnSVRTTTo6Q29yZTo6SW5jaWRlbnRTdGF0ZScsCiAgICAgICAgUHJlZmVyZW5jZXMgICA9PiB7CiAgICAgICAgICAgIEZ1bmN0aW9uYWxpdHkgPT4gJFNlcnZpY2VEYXRhe0N1ckluY2lTdGF0ZVR5cGV9LAogICAgICAgIH0sCiAgICApOwoKICAgIG15ICVSZXZlcnNlSW5jaVN0YXRlTGlzdCA9IHJldmVyc2UgJXsgJEluY2lTdGF0ZUxpc3QgfTsKICAgICRTZXJ2aWNlRGF0YXtDdXJJbmNpU3RhdGVJRH0KICAgICAgICA9ICRSZXZlcnNlSW5jaVN0YXRlTGlzdHsgJERlZmF1bHRJbmNpU3RhdGVzeyAkU2VydmljZURhdGF7Q3VySW5jaVN0YXRlVHlwZX0gfSB9OwoKICAgICMgZmFsbGJhY2sgaWYgdGhlIGRlZmF1bHQgaW5jaWRlbnQgc3RhdGUgaXMgZGVhY3RpdmF0ZWQKICAgIGlmICggISRTZXJ2aWNlRGF0YXtDdXJJbmNpU3RhdGVJRH0gKSB7CiAgICAgICAgbXkgQFNvcnRlZEluY2lMaXN0ID0gc29ydCBrZXlzICV7ICRJbmNpU3RhdGVMaXN0IH07CiAgICAgICAgJFNlcnZpY2VEYXRhe0N1ckluY2lTdGF0ZUlEfSA9ICRTb3J0ZWRJbmNpTGlzdFswXTsKICAgIH0KCiAgICAjIGdldCBpbmNpZGVudCBzdGF0ZSBmdW5jdGlvbmFsaXR5CiAgICBteSAkSW5jaVN0YXRlID0gJFNlbGYtPntHZW5lcmFsQ2F0YWxvZ09iamVjdH0tPkl0ZW1HZXQoCiAgICAgICAgSXRlbUlEID0+ICRTZXJ2aWNlRGF0YXtDdXJJbmNpU3RhdGVJRH0sCiAgICApOwoKICAgICRTZXJ2aWNlRGF0YXtDdXJJbmNpU3RhdGV9ICAgICA9ICRJbmNpU3RhdGUtPntOYW1lfTsKICAgICRTZXJ2aWNlRGF0YXtDdXJJbmNpU3RhdGVUeXBlfSA9ICRJbmNpU3RhdGUtPntGdW5jdGlvbmFsaXR5fTsKIyAtLS0KCiAgICAjIG1lcmdlIGhhc2gKICAgIGlmICglUHJlZmVyZW5jZXMpIHsKICAgICAgICAlU2VydmljZURhdGEgPSAoICVTZXJ2aWNlRGF0YSwgJVByZWZlcmVuY2VzICk7CiAgICB9CgogICAgcmV0dXJuICVTZXJ2aWNlRGF0YTsKfQoKPWl0ZW0gU2VydmljZUxvb2t1cCgpCgpyZXR1cm4gYSBzZXJ2aWNlIG5hbWUgYW5kIGlkCgogICAgbXkgJFNlcnZpY2VOYW1lID0gJFNlcnZpY2VPYmplY3QtPlNlcnZpY2VMb29rdXAoCiAgICAgICAgU2VydmljZUlEID0+IDEyMywKICAgICk7CgogICAgb3IKCiAgICBteSAkU2VydmljZUlEID0gJFNlcnZpY2VPYmplY3QtPlNlcnZpY2VMb29rdXAoCiAgICAgICAgTmFtZSA9PiAnU2VydmljZTo6U3ViU2VydmljZScsCiAgICApOwoKPWN1dAoKc3ViIFNlcnZpY2VMb29rdXAgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGNoZWNrIG5lZWRlZCBzdHVmZgogICAgaWYgKCAhJFBhcmFte1NlcnZpY2VJRH0gJiYgISRQYXJhbXtOYW1lfSApIHsKICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgTWVzc2FnZSAgPT4gJ05lZWQgU2VydmljZUlEIG9yIE5hbWUhJywKICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoICRQYXJhbXtTZXJ2aWNlSUR9ICkgewoKICAgICAgICAjIGNoZWNrIGNhY2hlCiAgICAgICAgbXkgJENhY2hlS2V5ID0gJ0NhY2hlOjpTZXJ2aWNlTG9va3VwOjpJRDo6JyAuICRQYXJhbXtTZXJ2aWNlSUR9OwogICAgICAgIGlmICggZGVmaW5lZCAkU2VsZi0+eyRDYWNoZUtleX0gKSB7CiAgICAgICAgICAgIHJldHVybiAkU2VsZi0+eyRDYWNoZUtleX07CiAgICAgICAgfQoKICAgICAgICAjIGxvb2t1cAogICAgICAgICRTZWxmLT57REJPYmplY3R9LT5QcmVwYXJlKAogICAgICAgICAgICBTUUwgICA9PiAnU0VMRUNUIG5hbWUgRlJPTSBzZXJ2aWNlIFdIRVJFIGlkID0gPycsCiAgICAgICAgICAgIEJpbmQgID0+IFsgXCRQYXJhbXtTZXJ2aWNlSUR9IF0sCiAgICAgICAgICAgIExpbWl0ID0+IDEsCiAgICAgICAgKTsKICAgICAgICB3aGlsZSAoIG15IEBSb3cgPSAkU2VsZi0+e0RCT2JqZWN0fS0+RmV0Y2hyb3dBcnJheSgpICkgewogICAgICAgICAgICAkU2VsZi0+eyRDYWNoZUtleX0gPSAkUm93WzBdOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRTZWxmLT57JENhY2hlS2V5fTsKICAgIH0KICAgIGVsc2UgewoKICAgICAgICAjIGNoZWNrIGNhY2hlCiAgICAgICAgbXkgJENhY2hlS2V5ID0gJ0NhY2hlOjpTZXJ2aWNlTG9va3VwOjpOYW1lOjonIC4gJFBhcmFte05hbWV9OwogICAgICAgIGlmICggZGVmaW5lZCAkU2VsZi0+eyRDYWNoZUtleX0gKSB7CiAgICAgICAgICAgIHJldHVybiAkU2VsZi0+eyRDYWNoZUtleX07CiAgICAgICAgfQoKICAgICAgICAjIGxvb2t1cAogICAgICAgICRTZWxmLT57REJPYmplY3R9LT5QcmVwYXJlKAogICAgICAgICAgICBTUUwgICA9PiAnU0VMRUNUIGlkIEZST00gc2VydmljZSBXSEVSRSBuYW1lID0gPycsCiAgICAgICAgICAgIEJpbmQgID0+IFsgXCRQYXJhbXtOYW1lfSBdLAogICAgICAgICAgICBMaW1pdCA9PiAxLAogICAgICAgICk7CiAgICAgICAgd2hpbGUgKCBteSBAUm93ID0gJFNlbGYtPntEQk9iamVjdH0tPkZldGNocm93QXJyYXkoKSApIHsKICAgICAgICAgICAgJFNlbGYtPnskQ2FjaGVLZXl9ID0gJFJvd1swXTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAkU2VsZi0+eyRDYWNoZUtleX07CiAgICB9Cn0KCj1pdGVtIFNlcnZpY2VBZGQoKQoKYWRkIGEgc2VydmljZQoKICAgIG15ICRTZXJ2aWNlSUQgPSAkU2VydmljZU9iamVjdC0+U2VydmljZUFkZCgKICAgICAgICBOYW1lICAgICA9PiAnU2VydmljZSBOYW1lJywKICAgICAgICBQYXJlbnRJRCA9PiAxLCAgICAgICAgICAgIyAob3B0aW9uYWwpCiAgICAgICAgVmFsaWRJRCAgPT4gMSwKICAgICAgICBDb21tZW50ICA9PiAnQ29tbWVudCcsICAgICMgKG9wdGlvbmFsKQogICAgICAgIFVzZXJJRCAgID0+IDEsCiMgLS0tCiMgSVRTTQojIC0tLQogICAgICAgIFR5cGVJRCAgICAgICAgPT4gMiwKICAgICAgICBDcml0aWNhbGl0eUlEID0+IDEsCiMgLS0tCiAgICApOwoKPWN1dAoKc3ViIFNlcnZpY2VBZGQgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGNoZWNrIG5lZWRlZCBzdHVmZgojIC0tLQojIElUU00KIyAtLS0KIyAgICBmb3IgbXkgJEFyZ3VtZW50IChxdyhOYW1lIFZhbGlkSUQgVXNlcklEKSkgewogICAgZm9yIG15ICRBcmd1bWVudCAocXcoTmFtZSBWYWxpZElEIFVzZXJJRCBUeXBlSUQgQ3JpdGljYWxpdHlJRCkpIHsKIyAtLS0KICAgICAgICBpZiAoICEkUGFyYW17JEFyZ3VtZW50fSApIHsKICAgICAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICAgICAgTWVzc2FnZSAgPT4gIk5lZWQgJEFyZ3VtZW50ISIsCiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgIyBzZXQgY29tbWVudAogICAgJFBhcmFte0NvbW1lbnR9IHx8PSAnJzsKCiAgICAjIGNsZWFudXAgZ2l2ZW4gcGFyYW1zCiAgICBmb3IgbXkgJEFyZ3VtZW50IChxdyhOYW1lIENvbW1lbnQpKSB7CiAgICAgICAgJFNlbGYtPntDaGVja0l0ZW1PYmplY3R9LT5TdHJpbmdDbGVhbigKICAgICAgICAgICAgU3RyaW5nUmVmICAgICAgICAgPT4gXCRQYXJhbXskQXJndW1lbnR9LAogICAgICAgICAgICBSZW1vdmVBbGxOZXdsaW5lcyA9PiAxLAogICAgICAgICAgICBSZW1vdmVBbGxUYWJzICAgICA9PiAxLAogICAgICAgICk7CiAgICB9CgogICAgIyBjaGVjayBzZXJ2aWNlIG5hbWUKICAgIGlmICggJFBhcmFte05hbWV9ID1+IC86Oi8gKSB7CiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgIE1lc3NhZ2UgID0+ICJDYW4ndCBhZGQgc2VydmljZSEgSW52YWxpZCBTZXJ2aWNlIG5hbWUgJyRQYXJhbXtOYW1lfSchIiwKICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgIH0KCiAgICAjIGNyZWF0ZSBmdWxsIG5hbWUKICAgICRQYXJhbXtGdWxsTmFtZX0gPSAkUGFyYW17TmFtZX07CgogICAgIyBnZXQgcGFyZW50IG5hbWUKICAgIGlmICggJFBhcmFte1BhcmVudElEfSApIHsKICAgICAgICBteSAkUGFyZW50TmFtZSA9ICRTZWxmLT5TZXJ2aWNlTG9va3VwKCBTZXJ2aWNlSUQgPT4gJFBhcmFte1BhcmVudElEfSwgKTsKICAgICAgICBpZiAoJFBhcmVudE5hbWUpIHsKICAgICAgICAgICAgJFBhcmFte0Z1bGxOYW1lfSA9ICRQYXJlbnROYW1lIC4gJzo6JyAuICRQYXJhbXtOYW1lfTsKICAgICAgICB9CiAgICB9CgogICAgIyBmaW5kIGV4aXN0aW5nIHNlcnZpY2UKICAgICRTZWxmLT57REJPYmplY3R9LT5QcmVwYXJlKAogICAgICAgIFNRTCAgID0+ICdTRUxFQ1QgaWQgRlJPTSBzZXJ2aWNlIFdIRVJFIG5hbWUgPSA/JywKICAgICAgICBCaW5kICA9PiBbIFwkUGFyYW17RnVsbE5hbWV9IF0sCiAgICAgICAgTGltaXQgPT4gMSwKICAgICk7CiAgICBteSAkRXhpc3RzOwogICAgd2hpbGUgKCAkU2VsZi0+e0RCT2JqZWN0fS0+RmV0Y2hyb3dBcnJheSgpICkgewogICAgICAgICRFeGlzdHMgPSAxOwogICAgfQoKICAgICMgYWRkIHNlcnZpY2UgdG8gZGF0YWJhc2UKICAgIGlmICgkRXhpc3RzKSB7CiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgIE1lc3NhZ2UgID0+ICdDYW5cJ3QgYWRkIHNlcnZpY2UhIFNlcnZpY2Ugd2l0aCBzYW1lIG5hbWUgYW5kIHBhcmVudCBhbHJlYWR5IGV4aXN0cy4nCiAgICAgICAgKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgcmV0dXJuIGlmICEkU2VsZi0+e0RCT2JqZWN0fS0+RG8oCiMgLS0tCiMgSVRTTQojIC0tLQojICAgICAgICBTUUwgPT4gJ0lOU0VSVCBJTlRPIHNlcnZpY2UgJwojICAgICAgICAgICAgLiAnKG5hbWUsIHZhbGlkX2lkLCBjb21tZW50cywgY3JlYXRlX3RpbWUsIGNyZWF0ZV9ieSwgY2hhbmdlX3RpbWUsIGNoYW5nZV9ieSkgJwojICAgICAgICAgICAgLiAnVkFMVUVTICg/LCA/LCA/LCBjdXJyZW50X3RpbWVzdGFtcCwgPywgY3VycmVudF90aW1lc3RhbXAsID8pJywKIyAgICAgICAgQmluZCA9PiBbCiMgICAgICAgICAgICBcJFBhcmFte0Z1bGxOYW1lfSwgXCRQYXJhbXtWYWxpZElEfSwgXCRQYXJhbXtDb21tZW50fSwKIyAgICAgICAgICAgIFwkUGFyYW17VXNlcklEfSwgXCRQYXJhbXtVc2VySUR9LAojICAgICAgICBdLAogICAgICAgIFNRTCA9PiAnSU5TRVJUIElOVE8gc2VydmljZSAnCiAgICAgICAgICAgIC4gJyhuYW1lLCB2YWxpZF9pZCwgY29tbWVudHMsIGNyZWF0ZV90aW1lLCBjcmVhdGVfYnksIGNoYW5nZV90aW1lLCBjaGFuZ2VfYnksICcKICAgICAgICAgICAgLiAndHlwZV9pZCwgY3JpdGljYWxpdHlfaWQpICcKICAgICAgICAgICAgLiAnVkFMVUVTICg/LCA/LCA/LCBjdXJyZW50X3RpbWVzdGFtcCwgPywgY3VycmVudF90aW1lc3RhbXAsID8sID8sID8pJywKICAgICAgICBCaW5kID0+IFsKICAgICAgICAgICAgXCRQYXJhbXtGdWxsTmFtZX0sIFwkUGFyYW17VmFsaWRJRH0sIFwkUGFyYW17Q29tbWVudH0sCiAgICAgICAgICAgIFwkUGFyYW17VXNlcklEfSwgXCRQYXJhbXtVc2VySUR9LCBcJFBhcmFte1R5cGVJRH0sIFwkUGFyYW17Q3JpdGljYWxpdHlJRH0sCiAgICAgICAgXSwKIyAtLS0KICAgICk7CgogICAgIyBnZXQgc2VydmljZSBpZAogICAgJFNlbGYtPntEQk9iamVjdH0tPlByZXBhcmUoCiAgICAgICAgU1FMICAgPT4gJ1NFTEVDVCBpZCBGUk9NIHNlcnZpY2UgV0hFUkUgbmFtZSA9ID8nLAogICAgICAgIEJpbmQgID0+IFsgXCRQYXJhbXtGdWxsTmFtZX0gXSwKICAgICAgICBMaW1pdCA9PiAxLAogICAgKTsKICAgIG15ICRTZXJ2aWNlSUQ7CiAgICB3aGlsZSAoIG15IEBSb3cgPSAkU2VsZi0+e0RCT2JqZWN0fS0+RmV0Y2hyb3dBcnJheSgpICkgewogICAgICAgICRTZXJ2aWNlSUQgPSAkUm93WzBdOwogICAgfQoKICAgICMgcmVzZXQgY2FjaGUKICAgIGRlbGV0ZSAkU2VsZi0+eyAnQ2FjaGU6OlNlcnZpY2VMb29rdXA6OklEOjonIC4gJFNlcnZpY2VJRCB9OwogICAgZGVsZXRlICRTZWxmLT57ICdDYWNoZTo6U2VydmljZUxvb2t1cDo6TmFtZTo6JyAuICRQYXJhbXtGdWxsTmFtZX0gfTsKCiAgICByZXR1cm4gJFNlcnZpY2VJRDsKfQoKPWl0ZW0gU2VydmljZVVwZGF0ZSgpCgp1cGRhdGUgYSBleGlzdGluZyBzZXJ2aWNlCgogICAgbXkgJFRydWUgPSAkU2VydmljZU9iamVjdC0+U2VydmljZVVwZGF0ZSgKICAgICAgICBTZXJ2aWNlSUQgPT4gMTIzLAogICAgICAgIFBhcmVudElEICA9PiAxLCAgICAgICAgICAgIyAob3B0aW9uYWwpCiAgICAgICAgTmFtZSAgICAgID0+ICdTZXJ2aWNlIE5hbWUnLAogICAgICAgIFZhbGlkSUQgICA9PiAxLAogICAgICAgIENvbW1lbnQgICA9PiAnQ29tbWVudCcsICAgICMgKG9wdGlvbmFsKQogICAgICAgIFVzZXJJRCAgICA9PiAxLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICBUeXBlSUQgICAgICAgID0+IDIsCiAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAojIC0tLQogICAgKTsKCj1jdXQKCnN1YiBTZXJ2aWNlVXBkYXRlIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKIyAtLS0KIyBJVFNNCiMgLS0tCiMgICAgZm9yIG15ICRBcmd1bWVudCAocXcoU2VydmljZUlEIE5hbWUgVmFsaWRJRCBVc2VySUQpKSB7CiAgICBmb3IgbXkgJEFyZ3VtZW50IChxdyhTZXJ2aWNlSUQgTmFtZSBWYWxpZElEIFVzZXJJRCBUeXBlSUQgQ3JpdGljYWxpdHlJRCkpIHsKIyAtLS0KICAgICAgICBpZiAoICEkUGFyYW17JEFyZ3VtZW50fSApIHsKICAgICAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICAgICAgTWVzc2FnZSAgPT4gIk5lZWQgJEFyZ3VtZW50ISIsCiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgIyBzZXQgZGVmYXVsdCBjb21tZW50CiAgICAkUGFyYW17Q29tbWVudH0gfHw9ICcnOwoKICAgICMgY2xlYW51cCBnaXZlbiBwYXJhbXMKICAgIGZvciBteSAkQXJndW1lbnQgKHF3KE5hbWUgQ29tbWVudCkpIHsKICAgICAgICAkU2VsZi0+e0NoZWNrSXRlbU9iamVjdH0tPlN0cmluZ0NsZWFuKAogICAgICAgICAgICBTdHJpbmdSZWYgICAgICAgICA9PiBcJFBhcmFteyRBcmd1bWVudH0sCiAgICAgICAgICAgIFJlbW92ZUFsbE5ld2xpbmVzID0+IDEsCiAgICAgICAgICAgIFJlbW92ZUFsbFRhYnMgICAgID0+IDEsCiAgICAgICAgKTsKICAgIH0KCiAgICAjIGNoZWNrIHNlcnZpY2UgbmFtZQogICAgaWYgKCAkUGFyYW17TmFtZX0gPX4gLzo6LyApIHsKICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgTWVzc2FnZSAgPT4gIkNhbid0IHVwZGF0ZSBzZXJ2aWNlISBJbnZhbGlkIFNlcnZpY2UgbmFtZSAnJFBhcmFte05hbWV9JyEiLAogICAgICAgICk7CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgICMgZ2V0IG9sZCBuYW1lIG9mIHNlcnZpY2UKICAgIG15ICRPbGRTZXJ2aWNlTmFtZSA9ICRTZWxmLT5TZXJ2aWNlTG9va3VwKCBTZXJ2aWNlSUQgPT4gJFBhcmFte1NlcnZpY2VJRH0sICk7CgogICAgIyByZXNldCBjYWNoZQogICAgZGVsZXRlICRTZWxmLT57ICdDYWNoZTo6U2VydmljZUxvb2t1cDo6SUQ6OicgLiAkUGFyYW17U2VydmljZUlEfSB9OwogICAgZGVsZXRlICRTZWxmLT57ICdDYWNoZTo6U2VydmljZUxvb2t1cDo6TmFtZTo6JyAuICRPbGRTZXJ2aWNlTmFtZSB9OwoKICAgICMgY3JlYXRlIGZ1bGwgbmFtZQogICAgJFBhcmFte0Z1bGxOYW1lfSA9ICRQYXJhbXtOYW1lfTsKCiAgICAjIGdldCBwYXJlbnQgbmFtZQogICAgaWYgKCAkUGFyYW17UGFyZW50SUR9ICkgewoKICAgICAgICAjIGxvb2t1cCBzZXJ2aWNlCiAgICAgICAgbXkgJFBhcmVudE5hbWUgPSAkU2VsZi0+U2VydmljZUxvb2t1cCgKICAgICAgICAgICAgU2VydmljZUlEID0+ICRQYXJhbXtQYXJlbnRJRH0sCiAgICAgICAgKTsKCiAgICAgICAgaWYgKCRQYXJlbnROYW1lKSB7CiAgICAgICAgICAgICRQYXJhbXtGdWxsTmFtZX0gPSAkUGFyZW50TmFtZSAuICc6OicgLiAkUGFyYW17TmFtZX07CiAgICAgICAgfQoKICAgICAgICAjIGNoZWNrLCBpZiBzZWxlY3RlZCBwYXJlbnQgd2FzIGEgY2hpbGQgb2YgdGhpcyBzZXJ2aWNlCiAgICAgICAgaWYgKCAkUGFyYW17RnVsbE5hbWV9ID1+IC9eKFxRJE9sZFNlcnZpY2VOYW1lXEUpOjovICkgewogICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgICAgICBNZXNzYWdlICA9PiAnQ2FuXCd0IHVwZGF0ZSBzZXJ2aWNlISBJbnZhbGlkIHBhcmVudCB3YXMgc2VsZWN0ZWQuJwogICAgICAgICAgICApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgfQoKICAgICMgZmluZCBleGlzdHMgc2VydmljZQogICAgJFNlbGYtPntEQk9iamVjdH0tPlByZXBhcmUoCiAgICAgICAgU1FMICAgPT4gJ1NFTEVDVCBpZCBGUk9NIHNlcnZpY2UgV0hFUkUgbmFtZSA9ID8nLAogICAgICAgIEJpbmQgID0+IFsgXCRQYXJhbXtGdWxsTmFtZX0gXSwKICAgICAgICBMaW1pdCA9PiAxLAogICAgKTsKICAgIG15ICRFeGlzdHM7CiAgICB3aGlsZSAoIG15IEBSb3cgPSAkU2VsZi0+e0RCT2JqZWN0fS0+RmV0Y2hyb3dBcnJheSgpICkgewogICAgICAgIGlmICggJFBhcmFte1NlcnZpY2VJRH0gbmUgJFJvd1swXSApIHsKICAgICAgICAgICAgJEV4aXN0cyA9IDE7CiAgICAgICAgfQogICAgfQoKICAgICMgdXBkYXRlIHNlcnZpY2UKICAgIGlmICgkRXhpc3RzKSB7CiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgIE1lc3NhZ2UgID0+ICdDYW5cJ3QgdXBkYXRlIHNlcnZpY2UhIFNlcnZpY2Ugd2l0aCBzYW1lIG5hbWUgYW5kIHBhcmVudCBhbHJlYWR5IGV4aXN0cy4nCiAgICAgICAgKTsKICAgICAgICByZXR1cm47CgogICAgfQoKICAgICMgdXBkYXRlIHNlcnZpY2UKICAgIHJldHVybiBpZiAhJFNlbGYtPntEQk9iamVjdH0tPkRvKAojIC0tLQojIElUU00KIyAtLS0KIyAgICAgICAgU1FMID0+ICdVUERBVEUgc2VydmljZSBTRVQgbmFtZSA9ID8sIHZhbGlkX2lkID0gPywgY29tbWVudHMgPSA/LCAnCiMgICAgICAgICAgICAuICcgY2hhbmdlX3RpbWUgPSBjdXJyZW50X3RpbWVzdGFtcCwgY2hhbmdlX2J5ID0gPyBXSEVSRSBpZCA9ID8nLAojICAgICAgICBCaW5kID0+IFsKIyAgICAgICAgICAgIFwkUGFyYW17RnVsbE5hbWV9LCBcJFBhcmFte1ZhbGlkSUR9LCBcJFBhcmFte0NvbW1lbnR9LAojICAgICAgICAgICAgXCRQYXJhbXtVc2VySUR9LCBcJFBhcmFte1NlcnZpY2VJRH0sCiMgICAgICAgIF0sCiAgICAgICAgU1FMID0+ICdVUERBVEUgc2VydmljZSBTRVQgbmFtZSA9ID8sIHZhbGlkX2lkID0gPywgY29tbWVudHMgPSA/LCAnCiAgICAgICAgICAgIC4gJyBjaGFuZ2VfdGltZSA9IGN1cnJlbnRfdGltZXN0YW1wLCBjaGFuZ2VfYnkgPSA/LCB0eXBlX2lkID0gPywgY3JpdGljYWxpdHlfaWQgPSA/JwogICAgICAgICAgICAuICcgV0hFUkUgaWQgPSA/JywKICAgICAgICBCaW5kID0+IFsKICAgICAgICAgICAgXCRQYXJhbXtGdWxsTmFtZX0sIFwkUGFyYW17VmFsaWRJRH0sIFwkUGFyYW17Q29tbWVudH0sCiAgICAgICAgICAgIFwkUGFyYW17VXNlcklEfSwgXCRQYXJhbXtUeXBlSUR9LCBcJFBhcmFte0NyaXRpY2FsaXR5SUR9LCBcJFBhcmFte1NlcnZpY2VJRH0sCiAgICAgICAgXSwKIyAtLS0KICAgICk7CgogICAgIyBmaW5kIGFsbCBjaGlsZHMKICAgICRTZWxmLT57REJPYmplY3R9LT5QcmVwYXJlKAogICAgICAgIFNRTCA9PiAiU0VMRUNUIGlkLCBuYW1lIEZST00gc2VydmljZSBXSEVSRSBuYW1lIExJS0UgJyIKICAgICAgICAgICAgLiAkU2VsZi0+e0RCT2JqZWN0fS0+UXVvdGUoICRPbGRTZXJ2aWNlTmFtZSwgJ0xpa2UnICkKICAgICAgICAgICAgLiAiOjolJyIsCiAgICApOwogICAgbXkgQENoaWxkczsKICAgIHdoaWxlICggbXkgQFJvdyA9ICRTZWxmLT57REJPYmplY3R9LT5GZXRjaHJvd0FycmF5KCkgKSB7CiAgICAgICAgbXkgJUNoaWxkOwogICAgICAgICRDaGlsZHtTZXJ2aWNlSUR9ID0gJFJvd1swXTsKICAgICAgICAkQ2hpbGR7TmFtZX0gICAgICA9ICRSb3dbMV07CiAgICAgICAgcHVzaCBAQ2hpbGRzLCBcJUNoaWxkOwogICAgfQoKICAgICMgdXBkYXRlIGNoaWxkcwogICAgZm9yIG15ICRDaGlsZCAoQENoaWxkcykgewogICAgICAgICRDaGlsZC0+e05hbWV9ID1+IHMvXihcUSRPbGRTZXJ2aWNlTmFtZVxFKTo6LyRQYXJhbXtGdWxsTmFtZX06Oi87CiAgICAgICAgJFNlbGYtPntEQk9iamVjdH0tPkRvKAogICAgICAgICAgICBTUUwgPT4gJ1VQREFURSBzZXJ2aWNlIFNFVCBuYW1lID0gPyBXSEVSRSBpZCA9ID8nLAogICAgICAgICAgICBCaW5kID0+IFsgXCRDaGlsZC0+e05hbWV9LCBcJENoaWxkLT57U2VydmljZUlEfSBdLAogICAgICAgICk7CiAgICB9CiAgICByZXR1cm4gMTsKfQoKPWl0ZW0gU2VydmljZVNlYXJjaCgpCgpyZXR1cm4gc2VydmljZSBpZHMgYXMgYW4gYXJyYXkKCiAgICBteSBAU2VydmljZUxpc3QgPSAkU2VydmljZU9iamVjdC0+U2VydmljZVNlYXJjaCgKICAgICAgICBOYW1lICAgPT4gJ1NlcnZpY2UgTmFtZScsICMgKG9wdGlvbmFsKQogICAgICAgIExpbWl0ICA9PiAxMjIsICAgICAgICAgICAgIyAob3B0aW9uYWwpIGRlZmF1bHQgMTAwMAogICAgICAgIFVzZXJJRCA9PiAxLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICBUeXBlSURzICAgICAgICA9PiAyLAogICAgICAgIENyaXRpY2FsaXR5SURzID0+IDEsCiMgLS0tCiAgICApOwoKPWN1dAoKc3ViIFNlcnZpY2VTZWFyY2ggewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGNoZWNrIG5lZWRlZCBzdHVmZgogICAgaWYgKCAhJFBhcmFte1VzZXJJRH0gKSB7CiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgIE1lc3NhZ2UgID0+ICdOZWVkIFVzZXJJRCEnLAogICAgICAgICk7CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgICMgc2V0IGRlZmF1bHQgbGltaXQKICAgICRQYXJhbXtMaW1pdH0gfHw9IDEwMDA7CgogICAgIyBjcmVhdGUgc3FsIHF1ZXJ5CiAgICBteSAkU1FMCiAgICAgICAgPSAiU0VMRUNUIGlkIEZST00gc2VydmljZSBXSEVSRSB2YWxpZF9pZCBJTiAoICR7XChqb2luICcsICcsICRTZWxmLT57VmFsaWRPYmplY3R9LT5WYWxpZElEc0dldCgpKX0gKSI7CgogICAgaWYgKCAkUGFyYW17TmFtZX0gKSB7CgogICAgICAgICMgcXVvdGUKICAgICAgICAkUGFyYW17TmFtZX0gPSAkU2VsZi0+e0RCT2JqZWN0fS0+UXVvdGUoICRQYXJhbXtOYW1lfSwgJ0xpa2UnICk7CgogICAgICAgICMgcmVwbGFjZSAqIHdpdGggJSBhbmQgY2xlYW4gdGhlIHN0cmluZwogICAgICAgICRQYXJhbXtOYW1lfSA9fiBzeyBcKisgfXslfXhtc2c7CiAgICAgICAgJFBhcmFte05hbWV9ID1+IHN7ICUrIH17JX14bXNnOwoKICAgICAgICAkU1FMIC49ICIgQU5EIG5hbWUgTElLRSAnJFBhcmFte05hbWV9JyAiOwogICAgfQojIC0tLQojIElUU00KIyAtLS0KICAgICMgYWRkIHR5cGUgaWRzCiAgICBpZiAoICRQYXJhbXtUeXBlSURzfSAmJiByZWYgJFBhcmFte1R5cGVJRHN9IGVxICdBUlJBWScgJiYgQHsgJFBhcmFte1R5cGVJRHN9IH0gKSB7CiAgICAgICAgJFNRTCAuPSAiQU5EIHR5cGVfaWQgSU4gKCIgLiBqb2luKCcsICcsIEB7ICRQYXJhbXtUeXBlSURzfSB9KSAuICIpICI7CiAgICB9CiAgICAjIGFkZCBjcml0aWNhbGl0eSBpZHMKICAgIGlmICgkUGFyYW17Q3JpdGljYWxpdHlJRHN9ICYmIHJlZiAkUGFyYW17Q3JpdGljYWxpdHlJRHN9IGVxICdBUlJBWScgJiYgQHsgJFBhcmFte0NyaXRpY2FsaXR5SURzfSB9ICkgewogICAgICAgICRTUUwgLj0gIkFORCBjcml0aWNhbGl0eV9pZCBJTiAoIiAuIGpvaW4oJywgJywgQHsgJFBhcmFte0NyaXRpY2FsaXR5SURzfSB9KSAuICIpICI7CiAgICB9CiMgLS0tCgogICAgJFNRTCAuPSAnIE9SREVSIEJZIG5hbWUnOwoKICAgICMgc2VhcmNoIHNlcnZpY2UgaW4gZGIKICAgICRTZWxmLT57REJPYmplY3R9LT5QcmVwYXJlKCBTUUwgPT4gJFNRTCApOwoKICAgIG15IEBTZXJ2aWNlTGlzdDsKICAgIHdoaWxlICggbXkgQFJvdyA9ICRTZWxmLT57REJPYmplY3R9LT5GZXRjaHJvd0FycmF5KCkgKSB7CiAgICAgICAgcHVzaCBAU2VydmljZUxpc3QsICRSb3dbMF07CiAgICB9CgogICAgcmV0dXJuIEBTZXJ2aWNlTGlzdDsKfQoKPWl0ZW0gQ3VzdG9tZXJVc2VyU2VydmljZU1lbWJlckxpc3QoKQoKcmV0dXJucyBhIGxpc3Qgb2YgY3VzdG9tZXJ1c2VyL3NlcnZpY2UgbWVtYmVycwoKICAgIFNlcnZpY2VJRDogc2VydmljZSBpZAogICAgQ3VzdG9tZXJVc2VyTG9naW46IGN1c3RvbWVyIHVzZXIgbG9naW4KICAgIERlZmF1bHRTZXJ2aWNlczogYWN0aXZhdGUgb3IgZGVhY3RpdmF0ZSBkZWZhdWx0IHNlcnZpY2VzCgogICAgUmVzdWx0OiBIQVNIIC0+IHJldHVybnMgYSBoYXNoIG9mIGtleSA9PiBzZXJ2aWNlIGlkLCB2YWx1ZSA9PiBzZXJ2aWNlIG5hbWUKICAgICAgICAgICAgTmFtZSAtPiByZXR1cm5zIGFuIGFycmF5IG9mIHVzZXIgbmFtZXMKICAgICAgICAgICAgSUQgICAtPiByZXR1cm5zIGFuIGFycmF5IG9mIHVzZXIgaWRzCgogICAgRXhhbXBsZSAoZ2V0IHNlcnZpY2VzIG9mIGN1c3RvbWVyIHVzZXIpOgoKICAgICRTZXJ2aWNlT2JqZWN0LT5DdXN0b21lclVzZXJTZXJ2aWNlTWVtYmVyTGlzdCgKICAgICAgICBDdXN0b21lclVzZXJMb2dpbiA9PiAnVGVzdCcsCiAgICAgICAgUmVzdWx0ICAgICAgICAgICAgPT4gJ0hBU0gnLAogICAgICAgIERlZmF1bHRTZXJ2aWNlcyAgID0+IDAsCiAgICApOwoKICAgIEV4YW1wbGUgKGdldCBjdXN0b21lciB1c2VyIG9mIHNlcnZpY2UpOgoKICAgICRTZXJ2aWNlT2JqZWN0LT5DdXN0b21lclVzZXJTZXJ2aWNlTWVtYmVyTGlzdCgKICAgICAgICBTZXJ2aWNlSUQgPT4gJElELAogICAgICAgIFJlc3VsdCAgICA9PiAnSEFTSCcsCiAgICApOwoKPWN1dAoKc3ViIEN1c3RvbWVyVXNlclNlcnZpY2VNZW1iZXJMaXN0IHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGlmICggISRQYXJhbXtSZXN1bHR9ICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAnTmVlZCBSZXN1bHQhJywKICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgIH0KICAgIGlmICggISRQYXJhbXtTZXJ2aWNlSUR9ICYmICEkUGFyYW17Q3VzdG9tZXJVc2VyTG9naW59ICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAnTmVlZCBTZXJ2aWNlSUQgb3IgQ3VzdG9tZXJVc2VyTG9naW4hJywKICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgIH0KCiAgICAjIHNldCBkZWZhdWx0CiAgICBpZiAoICFkZWZpbmVkICRQYXJhbXtEZWZhdWx0U2VydmljZXN9ICkgewogICAgICAgICRQYXJhbXtEZWZhdWx0U2VydmljZXN9ID0gMTsKICAgIH0KCiAgICAjIGRiIHF1b3RlCiAgICBmb3IgKCBrZXlzICVQYXJhbSApIHsKICAgICAgICAkUGFyYW17JF99ID0gJFNlbGYtPntEQk9iamVjdH0tPlF1b3RlKCAkUGFyYW17JF99ICk7CiAgICB9CiAgICBmb3IgKHF3KFNlcnZpY2VJRCkpIHsKICAgICAgICAkUGFyYW17JF99ID0gJFNlbGYtPntEQk9iamVjdH0tPlF1b3RlKCAkUGFyYW17JF99LCAnSW50ZWdlcicgKTsKICAgIH0KCiAgICAjIGNyZWF0ZSBjYWNoZSBrZXkKICAgIG15ICRDYWNoZUtleSA9ICdDdXN0b21lclVzZXJTZXJ2aWNlTWVtYmVyTGlzdDo6JyAuICRQYXJhbXtSZXN1bHR9IC4gJzo6JzsKICAgIGlmICggJFBhcmFte1NlcnZpY2VJRH0gKSB7CiAgICAgICAgJENhY2hlS2V5IC49ICdTZXJ2aWNlSUQ6OicgLiAkUGFyYW17U2VydmljZUlEfTsKICAgIH0KICAgIGVsc2lmICggJFBhcmFte0N1c3RvbWVyVXNlckxvZ2lufSApIHsKICAgICAgICAkQ2FjaGVLZXkgLj0gJ0N1c3RvbWVyVXNlckxvZ2luOjonIC4gJFBhcmFte0N1c3RvbWVyVXNlckxvZ2lufTsKICAgIH0KCiAgICAjIGNoZWNrIGNhY2hlCiAgICBpZiAoICRQYXJhbXtTZXJ2aWNlSUR9IHx8ICRQYXJhbXtDdXN0b21lclVzZXJMb2dpbn0gKSB7CiAgICAgICAgaWYgKCAkU2VsZi0+e0ZvcmNlQ2FjaGV9ICkgewogICAgICAgICAgICAkUGFyYW17Q2FjaGVkfSA9ICRTZWxmLT57Rm9yY2VDYWNoZX07CiAgICAgICAgfQogICAgICAgIGlmICggJFBhcmFte0NhY2hlZH0gJiYgJFNlbGYtPnskQ2FjaGVLZXl9ICkgewogICAgICAgICAgICBpZiAoIHJlZiggJFNlbGYtPnskQ2FjaGVLZXl9ICkgZXEgJ0FSUkFZJyApIHsKICAgICAgICAgICAgICAgIHJldHVybiBAeyAkU2VsZi0+eyRDYWNoZUtleX0gfTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNpZiAoIHJlZiggJFNlbGYtPnskQ2FjaGVLZXl9ICkgZXEgJ0hBU0gnICkgewogICAgICAgICAgICAgICAgcmV0dXJuICV7ICRTZWxmLT57JENhY2hlS2V5fSB9OwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgICMgc3FsCiAgICBteSAlRGF0YTsKICAgIG15IEBOYW1lOwogICAgbXkgQElEOwogICAgbXkgJFNRTCA9ICdTRUxFQ1Qgc2N1LnNlcnZpY2VfaWQsIHNjdS5jdXN0b21lcl91c2VyX2xvZ2luLCBzLm5hbWUgJwogICAgICAgIC4gJyBGUk9NICcKICAgICAgICAuICcgc2VydmljZV9jdXN0b21lcl91c2VyIHNjdSwgc2VydmljZSBzJwogICAgICAgIC4gJyBXSEVSRSAnCiAgICAgICAgLiAiIHMudmFsaWRfaWQgSU4gKCAke1woam9pbiAnLCAnLCAkU2VsZi0+e1ZhbGlkT2JqZWN0fS0+VmFsaWRJRHNHZXQoKSl9ICkgQU5EICIKICAgICAgICAuICcgcy5pZCA9IHNjdS5zZXJ2aWNlX2lkIEFORCAnOwoKICAgIGlmICggJFBhcmFte1NlcnZpY2VJRH0gKSB7CiAgICAgICAgJFNRTCAuPSAiIHNjdS5zZXJ2aWNlX2lkID0gJFBhcmFte1NlcnZpY2VJRH0iOwogICAgfQogICAgZWxzaWYgKCAkUGFyYW17Q3VzdG9tZXJVc2VyTG9naW59ICkgewogICAgICAgICRTUUwgLj0gIiBzY3UuY3VzdG9tZXJfdXNlcl9sb2dpbiA9ICckUGFyYW17Q3VzdG9tZXJVc2VyTG9naW59JyI7CiAgICB9CgogICAgJFNlbGYtPntEQk9iamVjdH0tPlByZXBhcmUoIFNRTCA9PiAkU1FMICk7CgogICAgd2hpbGUgKCBteSBAUm93ID0gJFNlbGYtPntEQk9iamVjdH0tPkZldGNocm93QXJyYXkoKSApIHsKCiAgICAgICAgbXkgJEtleSAgID0gJyc7CiAgICAgICAgbXkgJFZhbHVlID0gJyc7CiAgICAgICAgaWYgKCAkUGFyYW17U2VydmljZUlEfSApIHsKICAgICAgICAgICAgJEtleSAgID0gJFJvd1sxXTsKICAgICAgICAgICAgJFZhbHVlID0gJFJvd1swXTsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICRLZXkgICA9ICRSb3dbMF07CiAgICAgICAgICAgICRWYWx1ZSA9ICRSb3dbMl07CiAgICAgICAgfQoKICAgICAgICAjIHJlbWVtYmVyIHBlcm1pc3Npb25zCiAgICAgICAgaWYgKCAhZGVmaW5lZCAkRGF0YXskS2V5fSApIHsKICAgICAgICAgICAgJERhdGF7JEtleX0gPSAkVmFsdWU7CiAgICAgICAgICAgIHB1c2ggQE5hbWUsICRWYWx1ZTsKICAgICAgICAgICAgcHVzaCBASUQsICAgJEtleTsKICAgICAgICB9CiAgICB9CiAgICBpZiAoICRQYXJhbXtDdXN0b21lclVzZXJMb2dpbn0gJiYgJFBhcmFte0RlZmF1bHRTZXJ2aWNlc30gJiYgIWtleXMoJURhdGEpICkgewogICAgICAgICVEYXRhID0gJFNlbGYtPkN1c3RvbWVyVXNlclNlcnZpY2VNZW1iZXJMaXN0KAogICAgICAgICAgICBDdXN0b21lclVzZXJMb2dpbiA9PiAnPERFRkFVTFQ+JywKICAgICAgICAgICAgUmVzdWx0ICAgICAgICAgICAgPT4gJ0hBU0gnLAogICAgICAgICAgICBEZWZhdWx0U2VydmljZXMgICA9PiAwLAogICAgICAgICk7CiAgICAgICAgZm9yIG15ICRLZXkgKCBrZXlzICVEYXRhICkgewogICAgICAgICAgICBwdXNoIEBOYW1lLCAkRGF0YXskS2V5fTsKICAgICAgICAgICAgcHVzaCBASUQsICAgJEtleTsKICAgICAgICB9CiAgICB9CgogICAgIyByZXR1cm4gcmVzdWx0CiAgICBpZiAoICRQYXJhbXtSZXN1bHR9ICYmICRQYXJhbXtSZXN1bHR9IGVxICdJRCcgKSB7CiAgICAgICAgaWYgKCAkUGFyYW17U2VydmljZUlEfSB8fCAkUGFyYW17Q3VzdG9tZXJVc2VyTG9naW59ICkgewoKICAgICAgICAgICAgIyBjYWNoZSByZXN1bHQKICAgICAgICAgICAgJFNlbGYtPnskQ2FjaGVLZXl9ID0gXEBJRDsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIEBJRDsKICAgIH0KICAgIGlmICggJFBhcmFte1Jlc3VsdH0gJiYgJFBhcmFte1Jlc3VsdH0gZXEgJ05hbWUnICkgewogICAgICAgIGlmICggJFBhcmFte1NlcnZpY2VJRH0gfHwgJFBhcmFte0N1c3RvbWVyVXNlckxvZ2lufSApIHsKCiAgICAgICAgICAgICMgY2FjaGUgcmVzdWx0CiAgICAgICAgICAgICRTZWxmLT57JENhY2hlS2V5fSA9IFxATmFtZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIEBOYW1lOwogICAgfQogICAgZWxzZSB7CiAgICAgICAgaWYgKCAkUGFyYW17U2VydmljZUlEfSB8fCAkUGFyYW17Q3VzdG9tZXJVc2VyTG9naW59ICkgewoKICAgICAgICAgICAgIyBjYWNoZSByZXN1bHQKICAgICAgICAgICAgJFNlbGYtPnskQ2FjaGVLZXl9ID0gXCVEYXRhOwogICAgICAgIH0KICAgICAgICByZXR1cm4gJURhdGE7CiAgICB9Cn0KCj1pdGVtIEN1c3RvbWVyVXNlclNlcnZpY2VNZW1iZXJBZGQoKQoKdG8gYWRkIGEgbWVtYmVyIHRvIGEgc2VydmljZQoKICAgICRTZXJ2aWNlT2JqZWN0LT5DdXN0b21lclVzZXJTZXJ2aWNlTWVtYmVyQWRkKAogICAgICAgIEN1c3RvbWVyVXNlckxvZ2luID0+ICdUZXN0MScsCiAgICAgICAgU2VydmljZUlEICAgICAgICAgPT4gNiwKICAgICAgICBBY3RpdmUgICAgICAgICAgICA9PiAxLAogICAgICAgIFVzZXJJRCAgICAgICAgICAgID0+IDEyMywKICAgICk7Cgo9Y3V0CgpzdWIgQ3VzdG9tZXJVc2VyU2VydmljZU1lbWJlckFkZCB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVlZGVkIHN0dWZmCiAgICBmb3IgbXkgJEFyZ3VtZW50IChxdyhDdXN0b21lclVzZXJMb2dpbiBTZXJ2aWNlSUQgVXNlcklEKSkgewogICAgICAgIGlmICggISRQYXJhbXskQXJndW1lbnR9ICkgewogICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgICAgICBNZXNzYWdlICA9PiAiTmVlZCAkQXJndW1lbnQhIiwKICAgICAgICAgICAgKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgIH0KCiAgICAjIGRlbGV0ZSBleGlzdGluZyByZWxhdGlvbgogICAgcmV0dXJuIGlmICEkU2VsZi0+e0RCT2JqZWN0fS0+RG8oCiAgICAgICAgU1FMID0+ICdERUxFVEUgRlJPTSBzZXJ2aWNlX2N1c3RvbWVyX3VzZXIgV0hFUkUgY3VzdG9tZXJfdXNlcl9sb2dpbiA9ID8gQU5EIHNlcnZpY2VfaWQgPSA/JywKICAgICAgICBCaW5kID0+IFsgXCRQYXJhbXtDdXN0b21lclVzZXJMb2dpbn0sIFwkUGFyYW17U2VydmljZUlEfSBdLAogICAgKTsKCiAgICAjIHJldHVybiBpZiByZWxhdGlvbiBpcyBub3QgYWN0aXZlCiAgICByZXR1cm4gaWYgISRQYXJhbXtBY3RpdmV9OwoKICAgICMgaW5zZXJ0IG5ldyByZWxhdGlvbgogICAgcmV0dXJuICRTZWxmLT57REJPYmplY3R9LT5EbygKICAgICAgICBTUUwgPT4gJ0lOU0VSVCBJTlRPIHNlcnZpY2VfY3VzdG9tZXJfdXNlciAnCiAgICAgICAgICAgIC4gJyhjdXN0b21lcl91c2VyX2xvZ2luLCBzZXJ2aWNlX2lkLCBjcmVhdGVfdGltZSwgY3JlYXRlX2J5KSAnCiAgICAgICAgICAgIC4gJ1ZBTFVFUyAoPywgPywgY3VycmVudF90aW1lc3RhbXAsID8pJywKICAgICAgICBCaW5kID0+IFsgXCRQYXJhbXtDdXN0b21lclVzZXJMb2dpbn0sIFwkUGFyYW17U2VydmljZUlEfSwgXCRQYXJhbXtVc2VySUR9IF0KICAgICk7Cn0KCj1pdGVtIFNlcnZpY2VQcmVmZXJlbmNlc1NldCgpCgpzZXQgc2VydmljZSBwcmVmZXJlbmNlcwoKICAgICRTZXJ2aWNlT2JqZWN0LT5TZXJ2aWNlUHJlZmVyZW5jZXNTZXQoCiAgICAgICAgU2VydmljZUlEID0+IDEyMywKICAgICAgICBLZXkgICAgICAgPT4gJ1VzZXJDb21tZW50JywKICAgICAgICBWYWx1ZSAgICAgPT4gJ3NvbWUgY29tbWVudCcsCiAgICAgICAgVXNlcklEICAgID0+IDEyMywKICAgICk7Cgo9Y3V0CgpzdWIgU2VydmljZVByZWZlcmVuY2VzU2V0IHsKICAgIG15ICRTZWxmID0gc2hpZnQ7CgogICAgcmV0dXJuICRTZWxmLT57UHJlZmVyZW5jZXNPYmplY3R9LT5TZXJ2aWNlUHJlZmVyZW5jZXNTZXQoQF8pOwp9Cgo9aXRlbSBTZXJ2aWNlUHJlZmVyZW5jZXNHZXQoKQoKZ2V0IHNlcnZpY2UgcHJlZmVyZW5jZXMKCiAgICBteSAlUHJlZmVyZW5jZXMgPSAkU2VydmljZU9iamVjdC0+U2VydmljZVByZWZlcmVuY2VzR2V0KAogICAgICAgIFNlcnZpY2VJRCA9PiAxMjMsCiAgICAgICAgVXNlcklEICAgID0+IDEyMywKICAgICk7Cgo9Y3V0CgpzdWIgU2VydmljZVByZWZlcmVuY2VzR2V0IHsKICAgIG15ICRTZWxmID0gc2hpZnQ7CgogICAgcmV0dXJuICRTZWxmLT57UHJlZmVyZW5jZXNPYmplY3R9LT5TZXJ2aWNlUHJlZmVyZW5jZXNHZXQoQF8pOwp9CgoxOwoKPWJhY2sKCj1oZWFkMSBURVJNUyBBTkQgQ09ORElUSU9OUwoKVGhpcyBzb2Z0d2FyZSBpcyBwYXJ0IG9mIHRoZSBPVFJTIHByb2plY3QgKGh0dHA6Ly9vdHJzLm9yZy8pLgoKVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQpkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgoKPWN1dAoKPWhlYWQxIFZFUlNJT04KCiRSZXZpc2lvbjogMS4xNSAkICREYXRlOiAyMDEwLzA0LzEzIDE3OjQwOjIwICQKCj1jdXQK</File>
        <File Location="Kernel/System/SLA.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/System/Stats.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9TeXN0ZW0vU3RhdHMucG0gLSBhbGwgc3RhdHMgY29yZSBmdW5jdGlvbnMKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMCBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgLS0KIyAkSWQ6IFN0YXRzLnBtLHYgMS4zIDIwMTAvMDMvMDEgMTI6MTc6MjMgdWIgRXhwICQKIyAkT2xkSWQ6IFN0YXRzLnBtLHYgMS44MC4yLjEgMjAwOS8wOS8yOCAxMzoxMjozOSB1YiBFeHAgJAojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6OlN5c3RlbTo6U3RhdHM7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cgp1c2UgTUlNRTo6QmFzZTY0Owp1c2UgRGF0ZTo6UGNhbGMgcXcoOmFsbCk7CnVzZSBLZXJuZWw6OlN5c3RlbTo6WE1MOwoKdXNlIHZhcnMgcXcoQElTQSAkVkVSU0lPTik7CiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjMgJCkgWzFdOwoKPWhlYWQxIFNZTk9QU0lTCgpBbGwgc3RhdHMgZnVuY3Rpb25zLgoKPWhlYWQxIFBVQkxJQyBJTlRFUkZBQ0UKCj1vdmVyIDQKCj1pdGVtIG5ldygpCgpjcmVhdGUgYW4gb2JqZWN0CgogICAgdXNlIEtlcm5lbDo6Q29uZmlnOwogICAgdXNlIEtlcm5lbDo6U3lzdGVtOjpFbmNvZGU7CiAgICB1c2UgS2VybmVsOjpTeXN0ZW06OkxvZzsKICAgIHVzZSBLZXJuZWw6OlN5c3RlbTo6TWFpbjsKICAgIHVzZSBLZXJuZWw6OlN5c3RlbTo6REI7CiAgICB1c2UgS2VybmVsOjpTeXN0ZW06Okdyb3VwOwogICAgdXNlIEtlcm5lbDo6U3lzdGVtOjpUaW1lOwogICAgdXNlIEtlcm5lbDo6U3lzdGVtOjpDU1Y7CiAgICB1c2UgS2VybmVsOjpTeXN0ZW06OlVzZXI7CiAgICB1c2UgS2VybmVsOjpTeXN0ZW06OlN0YXRzOwoKICAgIG15ICRDb25maWdPYmplY3QgPSBLZXJuZWw6OkNvbmZpZy0+bmV3KCk7CiAgICBteSAkRW5jb2RlT2JqZWN0ID0gS2VybmVsOjpTeXN0ZW06OkVuY29kZS0+bmV3KAogICAgICAgIENvbmZpZ09iamVjdCA9PiAkQ29uZmlnT2JqZWN0LAogICAgKTsKICAgIG15ICRMb2dPYmplY3QgPSBLZXJuZWw6OlN5c3RlbTo6TG9nLT5uZXcoCiAgICAgICAgQ29uZmlnT2JqZWN0ID0+ICRDb25maWdPYmplY3QsCiAgICAgICAgRW5jb2RlT2JqZWN0ID0+ICRFbmNvZGVPYmplY3QsCiAgICApOwogICAgbXkgJE1haW5PYmplY3QgPSBLZXJuZWw6OlN5c3RlbTo6TWFpbi0+bmV3KAogICAgICAgIENvbmZpZ09iamVjdCA9PiAkQ29uZmlnT2JqZWN0LAogICAgICAgIEVuY29kZU9iamVjdCA9PiAkRW5jb2RlT2JqZWN0LAogICAgICAgIExvZ09iamVjdCAgICA9PiAkTG9nT2JqZWN0LAogICAgKTsKICAgIG15ICREQk9iamVjdCA9IEtlcm5lbDo6U3lzdGVtOjpEQi0+bmV3KAogICAgICAgIENvbmZpZ09iamVjdCA9PiAkQ29uZmlnT2JqZWN0LAogICAgICAgIEVuY29kZU9iamVjdCA9PiAkRW5jb2RlT2JqZWN0LAogICAgICAgIExvZ09iamVjdCAgICA9PiAkTG9nT2JqZWN0LAogICAgICAgIE1haW5PYmplY3QgICA9PiAkTWFpbk9iamVjdCwKICAgICk7CiAgICBteSAkR3JvdXBPYmplY3QgPSBLZXJuZWw6OlN5c3RlbTo6R3JvdXAtPm5ldygKICAgICAgICBDb25maWdPYmplY3QgPT4gJENvbmZpZ09iamVjdCwKICAgICAgICBMb2dPYmplY3QgICAgPT4gJExvZ09iamVjdCwKICAgICAgICBEQk9iamVjdCAgICAgPT4gJERCT2JqZWN0LAogICAgKTsKICAgIG15ICRUaW1lT2JqZWN0ID0gS2VybmVsOjpTeXN0ZW06OlRpbWUtPm5ldygKICAgICAgICBDb25maWdPYmplY3QgPT4gJENvbmZpZ09iamVjdCwKICAgICAgICBMb2dPYmplY3QgICAgPT4gJExvZ09iamVjdCwKICAgICk7CiAgICBteSAkQ1NWT2JqZWN0ID0gS2VybmVsOjpTeXN0ZW06OkNTVi0+bmV3KAogICAgICAgIExvZ09iamVjdCA9PiAkTG9nT2JqZWN0LAogICAgKTsKICAgIG15ICRVc2VyT2JqZWN0ID0gS2VybmVsOjpTeXN0ZW06OlVzZXItPm5ldygKICAgICAgICBDb25maWdPYmplY3QgPT4gJENvbmZpZ09iamVjdCwKICAgICAgICBMb2dPYmplY3QgICAgPT4gJExvZ09iamVjdCwKICAgICAgICBNYWluT2JqZWN0ICAgPT4gJE1haW5PYmplY3QsCiAgICAgICAgVGltZU9iamVjdCAgID0+ICRUaW1lT2JqZWN0LAogICAgICAgIERCT2JqZWN0ICAgICA9PiAkREJPYmplY3QsCiAgICAgICAgRW5jb2RlT2JqZWN0ID0+ICRFbmNvZGVPYmplY3QsCiAgICApOwogICAgbXkgJFN0YXRzT2JqZWN0ID0gS2VybmVsOjpTeXN0ZW06OlN0YXRzLT5uZXcoCiAgICAgICAgQ29uZmlnT2JqZWN0ID0+ICRDb25maWdPYmplY3QsCiAgICAgICAgRW5jb2RlT2JqZWN0ID0+ICRFbmNvZGVPYmplY3QsCiAgICAgICAgTG9nT2JqZWN0ICAgID0+ICRMb2dPYmplY3QsCiAgICAgICAgREJPYmplY3QgICAgID0+ICREQk9iamVjdCwKICAgICAgICBNYWluT2JqZWN0ICAgPT4gJE1haW5PYmplY3QsCiAgICAgICAgQ1NWT2JqZWN0ICAgID0+ICRDU1ZPYmplY3QsCiAgICAgICAgVGltZU9iamVjdCAgID0+ICRUaW1lT2JqZWN0LAogICAgICAgIEdyb3VwT2JqZWN0ICA9PiAkR3JvdXBPYmplY3QsCiAgICAgICAgVXNlck9iamVjdCAgID0+ICRVc2VyT2JqZWN0LAogICAgICAgIFVzZXJJRCAgICAgICA9PiAxMjMsCiAgICApOwoKPWN1dAoKc3ViIG5ldyB7CiAgICBteSAoICRUeXBlLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgYWxsb2NhdGUgbmV3IGhhc2ggcmVmIHRvIG9iamVjdAogICAgbXkgJFNlbGYgPSB7fTsKICAgIGJsZXNzKCAkU2VsZiwgJFR5cGUgKTsKCiAgICAjIGNoZWNrIG9iamVjdHMgbGlzdCBmb3IgY29tcGxldGVuZXNzCiAgICBmb3IgbXkgJE9iamVjdCAoCiAgICAgICAgcXcoCiAgICAgICAgQ29uZmlnT2JqZWN0IExvZ09iamVjdCBVc2VySUQgR3JvdXBPYmplY3QgVXNlck9iamVjdCBUaW1lT2JqZWN0IE1haW5PYmplY3QgQ1NWT2JqZWN0CiAgICAgICAgREJPYmplY3QgRW5jb2RlT2JqZWN0CiAgICAgICAgKQogICAgICAgICkKICAgIHsKICAgICAgICAkU2VsZi0+eyRPYmplY3R9ID0gJFBhcmFteyRPYmplY3R9IHx8IGRpZSAiR290IG5vICRPYmplY3QhIjsKICAgIH0KCiAgICAjIGNyZWF0ZSBzdXBwbGVtZW50YXJ5IG9iamVjdHMKICAgICRTZWxmLT57WE1MT2JqZWN0fSA9IEtlcm5lbDo6U3lzdGVtOjpYTUwtPm5ldyglUGFyYW0pOwoKICAgICMgdGVtcG9yYXJ5IGRpcmVjdG9yeQogICAgJFNlbGYtPntTdGF0c1RlbXBEaXJ9ID0gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoJ0hvbWUnKSAuICcvdmFyL3N0YXRzLyc7CgogICAgcmV0dXJuICRTZWxmOwp9Cgo9aXRlbSBTdGF0c0FkZCgpCgphZGQgbmV3IHN0YXRzCgogICAgbXkgJFN0YXRJRCA9ICRTdGF0c09iamVjdC0+U3RhdHNBZGQoKTsKCj1jdXQKCnN1YiBTdGF0c0FkZCB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgIG15ICRTdGF0SUQgPSAxOwoKICAgICMgZ2V0IG5ldyBTdGF0SUQKICAgIG15IEBLZXlzID0gJFNlbGYtPntYTUxPYmplY3R9LT5YTUxIYXNoU2VhcmNoKCBUeXBlID0+ICdTdGF0cycsICk7CiAgICBpZiAoQEtleXMpIHsKICAgICAgICBteSBAU29ydEtleXMgPSBzb3J0IHsgJGEgPD0+ICRiIH0gQEtleXM7CiAgICAgICAgJFN0YXRJRCA9ICRTb3J0S2V5c1stMV0gKyAxOwogICAgfQoKICAgICMgcmVxdWVzdGluZyBjdXJyZW50IHRpbWUgc3RhbXAKICAgIG15ICRUaW1lU3RhbXAgPSAkU2VsZi0+e1RpbWVPYmplY3R9LT5TeXN0ZW1UaW1lMlRpbWVTdGFtcCgKICAgICAgICBTeXN0ZW1UaW1lID0+ICRTZWxmLT57VGltZU9iamVjdH0tPlN5c3RlbVRpbWUoKSwKICAgICk7CgogICAgIyBtZXRhIHRhZ3MKICAgIG15ICVNZXRhRGF0YSA9ICgpOwogICAgJE1ldGFEYXRhe0NyZWF0ZWR9WzBde0NvbnRlbnR9ICAgPSAkVGltZVN0YW1wOwogICAgJE1ldGFEYXRhe0NyZWF0ZWRCeX1bMF17Q29udGVudH0gPSAkU2VsZi0+e1VzZXJJRH07CiAgICAkTWV0YURhdGF7Q2hhbmdlZH1bMF17Q29udGVudH0gICA9ICRUaW1lU3RhbXA7CiAgICAkTWV0YURhdGF7Q2hhbmdlZEJ5fVswXXtDb250ZW50fSA9ICRTZWxmLT57VXNlcklEfTsKICAgICRNZXRhRGF0YXtWYWxpZH1bMF17Q29udGVudH0gICAgID0gMTsKICAgICRNZXRhRGF0YXtTdGF0TnVtYmVyfVswXXtDb250ZW50fQogICAgICAgID0gJFN0YXRJRCArICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdTdGF0czo6U3RhdHNTdGFydE51bWJlcicpOwoKICAgICMgc3RhcnQgbmV3IHN0YXRzIHJlY29yZAogICAgbXkgQFhNTEhhc2g7ICAgICMgaXQncyBhbiBhcnJheSBidXQgdGhlIHdvcmRpbmcgaXMgaGFzaAogICAgJFhNTEhhc2hbMF17b3Ryc19zdGF0c31bMF0gPSBcJU1ldGFEYXRhOwogICAgaWYgKAogICAgICAgICEkU2VsZi0+e1hNTE9iamVjdH0tPlhNTEhhc2hBZGQoCiAgICAgICAgICAgIFR5cGUgICAgPT4gJ1N0YXRzJywKICAgICAgICAgICAgS2V5ICAgICA9PiAkU3RhdElELAogICAgICAgICAgICBYTUxIYXNoID0+IFxAWE1MSGFzaCwKICAgICAgICApCiAgICAgICAgKQogICAgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAnU3RhdHNBZGQ6IENhbiBub3QgYWRkIGEgbmV3IFN0YXQhJywKICAgICAgICApOwogICAgICAgIHJldHVybiAwOwogICAgfQoKICAgIHJldHVybiAkU3RhdElEOwp9Cgo9aXRlbSBTdGF0c0dldCgpCgpnZXQgYSBoYXNoIHJlZiBvZiB0aGUgc3RhdHMgeW91IG5lZWQKCiAgICBteSAkSGFzaFJlZiA9ICRTdGF0c09iamVjdC0+U3RhdHNHZXQoCiAgICAgICAgU3RhdElEICAgICAgICAgICAgID0+ICcxMjMnLAogICAgICAgIE5vT2JqZWN0QXR0cmlidXRlcyA9PiAxLCAgICAgICAjIG9wdGlvbmFsCiAgICApOwoKPWN1dAoKc3ViIFN0YXRzR2V0IHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWNlc3NhcnkgZGF0YQogICAgaWYgKCAhJFBhcmFte1N0YXRJRH0gKSB7CiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coIFByaW9yaXR5ID0+ICdlcnJvcicsIE1lc3NhZ2UgPT4gJ1N0YXRzR2V0OiBOZWVkIFN0YXRJRCEnICk7CiAgICB9CgogICAgIyBnZXQgaGFzaCBmcm9tIHN0b3JhZ2UKICAgIG15IEBYTUxIYXNoID0gJFNlbGYtPntYTUxPYmplY3R9LT5YTUxIYXNoR2V0KAogICAgICAgIFR5cGUgPT4gJ1N0YXRzJywKICAgICAgICBLZXkgID0+ICRQYXJhbXtTdGF0SUR9LAogICAgKTsKCiAgICBpZiAoICEkWE1MSGFzaFswXSApIHsKICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZyggUHJpb3JpdHkgPT4gJ2Vycm9yJywgTWVzc2FnZSA9PiAiU3RhdHNHZXQ6IENhblwndCBnZXQgU3RhdCEiICk7CiAgICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgbXkgJVN0YXQgICAgPSAoKTsKICAgIG15ICRTdGF0WE1MID0gJFhNTEhhc2hbMF17b3Ryc19zdGF0c31bMV07CgogICAgIyBwcm9jZXNzIGFsbCBzdHJpbmdzCiAgICAkU3RhdHtTdGF0SUR9ID0gJFBhcmFte1N0YXRJRH07CiAgICBmb3IgbXkgJEtleSAoCiAgICAgICAgcXcoVGl0bGUgT2JqZWN0IEZpbGUgRGVzY3JpcHRpb24gU3VtUm93IFN1bUNvbCBTdGF0TnVtYmVyCiAgICAgICAgQ2FjaGUgU3RhdFR5cGUgVmFsaWQgT2JqZWN0TW9kdWxlIENyZWF0ZWRCeSBDaGFuZ2VkQnkgQ3JlYXRlZCBDaGFuZ2VkCiAgICAgICAgKQogICAgICAgICkKICAgIHsKICAgICAgICBpZiAoIGRlZmluZWQgJFN0YXRYTUwtPnskS2V5fVsxXXtDb250ZW50fSApIHsKICAgICAgICAgICAgJFN0YXR7JEtleX0gPSAkU3RhdFhNTC0+eyRLZXl9WzFde0NvbnRlbnR9OwogICAgICAgIH0KICAgIH0KCiAgICAjIHByb2Nlc3MgYWxsIGFycmF5cwogICAgS0VZOgogICAgZm9yIG15ICRLZXkgKHF3KFBlcm1pc3Npb24gRm9ybWF0IEdyYXBoU2l6ZSkpIHsKICAgICAgICBuZXh0IEtFWSBpZiAhJFN0YXRYTUwtPnskS2V5fVsxXXtDb250ZW50fTsKCiAgICAgICAgJFN0YXR7JEtleX0gPSAoKTsKICAgICAgICBmb3IgbXkgJEluZGV4ICggMSAuLiAkI3sgJFN0YXRYTUwtPnskS2V5fSB9ICkgewogICAgICAgICAgICBwdXNoIEB7ICRTdGF0eyRLZXl9IH0sICRTdGF0WE1MLT57JEtleX1bJEluZGV4XS0+e0NvbnRlbnR9OwogICAgICAgIH0KICAgIH0KCiAgICAjIGdldCB0aGUgY29uZmlndXJhdGlvbiBlbGVtZW50cyBvZiB0aGUgZHluYW1pYyBzdGF0cwogICAgIyAlQWxsb3dlZCBpcyB1c2VkIHRvIGF2b2lkIGRvdXBsZSBzZWxlY3Rpb24gaW4gZGlmZmVyZW50IGZvcm1zCiAgICBteSAlQWxsb3dlZCAgICAgPSAoKTsKICAgIG15ICVUaW1lQWxsb3dlZCA9ICgpOwogICAgbXkgJFRpbWVFbGVtZW50ID0gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoJ1N0YXRzOjpUaW1lRWxlbWVudCcpIHx8ICdUaW1lJzsKICAgIHJldHVybiBcJVN0YXQgaWYgISRTdGF0e09iamVjdH07CgogICAgJFN0YXR7T2JqZWN0TmFtZX0gPSAkU2VsZi0+R2V0T2JqZWN0TmFtZSgKICAgICAgICBPYmplY3RNb2R1bGUgPT4gJFN0YXR7T2JqZWN0TW9kdWxlfSwKICAgICk7CgogICAgcmV0dXJuIFwlU3RhdCBpZiAkUGFyYW17Tm9PYmplY3RBdHRyaWJ1dGVzfTsKCiAgICBLRVk6CiAgICBmb3IgbXkgJEtleSAocXcoVXNlQXNYdmFsdWUgVXNlQXNWYWx1ZVNlcmllcyBVc2VBc1Jlc3RyaWN0aW9uKSkgewoKICAgICAgICAjIEBTdGF0QXR0cmlidXRlc1NpbXBsaWZpZWQgZ2l2ZSB5b3UgYXJyYXlzIHdpdGhvdXQgdW5kZWYgYXJyYXkgZWxlbWVudHMKICAgICAgICBteSBAU3RhdEF0dHJpYnV0ZXNTaW1wbGlmaWVkID0gKCk7CgogICAgICAgICMgZ2V0IHRoZSBhdHRyaWJ1dGVzIG9mIHRoZSBvYmplY3QKICAgICAgICBteSBAT2JqZWN0QXR0cmlidXRlcyA9ICRTZWxmLT5HZXRTdGF0c09iamVjdEF0dHJpYnV0ZXMoCiAgICAgICAgICAgIE9iamVjdE1vZHVsZSA9PiAkU3RhdHtPYmplY3RNb2R1bGV9LAogICAgICAgICAgICBVc2UgICAgICAgICAgPT4gJEtleSwKICAgICAgICApOwoKICAgICAgICBuZXh0IEtFWSBpZiAhQE9iamVjdEF0dHJpYnV0ZXM7CgogICAgICAgIEFUVFJJQlVURToKICAgICAgICBmb3IgbXkgJEF0dHJpYnV0ZSAoQE9iamVjdEF0dHJpYnV0ZXMpIHsKICAgICAgICAgICAgbXkgJEVsZW1lbnQgPSAkQXR0cmlidXRlLT57RWxlbWVudH07CiAgICAgICAgICAgIGlmICggJEF0dHJpYnV0ZS0+e0Jsb2NrfSBlcSAnVGltZScgKSB7CiAgICAgICAgICAgICAgICBpZiAoICRLZXkgZXEgJ1VzZUFzVmFsdWVTZXJpZXMnICkgewogICAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICAgICAgJEFsbG93ZWR7JEVsZW1lbnR9CiAgICAgICAgICAgICAgICAgICAgICAgICYmICRBbGxvd2VkeyRFbGVtZW50fSA9PSAxCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICRBbGxvd2VkeyRFbGVtZW50fSAgICAgPSAwOwogICAgICAgICAgICAgICAgICAgICAgICAkVGltZUFsbG93ZWR7JEVsZW1lbnR9ID0gMTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRBbGxvd2VkeyRFbGVtZW50fSA9IDE7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzaWYgKCAkS2V5IGVxICdVc2VBc1Jlc3RyaWN0aW9uJyApIHsKICAgICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgICAgICRUaW1lQWxsb3dlZHskRWxlbWVudH0KICAgICAgICAgICAgICAgICAgICAgICAgJiYgJFRpbWVBbGxvd2VkeyRFbGVtZW50fSA9PSAxCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICRBbGxvd2VkeyRFbGVtZW50fSA9IDE7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAkQWxsb3dlZHskRWxlbWVudH0gPSAwOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBuZXh0IEFUVFJJQlVURSBpZiAkQWxsb3dlZHskRWxlbWVudH07CgogICAgICAgICAgICBpZiAoICRTdGF0WE1MLT57JEtleX0gKSB7CiAgICAgICAgICAgICAgICBteSBAU3RhdEF0dHJpYnV0ZXMgPSBAeyAkU3RhdFhNTC0+eyRLZXl9IH07CiAgICAgICAgICAgICAgICBpZiAoICEkU3RhdEF0dHJpYnV0ZXNbMF0gKSB7CiAgICAgICAgICAgICAgICAgICAgc2hpZnQgQFN0YXRBdHRyaWJ1dGVzOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgUkVGOgogICAgICAgICAgICAgICAgZm9yIG15ICRSZWYgKEBTdGF0QXR0cmlidXRlcykgewogICAgICAgICAgICAgICAgICAgIGlmICggIWRlZmluZWQgJEF0dHJpYnV0ZS0+e1RyYW5zbGF0aW9ufSApIHsKICAgICAgICAgICAgICAgICAgICAgICAgJEF0dHJpYnV0ZS0+e1RyYW5zbGF0aW9ufSA9IDE7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBuZXh0IFJFRgogICAgICAgICAgICAgICAgICAgICAgICBpZiAhKAogICAgICAgICAgICAgICAgICAgICAgICAkRWxlbWVudAogICAgICAgICAgICAgICAgICAgICAgICAmJiAkUmVmLT57RWxlbWVudH0KICAgICAgICAgICAgICAgICAgICAgICAgJiYgJEVsZW1lbnQgZXEgJFJlZi0+e0VsZW1lbnR9CiAgICAgICAgICAgICAgICAgICAgICAgICk7CgogICAgICAgICAgICAgICAgICAgICMgaWYgc2VsZWN0ZWQgZWxlbWVudHMgZXhpdCwgYWRkIHRoZSBpbmZvcm1hdGlvbiB0byB0aGUgU3RhdEF0dHJpYnV0ZXMKICAgICAgICAgICAgICAgICAgICAkQXR0cmlidXRlLT57U2VsZWN0ZWR9ID0gMTsKICAgICAgICAgICAgICAgICAgICBpZiAoICRSZWYtPntGaXhlZH0gKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRBdHRyaWJ1dGUtPntGaXhlZH0gPSAxOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgZm9yIG15ICRJbmRleCAoIDEgLi4gJCN7ICRSZWYtPntTZWxlY3RlZFZhbHVlc30gfSApIHsKICAgICAgICAgICAgICAgICAgICAgICAgcHVzaCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIEB7ICRBdHRyaWJ1dGUtPntTZWxlY3RlZFZhbHVlc30gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRSZWYtPntTZWxlY3RlZFZhbHVlc31bJEluZGV4XS0+e0NvbnRlbnR9CiAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAjIHN0ZXR0aW5ncyBmb3Igd29ya2luZyB3aXRoIHRpbWUgZWxlbWVudHMKICAgICAgICAgICAgICAgICAgICBmb3IgKAogICAgICAgICAgICAgICAgICAgICAgICBxdyhUaW1lU3RvcCBUaW1lU3RhcnQgVGltZVJlbGF0aXZlVW5pdAogICAgICAgICAgICAgICAgICAgICAgICBUaW1lUmVsYXRpdmVDb3VudCBUaW1lU2NhbGVDb3VudAogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICB7CiMgLS0tCiMgSVRTTQojIC0tLQojICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCAkUmVmLT57JF99ICkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoICRSZWYtPnskX30gJiYgKCAhJEF0dHJpYnV0ZS0+eyRffSB8fCAkUmVmLT57Rml4ZWR9ICkgKSB7CiMgLS0tCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkQXR0cmlidXRlLT57JF99ID0gJFJlZi0+eyRffTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAkQWxsb3dlZHskRWxlbWVudH0gPSAxOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHB1c2ggQFN0YXRBdHRyaWJ1dGVzU2ltcGxpZmllZCwgJEF0dHJpYnV0ZTsKCiAgICAgICAgfQogICAgICAgICRTdGF0eyRLZXl9ID0gXEBTdGF0QXR0cmlidXRlc1NpbXBsaWZpZWQ7CiAgICB9CgogICAgcmV0dXJuIFwlU3RhdDsKfQoKPWl0ZW0gU3RhdHNVcGRhdGUoKQoKdXBkYXRlIGEgc3RhdAoKICAgICRTdGF0c09iamVjdC0+U3RhdHNVcGRhdGUoCiAgICAgICAgU3RhdElEID0+ICcxMjMnLAogICAgICAgIEhhc2ggICA9PiBcJUhhc2gKICAgICk7Cgo9Y3V0CgpzdWIgU3RhdHNVcGRhdGUgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGRlY2xhcmF0aW9uIG9mIHRoZSBoYXNoCiAgICBteSAlU3RhdFhNTCA9ICgpOwoKICAgICMgY2hlY2sgbmVjZXNzYXJ5IGRhdGEKICAgIGlmICggISRQYXJhbXtTdGF0SUR9ICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKCBQcmlvcml0eSA9PiAnZXJyb3InLCBNZXNzYWdlID0+ICdTdGF0c1VwZGF0ZTogTmVlZCBTdGF0SUQhJyApOwogICAgfQoKICAgICMgcmVxdWVzdGluZyBzdGF0cyByZWZlcmVuY2UKICAgIG15ICRTdGF0T2xkID0gJFNlbGYtPlN0YXRzR2V0KCBTdGF0SUQgPT4gJFBhcmFte1N0YXRJRH0gKTsKICAgIGlmICggISRTdGF0T2xkICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlID0+CiAgICAgICAgICAgICAgICAiU3RhdHNVcGRkYXRlOiBDYW4ndCBnZXQgc3RhdHMsIHBlcmhhcHMgeW91IGhhdmUgYW4gaW52YWxpZCBzdGF0cyBpZCEgKFN0YXRzSUQgPT4gJFBhcmFte1N0YXRJRH0pIgogICAgICAgICk7CiAgICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgIyBkZWNsYXJlIHZhcmlhYmxlCiAgICBteSAkU3RhdE5ldyA9ICRQYXJhbXtIYXNofTsKCiAgICAjIGEgZGVsZXRlIGZ1bmN0aW9uIGNhbiBiZSB0aGUgYmV0dGVyIHNvbHV0aW9uCiAgICBmb3IgbXkgJEtleSAocXcoVXNlQXNYdmFsdWUgVXNlQXNWYWx1ZVNlcmllcyBVc2VBc1Jlc3RyaWN0aW9uKSkgewogICAgICAgIGZvciAoIEB7ICRTdGF0T2xkLT57JEtleX0gfSApIHsKICAgICAgICAgICAgaWYgKCAhJF8tPntTZWxlY3RlZH0gKSB7CiAgICAgICAgICAgICAgICAkXyA9IHVuZGVmOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgICMgYWRvcHQgY2hhbmdlcwogICAgZm9yIG15ICRLZXkgKCBrZXlzICV7JFN0YXROZXd9ICkgewogICAgICAgICRTdGF0T2xkLT57JEtleX0gPSAkU3RhdE5ldy0+eyRLZXl9OwogICAgfQoKICAgIGZvciBteSAkS2V5ICgga2V5cyAleyRTdGF0T2xkfSApIHsKICAgICAgICBpZiAoICRLZXkgZXEgJ1VzZUFzWHZhbHVlJyB8fCAkS2V5IGVxICdVc2VBc1ZhbHVlU2VyaWVzJyB8fCAkS2V5IGVxICdVc2VBc1Jlc3RyaWN0aW9uJyApIHsKICAgICAgICAgICAgbXkgJEluZGV4ID0gMDsKICAgICAgICAgICAgUkVGOgogICAgICAgICAgICBmb3IgbXkgJFJlZiAoIEB7ICRTdGF0T2xkLT57JEtleX0gfSApIHsKICAgICAgICAgICAgICAgIG5leHQgUkVGIGlmICEkUmVmOwoKICAgICAgICAgICAgICAgICRJbmRleCsrOwogICAgICAgICAgICAgICAgJFN0YXRYTUx7JEtleX1bJEluZGV4XXtFbGVtZW50fSA9ICRSZWYtPntFbGVtZW50fTsKICAgICAgICAgICAgICAgICRTdGF0WE1MeyRLZXl9WyRJbmRleF17Rml4ZWR9ICAgPSAkUmVmLT57Rml4ZWR9OwogICAgICAgICAgICAgICAgbXkgJFN1YkluZGV4ID0gMDsKICAgICAgICAgICAgICAgIGZvciBteSAkVmFsdWUgKCBAeyAkUmVmLT57U2VsZWN0ZWRWYWx1ZXN9IH0gKSB7CiAgICAgICAgICAgICAgICAgICAgJFN1YkluZGV4Kys7CiAgICAgICAgICAgICAgICAgICAgJFN0YXRYTUx7JEtleX1bJEluZGV4XXtTZWxlY3RlZFZhbHVlc31bJFN1YkluZGV4XXtDb250ZW50fSA9ICRWYWx1ZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAjIHN0ZXR0aW5ncyBmb3Igd29ya2luZyB3aXRoIHRpbWUgZWxlbWVudHMKICAgICAgICAgICAgICAgIGZvciAocXcoVGltZVN0b3AgVGltZVN0YXJ0IFRpbWVSZWxhdGl2ZVVuaXQgVGltZVJlbGF0aXZlQ291bnQgVGltZVNjYWxlQ291bnQpKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCAkUmVmLT57JF99ICkgewogICAgICAgICAgICAgICAgICAgICAgICAkU3RhdFhNTHskS2V5fVskSW5kZXhdeyRffSA9ICRSZWYtPnskX307CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2lmICggcmVmKCAkU3RhdE9sZC0+eyRLZXl9ICkgZXEgJ0FSUkFZJyApIHsKICAgICAgICAgICAgZm9yIG15ICRJbmRleCAoIDAgLi4gJCN7ICRTdGF0T2xkLT57JEtleX0gfSApIHsKICAgICAgICAgICAgICAgICRTdGF0WE1MeyRLZXl9WyRJbmRleF17Q29udGVudH0gPSAkU3RhdE9sZC0+eyRLZXl9WyRJbmRleF07CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIGlmICggZGVmaW5lZCAkU3RhdE9sZC0+eyRLZXl9ICkgewogICAgICAgICAgICAgICAgJFN0YXRYTUx7JEtleX1bMV17Q29udGVudH0gPSAkU3RhdE9sZC0+eyRLZXl9OwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgICMgbWV0YSB0YWdzCiAgICBteSAkVGltZVN0YW1wID0gJFNlbGYtPntUaW1lT2JqZWN0fS0+U3lzdGVtVGltZTJUaW1lU3RhbXAoCiAgICAgICAgU3lzdGVtVGltZSA9PiAkU2VsZi0+e1RpbWVPYmplY3R9LT5TeXN0ZW1UaW1lKCksCiAgICApOwogICAgJFN0YXRYTUx7Q2hhbmdlZH1bMV17Q29udGVudH0gICA9ICRUaW1lU3RhbXA7CiAgICAkU3RhdFhNTHtDaGFuZ2VkQnl9WzFde0NvbnRlbnR9ID0gJFNlbGYtPntVc2VySUR9OwoKICAgICMgcGxlYXNlIGRvbid0IGNoYW5nZSB0aGUgZnVuY3Rpb25hbGl0eSBvZiBYTUxIYXNoRGVsZXRlIGFuZCBYTUxIYXNoQWRkCiAgICAjIGludG8gdGhlIG5ldyBmdW5jdGlvbiBYTUxIYXNoVXBkYXRlLCB0aGVyZSBpcyBhbiBpbmNvbXBhdGliaWxpdHkuCiAgICAjIFBlcmhhcHMgdGhlcmUgYXJlIGludHJpY2FjaWVzIGJlY2F1c2Ugb2YgdGhlICdBcnJheVswXSA9IHVuZGVmJyBkZWZpbml0aW9uCgogICAgIyBkZWxldGUgdGhlIG9sZCByZWNvcmQKICAgIGlmICgKICAgICAgICAhJFNlbGYtPntYTUxPYmplY3R9LT5YTUxIYXNoRGVsZXRlKAogICAgICAgICAgICBUeXBlID0+ICdTdGF0cycsCiAgICAgICAgICAgIEtleSAgPT4gJFBhcmFte1N0YXRJRH0sCiAgICAgICAgKQogICAgICAgICkKICAgIHsKICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgTWVzc2FnZSAgPT4gIlN0YXRzVXBkZGF0ZTogQ2FuJ3QgZGVsZXRlIFhNTEhhc2ghIgogICAgICAgICk7CiAgICAgICAgcmV0dXJuIDA7CiAgICB9CgogICAgIyBkZWxldGUgY2FjaGUKICAgICRTZWxmLT5fRGVsZXRlQ2FjaGUoIFN0YXRJRCA9PiAkUGFyYW17U3RhdElEfSApOwoKICAgIG15IEBBcnJheSA9ICgpOwogICAgJEFycmF5WzBde290cnNfc3RhdHN9WzBdID0gXCVTdGF0WE1MOwoKICAgICMgYWRkIHRoZSByZXZpc2VkIHJlY29yZAogICAgaWYgKAogICAgICAgICRTZWxmLT57WE1MT2JqZWN0fS0+WE1MSGFzaEFkZCgKICAgICAgICAgICAgVHlwZSAgICA9PiAnU3RhdHMnLAogICAgICAgICAgICBLZXkgICAgID0+ICRQYXJhbXtTdGF0SUR9LAogICAgICAgICAgICBYTUxIYXNoID0+IFxAQXJyYXkKICAgICAgICApCiAgICAgICAgKQogICAgewogICAgICAgIHJldHVybiAxOwogICAgfQogICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coIFByaW9yaXR5ID0+ICdlcnJvcicsIE1lc3NhZ2UgPT4gIlN0YXRzVXBkZGF0ZTogQ2FuJ3QgYWRkIFhNTEhhc2ghIiApOwoKICAgIHJldHVybiAwOwp9Cgo9aXRlbSBTdGF0c0RlbGV0ZSgpCgpkZWxldGUgYSBzdGF0cwoKICAgICRTdGF0c09iamVjdC0+U3RhdHNEZWxldGUoU3RhdElEID0+ICcxMjMnKTsKCj1jdXQKCnN1YiBTdGF0c0RlbGV0ZSB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVjZXNzYXJ5IGRhdGEKICAgIGlmICggISRQYXJhbXtTdGF0SUR9ICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKCBQcmlvcml0eSA9PiAnZXJyb3InLCBNZXNzYWdlID0+ICJTdGF0c0RlbGV0ZTogTmVlZCBTdGF0SUQhIiApOwogICAgfQoKICAgICMgZGVsZXRlIHRoZSByZWNvcmQKICAgIG15ICRSZXN1bHQgPSAkU2VsZi0+e1hNTE9iamVjdH0tPlhNTEhhc2hEZWxldGUoCiAgICAgICAgVHlwZSA9PiAnU3RhdHMnLAogICAgICAgIEtleSAgPT4gJFBhcmFte1N0YXRJRH0sCiAgICApOwoKICAgICMgZXJyb3IgaGFuZGxpbmcKICAgIGlmICggISRSZXN1bHQgKSB7CiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgIE1lc3NhZ2UgID0+ICJTdGF0c0RlbGV0ZTogQ2FuJ3QgZGVsZXRlIFhNTEhhc2ghIiwKICAgICAgICApOwogICAgICAgIHJldHVybiAwOwogICAgfQoKICAgICMgZGVsZXRlIGNhY2hlCiAgICAkU2VsZi0+X0RlbGV0ZUNhY2hlKCBTdGF0SUQgPT4gJFBhcmFte1N0YXRJRH0gKTsKCiAgICAjIGdldCBsaXN0IG9mIGluc3RhbGxlZCBzdGF0cyBmaWxlcwogICAgbXkgQFN0YXRzRmlsZUxpc3QgPSBnbG9iICRTZWxmLT57U3RhdHNUZW1wRGlyfSAuICcqLnhtbC5pbnN0YWxsZWQnOwoKICAgICMgZGVsZXRlIHRoZSAuaW5zdGFsbGVkIGZpbGUgaW4gdGVtcCBkaXIKICAgIEZJTEU6CiAgICBmb3IgbXkgJEZpbGUgKCBzb3J0IEBTdGF0c0ZpbGVMaXN0ICkgewoKICAgICAgICAjIHJlYWQgZmlsZSBjb250ZW50CiAgICAgICAgbXkgJFN0YXRzSURSZWYgPSAkU2VsZi0+e01haW5PYmplY3R9LT5GaWxlUmVhZCgKICAgICAgICAgICAgTG9jYXRpb24gPT4gJEZpbGUsCiAgICAgICAgKTsKCiAgICAgICAgbmV4dCBGSUxFIGlmICEkU3RhdHNJRFJlZjsKICAgICAgICBuZXh0IEZJTEUgaWYgcmVmICRTdGF0c0lEUmVmIG5lICdTQ0FMQVInOwogICAgICAgIG5leHQgRklMRSBpZiAhJHskU3RhdHNJRFJlZn07CgogICAgICAgIG5leHQgRklMRSBpZiAkeyRTdGF0c0lEUmVmfSBuZSAkUGFyYW17U3RhdElEfTsKCiAgICAgICAgIyBkZWxldGUgLmluc3RhbGxlZCBmaWxlCiAgICAgICAgJFNlbGYtPntNYWluT2JqZWN0fS0+RmlsZURlbGV0ZSgKICAgICAgICAgICAgTG9jYXRpb24gPT4gJEZpbGUsCiAgICAgICAgKTsKICAgIH0KCiAgICAjIGFkZCBsb2cgbWVzc2FnZQogICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgUHJpb3JpdHkgPT4gJ25vdGljZScsCiAgICAgICAgTWVzc2FnZSAgPT4gIkRlbGV0ZSBzdGF0cyAoU3RhdHNJRCA9ICRQYXJhbXtTdGF0SUR9KSIsCiAgICApOwoKICAgIHJldHVybiAxOwp9Cgo9aXRlbSBHZXRTdGF0c0xpc3QoKQoKbGlzdHMgYWxsIHN0YXRzIGlkJ3MKCiAgICBteSAkQXJyYXlSZWYgPSAkU3RhdHNPYmplY3QtPkdldFN0YXRzTGlzdCgKICAgICAgICBPcmRlckJ5ICAgPT4gJ0lEJyB8fCAnVGl0bGUnIHx8ICdPYmplY3QnLCAjIG9wdGlvbmFsCiAgICAgICAgRGlyZWN0aW9uID0+ICdBU0MnIHx8ICdERVNDJywgICAgICAgICAgICAgIyBvcHRpb25hbAogICAgKTsKCj1jdXQKCnN1YiBHZXRTdGF0c0xpc3QgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICBteSBAU2VhcmNoUmVzdWx0ID0gKCk7CiAgICBpZiAoICEoIEBTZWFyY2hSZXN1bHQgPSAkU2VsZi0+e1hNTE9iamVjdH0tPlhNTEhhc2hTZWFyY2goIFR5cGUgPT4gJ1N0YXRzJyApICkgKSB7CiAgICAgICAgJFNlbGYtPl9BdXRvbWF0aWNTYW1wbGVJbXBvcnQoKTsKICAgICAgICByZXR1cm4gKCkgaWYgISggQFNlYXJjaFJlc3VsdCA9ICRTZWxmLT57WE1MT2JqZWN0fS0+WE1MSGFzaFNlYXJjaCggVHlwZSA9PiAnU3RhdHMnICkgKTsKICAgIH0KCiAgICAjIGdldCB1c2VyIGdyb3VwcwogICAgbXkgQEdyb3VwcyA9ICRTZWxmLT57R3JvdXBPYmplY3R9LT5Hcm91cE1lbWJlckxpc3QoCiAgICAgICAgVXNlcklEID0+ICRTZWxmLT57VXNlcklEfSwKICAgICAgICBUeXBlICAgPT4gJ3JvJywKICAgICAgICBSZXN1bHQgPT4gJ0lEJywKICAgICk7CgogICAgJFBhcmFte09yZGVyQnl9IHx8PSAnSUQnOwoKICAgICMgYSBzb2x1dGlvbiB3aXRoIG1vcmUgcGVyZm9ybWFuY2UgaXMgdXNlZnVsCiAgICBteSAlUmVzdWx0SGFzaCA9ICgpOwogICAgZm9yIG15ICRTdGF0SUQgKEBTZWFyY2hSZXN1bHQpIHsKICAgICAgICBteSAkU3RhdCA9ICRTZWxmLT5TdGF0c0dldCgKICAgICAgICAgICAgU3RhdElEICAgICAgICAgICAgID0+ICRTdGF0SUQsCiAgICAgICAgICAgIE5vT2JqZWN0QXR0cmlidXRlcyA9PiAxLAogICAgICAgICk7CiAgICAgICAgbXkgJFVzZXJQZXJtaXNzaW9uID0gMDsKICAgICAgICBpZiAoICRTZWxmLT57QWNjZXNzUnd9IHx8ICRTZWxmLT57VXNlcklEfSA9PSAxICkgewogICAgICAgICAgICAkVXNlclBlcm1pc3Npb24gPSAxOwogICAgICAgIH0KCiAgICAgICAgIyB0aGVzZSBmdW5jdGlvbiBpcyBzaW1pbGFyIGxpa2Ugb3RoZXIgZnVuY3Rpb24gaW4gdGhlIGNvZGUgcGVyaGFwcyB3ZSBzaG91bGQKICAgICAgICAjIG1lcmdlIHRoZW0KICAgICAgICAjIHBlcm1pc3Npb24gY2hlY2sKICAgICAgICBlbHNpZiAoICRTdGF0LT57VmFsaWR9ICkgewogICAgICAgICAgICBNQVJLRToKICAgICAgICAgICAgZm9yIG15ICRHcm91cElEICggQHsgJFN0YXQtPntQZXJtaXNzaW9ufSB9ICkgewogICAgICAgICAgICAgICAgZm9yIG15ICRVc2VyR3JvdXAgKEBHcm91cHMpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoICRHcm91cElEID09ICRVc2VyR3JvdXAgKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRVc2VyUGVybWlzc2lvbiA9IDE7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgTUFSS0U7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICggJFVzZXJQZXJtaXNzaW9uID09IDEgKSB7CgogICAgICAgICAgICAjIG9yZGVyIGJ5IHRpdGxlCiAgICAgICAgICAgIGlmICggJFBhcmFte09yZGVyQnl9IGVxICdUaXRsZScgKSB7CiAgICAgICAgICAgICAgICAkUmVzdWx0SGFzaHskU3RhdElEfSA9ICRTdGF0LT57VGl0bGV9IHx8ICcnOwogICAgICAgICAgICB9CgogICAgICAgICAgICAjIG9yZGVyIGJ5IG9iamVjdAogICAgICAgICAgICBlbHNpZiAoICRQYXJhbXtPcmRlckJ5fSBlcSAnT2JqZWN0JyApIHsKICAgICAgICAgICAgICAgICRSZXN1bHRIYXNoeyRTdGF0SUR9ID0gJFN0YXQtPntPYmplY3R9IHx8ICcnOwogICAgICAgICAgICB9CgogICAgICAgICAgICAjIG9yZGVyIGJ5IGlkCiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgJFJlc3VsdEhhc2h7JFN0YXRJRH0gPSBpbnQgJFN0YXRJRDsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIG15IEBTb3J0QXJyYXkgPSAoKTsKICAgIGlmICggJFBhcmFte09yZGVyQnl9IGVxICdJRCcgKSB7CiAgICAgICAgQFNvcnRBcnJheSA9IHNvcnQgeyAkUmVzdWx0SGFzaHskYX0gPD0+ICRSZXN1bHRIYXNoeyRifSB9IGtleXMgJVJlc3VsdEhhc2g7CiAgICB9CiAgICBlbHNlIHsKICAgICAgICBAU29ydEFycmF5ID0gc29ydCB7ICRSZXN1bHRIYXNoeyRhfSBjbXAgJFJlc3VsdEhhc2h7JGJ9IH0ga2V5cyAlUmVzdWx0SGFzaDsKICAgIH0KICAgIGlmICggJFBhcmFte0RpcmVjdGlvbn0gJiYgJFBhcmFte0RpcmVjdGlvbn0gZXEgJ0RFU0MnICkgewogICAgICAgIEBTb3J0QXJyYXkgPSByZXZlcnNlIEBTb3J0QXJyYXk7CiAgICB9CgogICAgcmV0dXJuIFxAU29ydEFycmF5Owp9Cgo9aXRlbSBTdW1CdWlsZCgpCgpidWlsZCBzdW0gaW4geCBvci9hbmQgeSBheGlzCgogICAgJFN0YXRBcnJheSA9ICRTdGF0c09iamVjdC0+U3VtQnVpbGQoCiAgICAgICAgQXJyYXkgPT4gXEBSZXN1bHQsCiAgICAgICAgU3VtUm93ID0+IDEsCiAgICAgICAgU3VtQ29sID0+IDAsCiAgICApOwoKPWN1dAoKc3ViIFN1bUJ1aWxkIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgbXkgQERhdGEgPSBAeyAkUGFyYW17QXJyYXl9IH07CgogICAgIyBhZGQgc3VtIHkKICAgIGlmICggJFBhcmFte1N1bVJvd30gKSB7CiAgICAgICAgcHVzaCBAeyAkRGF0YVsxXSB9LCAnU3VtJzsKICAgICAgICBmb3IgbXkgJEluZGV4MSAoIDIgLi4gJCNEYXRhICkgewogICAgICAgICAgICBteSAkU3VtID0gMDsKICAgICAgICAgICAgZm9yIG15ICRJbmRleDIgKCAxIC4uICQjeyAkRGF0YVskSW5kZXgxXSB9ICkgewogICAgICAgICAgICAgICAgaWYgKCAkRGF0YVskSW5kZXgxXVskSW5kZXgyXSA9fiBte14tP1xkKyhcLlxkKyk/JH0gKSB7CiAgICAgICAgICAgICAgICAgICAgJFN1bSArPSAkRGF0YVskSW5kZXgxXVskSW5kZXgyXTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBwdXNoIEB7ICREYXRhWyRJbmRleDFdIH0sICRTdW07CiAgICAgICAgfQogICAgfQoKICAgICMgYWRkIHN1bSB4CiAgICBpZiAoICRQYXJhbXtTdW1Db2x9ICkgewogICAgICAgIG15IEBTdW1Sb3cgPSAoKTsKICAgICAgICAkU3VtUm93WzBdID0gJ1N1bSc7CiAgICAgICAgZm9yIG15ICRJbmRleDEgKCAyIC4uICQjRGF0YSApIHsKICAgICAgICAgICAgZm9yIG15ICRJbmRleDIgKCAxIC4uICQjeyAkRGF0YVskSW5kZXgxXSB9ICkgewogICAgICAgICAgICAgICAgaWYgKCAkRGF0YVskSW5kZXgxXVskSW5kZXgyXSA9fiBte14tP1xkKyhcLlxkKyk/JH0gKSB7CiAgICAgICAgICAgICAgICAgICAgJFN1bVJvd1skSW5kZXgyXSArPSAkRGF0YVskSW5kZXgxXVskSW5kZXgyXTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBwdXNoIEBEYXRhLCBcQFN1bVJvdzsKICAgIH0KICAgIHJldHVybiBcQERhdGE7Cn0KCiM9aXRlbSBfR2VuZXJhdGVTdGF0aWNTdGF0cygpCiMKIyAgICB0YWtlIHRoZSBzdGF0IGNvbmZpZ3VyYXRpb24gYW5kIGdldCB0aGUgc3RhdCB0YWJsZQojCiMgICAgbXkgQFN0YXRBcnJheSA9ICRTdGF0c09iamVjdC0+X0dlbmVyYXRlU3RhdGljU3RhdHMoCiMgICAgICAgIE9iamVjdE1vZHVsZSAgICAgPT4gJFN0YXQtPntPYmplY3RNb2R1bGV9LAojICAgICAgICBHZXRQYXJhbSAgICAgICAgID0+ICRQYXJhbXtHZXRQYXJhbX0sCiMgICAgICAgIFRpdGxlICAgICAgICAgICAgPT4gJFN0YXQtPntUaXRsZX0sCiMgICAgICAgIFN0YXRJRCAgICAgICAgICAgPT4gJFN0YXQtPntTdGF0SUR9LAojICAgICAgICBDYWNoZSAgICAgICAgICAgID0+ICRTdGF0LT57Q2FjaGV9LAojICAgICk7CiMKIz1jdXQKCnN1YiBfR2VuZXJhdGVTdGF0aWNTdGF0cyB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVlZGVkIHBhcmFtcwogICAgTkVFRDoKICAgIGZvciBteSAkTmVlZCAocXcoT2JqZWN0TW9kdWxlIEdldFBhcmFtIFRpdGxlIFN0YXRJRCkpIHsKICAgICAgICBuZXh0IE5FRUQgaWYgJFBhcmFteyROZWVkfTsKICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgTWVzc2FnZSAgPT4gIl9HZW5lcmF0ZVN0YXRpY1N0YXRzOiBOZWVkICROZWVkISIKICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgIH0KCiAgICAjIGxvYWQgc3RhdGljIG1vZHVsCiAgICBteSAkT2JqZWN0TW9kdWxlID0gJFBhcmFte09iamVjdE1vZHVsZX07CiAgICAkU2VsZi0+e01haW5PYmplY3R9LT5SZXF1aXJlKCRPYmplY3RNb2R1bGUpOwogICAgbXkgJFN0YXRPYmplY3QgPSAkT2JqZWN0TW9kdWxlLT5uZXcoICV7JFNlbGZ9ICk7CgogICAgbXkgQFJlc3VsdCAgID0gKCk7CiAgICBteSAlR2V0UGFyYW0gPSAleyAkUGFyYW17R2V0UGFyYW19IH07CgogICAgIyB1c2UgcmVzdWx0IGNhY2hlIGlmIGNvbmZpZ3VyZWQKICAgIGlmICggJFBhcmFte0NhY2hlfSApIHsKICAgICAgICBteSAkRmlsZW5hbWUgPSAkU2VsZi0+X0NyZWF0ZVN0YXRpY1Jlc3VsdENhY2hlRmlsZW5hbWUoCiAgICAgICAgICAgIEdldFBhcmFtID0+IFwlR2V0UGFyYW0sCiAgICAgICAgICAgIFN0YXRJRCAgID0+ICRQYXJhbXtTdGF0SUR9LAogICAgICAgICk7CgogICAgICAgIEBSZXN1bHQgPSAkU2VsZi0+X0dldFJlc3VsdENhY2hlKCBGaWxlbmFtZSA9PiAkRmlsZW5hbWUgKTsKICAgIH0KCiAgICAjIHRyeSB0byBnZXQgZGF0YSBpZiBub3RpbmcgaXMgdGhlcmUKICAgIGlmICggIUBSZXN1bHQgKSB7CgogICAgICAgICMgcnVuIHN0YXRzIGZ1bmN0aW9uCiAgICAgICAgQFJlc3VsdCA9ICRTdGF0T2JqZWN0LT5SdW4oCiAgICAgICAgICAgICVHZXRQYXJhbSwKCiAgICAgICAgICAgICMgdGhlc2UgdHdvIGxpbmVzIGFyZSByZXF1aXJlbWVudHMgb2YgbWUsIHBlcmhhcHMgdGhpcwogICAgICAgICAgICAjIGluZm9ybWF0aW9uIGlzIG5lZWRlZCBmb3IgZm9ybWVyIHN0YXRpYyBzdGF0cwogICAgICAgICAgICBGb3JtYXQgPT4gJFBhcmFte0Zvcm1hdH1bMF0sCiAgICAgICAgICAgIE1vZHVsZSA9PiAkUGFyYW17T2JqZWN0TW9kdWxlfSwKICAgICAgICApOwoKICAgICAgICAjIHdyaXRlIGNhY2hlIGlmIGNvbmZpZ3VyZWQKICAgICAgICBpZiAoICRQYXJhbXtDYWNoZX0gKSB7CiAgICAgICAgICAgICRTZWxmLT5fV3JpdGVSZXN1bHRDYWNoZSgKICAgICAgICAgICAgICAgIEdldFBhcmFtID0+IFwlR2V0UGFyYW0sCiAgICAgICAgICAgICAgICBTdGF0SUQgICA9PiAkUGFyYW17U3RhdElEfSwKICAgICAgICAgICAgICAgIERhdGEgICAgID0+IFxAUmVzdWx0LAogICAgICAgICAgICApOwogICAgICAgIH0KICAgIH0KICAgICRSZXN1bHRbMF1bMF0gPSAkUGFyYW17VGl0bGV9IC4gIiAiIC4gJFJlc3VsdFswXVswXTsKCiAgICByZXR1cm4gQFJlc3VsdDsKfQoKIz1pdGVtIF9HZW5lcmF0ZUR5bmFtaWNTdGF0cygpCiMKIyAgICB0YWtlIHRoZSBzdGF0IGNvbmZpZ3VyYXRpb24gYW5kIGdldCB0aGUgc3RhdCB0YWJsZQojCiMgICAgbXkgQFN0YXRBcnJheSA9ICRTdGF0c09iamVjdC0+X0dlbmVyYXRlRHluYW1pY1N0YXRzKAojICAgICAgICBPYmplY3RNb2R1bGUgICAgID0+ICdLZXJuZWw6OlN5c3RlbTo6U3RhdHM6OkR5bmFtaWM6OlRpY2tldCcsCiMgICAgICAgIE9iamVjdCAgICAgICAgICAgPT4gJ1RpY2tldCcsCiMgICAgICAgIFVzZUFzWHZhbHVlICAgICAgPT4gXFVzZUFzWHZhbHVlRWxlbWVudHMsCiMgICAgICAgIFVzZUFzVmFsdWVTZXJpZXMgPT4gXFVzZUFzVmFsdWVTZXJpZXNFbGVtZW50cywKIyAgICAgICAgVXNlQXNSZXN0cmljdGlvbiA9PiBcVXNlQXNSZXN0cmljdGlvbkVsZW1lbnRzLAojICAgICAgICBUaXRsZSAgICAgICAgICAgID0+ICdUaWNrZXRTdGF0JywKIyAgICAgICAgU3RhdElEICAgICAgICAgICA9PiAxMjMsCiMgICAgICAgIENhY2hlICAgICAgICAgICAgPT4gMSwgICAgICAjIG9wdGlvbmFsCiMgICAgKTsKIwojPWN1dAoKIyBzZWFyY2ggZm9yIGEgYmV0dGVyIHdheSB0byBjYWNoZSBzdGF0cyAoc2VlIGxpbmVzIGJlZm9yZSBTdGF0SUQgYW5kIENhY2hlKQoKc3ViIF9HZW5lcmF0ZUR5bmFtaWNTdGF0cyB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgIG15IEBIZWFkZXJMaW5lICAgICA9ICgpOwogICAgbXkgJFRpdGxlVGltZVN0YXJ0ID0gJyc7CiAgICBteSAkVGl0bGVUaW1lU3RvcCAgPSAnJzsKCiAgICBORUVEOgogICAgZm9yIG15ICROZWVkIChxdyhPYmplY3RNb2R1bGUgVXNlQXNYdmFsdWUgVXNlQXNWYWx1ZVNlcmllcyBUaXRsZSBPYmplY3QgU3RhdElEKSkgewogICAgICAgIG5leHQgTkVFRCBpZiAkUGFyYW17JE5lZWR9OwogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAiX0dlbmVyYXRlRHluYW1pY1N0YXRzOiBOZWVkICROZWVkISIKICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgIH0KCiAgICAjIGluY2x1ZGUgdGhlIG5lZWRlZCBkeW5hbWljIG9iamVjdAogICAgbXkgJE9iamVjdE1vZHVsZSA9ICRQYXJhbXtPYmplY3RNb2R1bGV9OwogICAgJFNlbGYtPntNYWluT2JqZWN0fS0+UmVxdWlyZSgkT2JqZWN0TW9kdWxlKTsKICAgIG15ICRTdGF0T2JqZWN0ID0gJE9iamVjdE1vZHVsZS0+bmV3KCAleyRTZWxmfSApOwoKICAgICMgZ2V0IHRoZSBzZWxlY3RlZCB2YWx1ZXMKICAgICMgcGVyaGFwcyBpIGNhbiBzcGxpdCB0aGUgU3RhdEdldCBmdW5jdGlvbiB0byBtYWtlIHRoaXMgbmVlZGxlc3MKICAgICMgUHJvYmxlbSwgaSBuZWVkIHRoZSBibG9jayBpbmZvcm1hdGlvbgogICAgbXkgJU5ld1BhcmFtID0gKCk7CgogICAgJE5ld1BhcmFte1RpdGxlfSAgICAgICAgPSAkUGFyYW17VGl0bGV9OwogICAgJE5ld1BhcmFte09iamVjdH0gICAgICAgPSAkUGFyYW17T2JqZWN0fTsKICAgICROZXdQYXJhbXtPYmplY3RNb2R1bGV9ID0gJFBhcmFte09iamVjdE1vZHVsZX07CgogICAgIyBzZWFyY2ggZm9yIGEgYmV0dGVyIHdheSB0byBjYWNoZSBzdGF0cyAoU3RhdElEIGFuZCBDYWNoZSkKICAgICROZXdQYXJhbXtTdGF0SUR9ID0gJFBhcmFte1N0YXRJRH07CiAgICAkTmV3UGFyYW17Q2FjaGV9ICA9ICRQYXJhbXtDYWNoZX07CiAgICBmb3IgbXkgJFVzZSAocXcoVXNlQXNSZXN0cmljdGlvbiBVc2VBc1h2YWx1ZSBVc2VBc1ZhbHVlU2VyaWVzKSkgewogICAgICAgIG15IEBBcnJheSA9IEB7ICRQYXJhbXskVXNlfSB9OwogICAgICAgIEVMRU1FTlQ6CiAgICAgICAgZm9yIG15ICRFbGVtZW50IChAQXJyYXkpIHsKICAgICAgICAgICAgbmV4dCBFTEVNRU5UIGlmICEkRWxlbWVudC0+e1NlbGVjdGVkfTsKCiAgICAgICAgICAgIGRlbGV0ZSAkRWxlbWVudC0+e1NlbGVjdGVkfTsKICAgICAgICAgICAgZGVsZXRlICRFbGVtZW50LT57Rml4ZWR9OwogICAgICAgICAgICBpZiAoICRFbGVtZW50LT57QmxvY2t9IGVxICdUaW1lJyApIHsKICAgICAgICAgICAgICAgIGRlbGV0ZSAkRWxlbWVudC0+e1RpbWVQZXJpb2RGb3JtYXR9OwogICAgICAgICAgICAgICAgaWYgKCAkRWxlbWVudC0+e1RpbWVSZWxhdGl2ZVVuaXR9ICkgewogICAgICAgICAgICAgICAgICAgIG15ICggJHMsICRtLCAkaCwgJEQsICRNLCAkWSApCiAgICAgICAgICAgICAgICAgICAgICAgID0gJFNlbGYtPntUaW1lT2JqZWN0fS0+U3lzdGVtVGltZTJEYXRlKAogICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1UaW1lID0+ICRTZWxmLT57VGltZU9iamVjdH0tPlN5c3RlbVRpbWUoKSwKICAgICAgICAgICAgICAgICAgICAgICAgKTsKCiAgICAgICAgICAgICAgICAgICAgbXkgJENvdW50ID0gJEVsZW1lbnQtPntUaW1lUmVsYXRpdmVDb3VudH0gPyAkRWxlbWVudC0+e1RpbWVSZWxhdGl2ZUNvdW50fSA6IDE7CgogICAgICAgICAgICAgICAgICAgICMgLTEgYmVjYXVzZSB0aGUgY3VycmVudCB0aW1lIHdpbGwgYmUgbm90IGNvdW50ZWQKICAgICAgICAgICAgICAgICAgICAkQ291bnQgLT0gMTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKCAkRWxlbWVudC0+e1RpbWVSZWxhdGl2ZVVuaXR9IGVxICdZZWFyJyApIHsKICAgICAgICAgICAgICAgICAgICAgICAgKCAkWSwgJE0sICREICkgPSBBZGRfRGVsdGFfWU1EKCAkWSwgJE0sICRELCAtMSwgMCwgMCApOwogICAgICAgICAgICAgICAgICAgICAgICAkRWxlbWVudC0+e1RpbWVTdG9wfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPSBzcHJpbnRmKCAiJTA0ZC0lMDJkLSUwMmQgJTAyZDolMDJkOiUwMmQiLCAkWSwgMTIsIDMxLCAyMywgNTksIDU5ICk7CiAgICAgICAgICAgICAgICAgICAgICAgICggJFksICRNLCAkRCApID0gQWRkX0RlbHRhX1lNRCggJFksICRNLCAkRCwgLSRDb3VudCwgMCwgMCApOwogICAgICAgICAgICAgICAgICAgICAgICAkRWxlbWVudC0+e1RpbWVTdGFydH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gc3ByaW50ZiggIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDolMDJkIiwgJFksIDEsIDEsIDAsIDAsIDAgKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzaWYgKCAkRWxlbWVudC0+e1RpbWVSZWxhdGl2ZVVuaXR9IGVxICdNb250aCcgKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICggJFksICRNLCAkRCApID0gQWRkX0RlbHRhX1lNRCggJFksICRNLCAkRCwgMCwgLTEsIDAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgJEVsZW1lbnQtPntUaW1lU3RvcH0gPSBzcHJpbnRmKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDolMDJkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRZLCAkTSwgRGF5c19pbl9Nb250aCggJFksICRNICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAyMywgNTksIDU5CiAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICAgICggJFksICRNLCAkRCApID0gQWRkX0RlbHRhX1lNRCggJFksICRNLCAkRCwgMCwgLSRDb3VudCwgMCApOwogICAgICAgICAgICAgICAgICAgICAgICAkRWxlbWVudC0+e1RpbWVTdGFydH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gc3ByaW50ZiggIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDolMDJkIiwgJFksICRNLCAxLCAwLCAwLCAwICk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2lmICggJEVsZW1lbnQtPntUaW1lUmVsYXRpdmVVbml0fSBlcSAnRGF5JyApIHsKICAgICAgICAgICAgICAgICAgICAgICAgKCAkWSwgJE0sICREICkgPSBBZGRfRGVsdGFfWU1EKCAkWSwgJE0sICRELCAwLCAwLCAtMSApOwogICAgICAgICAgICAgICAgICAgICAgICAkRWxlbWVudC0+e1RpbWVTdG9wfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPSBzcHJpbnRmKCAiJTA0ZC0lMDJkLSUwMmQgJTAyZDolMDJkOiUwMmQiLCAkWSwgJE0sICRELCAyMywgNTksIDU5ICk7CiAgICAgICAgICAgICAgICAgICAgICAgICggJFksICRNLCAkRCApID0gQWRkX0RlbHRhX1lNRCggJFksICRNLCAkRCwgMCwgMCwgLSRDb3VudCApOwogICAgICAgICAgICAgICAgICAgICAgICAkRWxlbWVudC0+e1RpbWVTdGFydH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gc3ByaW50ZiggIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDolMDJkIiwgJFksICRNLCAkRCwgMCwgMCwgMCApOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNpZiAoICRFbGVtZW50LT57VGltZVJlbGF0aXZlVW5pdH0gZXEgJ0hvdXInICkgewogICAgICAgICAgICAgICAgICAgICAgICAoICRZLCAkTSwgJEQsICRoLCAkbSwgJHMgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUyggJFksICRNLCAkRCwgJGgsICRtLCAkcywgMCwgLTEsIDAsIDAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgJEVsZW1lbnQtPntUaW1lU3RvcH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gc3ByaW50ZiggIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDolMDJkIiwgJFksICRNLCAkRCwgJGgsIDU5LCA1OSApOwogICAgICAgICAgICAgICAgICAgICAgICAoICRZLCAkTSwgJEQsICRoLCAkbSwgJHMgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUyggJFksICRNLCAkRCwgJGgsICRtLCAkcywgMCwgLSRDb3VudCwgMCwgMCApOwogICAgICAgICAgICAgICAgICAgICAgICAkRWxlbWVudC0+e1RpbWVTdGFydH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gc3ByaW50ZiggIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDolMDJkIiwgJFksICRNLCAkRCwgJGgsIDAsIDAgKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzaWYgKCAkRWxlbWVudC0+e1RpbWVSZWxhdGl2ZVVuaXR9IGVxICdNaW51dGUnICkgewogICAgICAgICAgICAgICAgICAgICAgICAoICRZLCAkTSwgJEQsICRoLCAkbSwgJHMgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUyggJFksICRNLCAkRCwgJGgsICRtLCAkcywgMCwgMCwgLTEsIDAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgJEVsZW1lbnQtPntUaW1lU3RvcH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gc3ByaW50ZiggIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDolMDJkIiwgJFksICRNLCAkRCwgJGgsICRtLCA1OSApOwogICAgICAgICAgICAgICAgICAgICAgICAoICRZLCAkTSwgJEQsICRoLCAkbSwgJHMgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUyggJFksICRNLCAkRCwgJGgsICRtLCAkcywgMCwgMCwgLSRDb3VudCwgMCApOwogICAgICAgICAgICAgICAgICAgICAgICAkRWxlbWVudC0+e1RpbWVTdGFydH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gc3ByaW50ZiggIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDolMDJkIiwgJFksICRNLCAkaCwgJG0sIDAsIDAgKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzaWYgKCAkRWxlbWVudC0+e1RpbWVSZWxhdGl2ZVVuaXR9IGVxICdTZWNvbmQnICkgewogICAgICAgICAgICAgICAgICAgICAgICAoICRZLCAkTSwgJEQsICRoLCAkbSwgJHMgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUyggJFksICRNLCAkRCwgJGgsICRtLCAkcywgMCwgMCwgMCwgLTEgKTsKICAgICAgICAgICAgICAgICAgICAgICAgJEVsZW1lbnQtPntUaW1lU3RvcH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gc3ByaW50ZiggIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDolMDJkIiwgJFksICRNLCAkRCwgJGgsICRtLCAkcyApOwogICAgICAgICAgICAgICAgICAgICAgICAoICRZLCAkTSwgJEQsICRoLCAkbSwgJHMgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUyggJFksICRNLCAkRCwgJGgsICRtLCAkcywgMCwgMCwgMCwgLSRDb3VudCApOwogICAgICAgICAgICAgICAgICAgICAgICAkRWxlbWVudC0+e1RpbWVTdGFydH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gc3ByaW50ZiggIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDolMDJkIiwgJFksICRNLCAkRCwgJGgsICRtLCAkcyApOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBkZWxldGUgJEVsZW1lbnQtPntUaW1lUmVsYXRpdmVVbml0fTsKICAgICAgICAgICAgICAgICAgICBkZWxldGUgJEVsZW1lbnQtPntUaW1lUmVsYXRpdmVDb3VudH07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkVGl0bGVUaW1lU3RhcnQgPSAkRWxlbWVudC0+e1RpbWVTdGFydH07CiAgICAgICAgICAgICAgICAkVGl0bGVUaW1lU3RvcCAgPSAkRWxlbWVudC0+e1RpbWVTdG9wfTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgIyBTZWxlY3QgQWxsIGZ1bmN0aW9uIG5lZWRlZCBmcm9tIG1rU3RhdHMucGwgYW5kIGZpeGVkIHZhbHVlcyBvZiB0aGUgZnJvbnRlbmQKICAgICAgICAgICAgZWxzaWYgKCAhJEVsZW1lbnQtPntTZWxlY3RlZFZhbHVlc31bMF0gKSB7CiAgICAgICAgICAgICAgICBteSBAVmFsdWVzID0ga2V5cyggJXsgJEVsZW1lbnQtPntWYWx1ZXN9IH0gKTsKICAgICAgICAgICAgICAgICRFbGVtZW50LT57U2VsZWN0ZWRWYWx1ZXN9ID0gXEBWYWx1ZXM7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcHVzaCBAeyAkTmV3UGFyYW17JFVzZX0gfSwgJEVsZW1lbnQ7CiAgICAgICAgfQogICAgfQoKICAgICVQYXJhbSA9ICVOZXdQYXJhbTsKCiAgICAjIGdldCBhbGwgcmVzdHJpY3Rpb25zIGZvciB0aGUgc2VhcmNoCiAgICBteSAlUmVzdHJpY3Rpb25BdHRyaWJ1dGUgPSAoKTsKICAgIGZvciBteSAkUmVzdHJpY3Rpb25QYXJ0ICggQHsgJFBhcmFte1VzZUFzUmVzdHJpY3Rpb259IH0gKSB7CiAgICAgICAgbXkgJEVsZW1lbnQgPSAkUmVzdHJpY3Rpb25QYXJ0LT57RWxlbWVudH07CiAgICAgICAgaWYgKCAkUmVzdHJpY3Rpb25QYXJ0LT57QmxvY2t9IGVxICdJbnB1dEZpZWxkJyApIHsKICAgICAgICAgICAgJFJlc3RyaWN0aW9uQXR0cmlidXRleyRFbGVtZW50fSA9ICRSZXN0cmljdGlvblBhcnQtPntTZWxlY3RlZFZhbHVlc31bMF07CiAgICAgICAgfQogICAgICAgIGVsc2lmICggJFJlc3RyaWN0aW9uUGFydC0+e0Jsb2NrfSBlcSAnU2VsZWN0RmllbGQnICkgewogICAgICAgICAgICAkUmVzdHJpY3Rpb25BdHRyaWJ1dGV7JEVsZW1lbnR9ID0gJFJlc3RyaWN0aW9uUGFydC0+e1NlbGVjdGVkVmFsdWVzfVswXTsKICAgICAgICB9CiAgICAgICAgZWxzaWYgKCAkUmVzdHJpY3Rpb25QYXJ0LT57QmxvY2t9IGVxICdUaW1lJyApIHsKICAgICAgICAgICAgJFJlc3RyaWN0aW9uQXR0cmlidXRleyAkUmVzdHJpY3Rpb25QYXJ0LT57VmFsdWVzfXtUaW1lU3RvcH0gfQogICAgICAgICAgICAgICAgPSAkUmVzdHJpY3Rpb25QYXJ0LT57VGltZVN0b3B9OwogICAgICAgICAgICAkUmVzdHJpY3Rpb25BdHRyaWJ1dGV7ICRSZXN0cmljdGlvblBhcnQtPntWYWx1ZXN9e1RpbWVTdGFydH0gfQogICAgICAgICAgICAgICAgPSAkUmVzdHJpY3Rpb25QYXJ0LT57VGltZVN0YXJ0fTsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICRSZXN0cmljdGlvbkF0dHJpYnV0ZXskRWxlbWVudH0gPSAkUmVzdHJpY3Rpb25QYXJ0LT57U2VsZWN0ZWRWYWx1ZXN9OwogICAgICAgIH0KICAgIH0KCiAgICAjIGdldCB0aGUgc2VsZWN0ZWQgWHZhbHVlCiAgICBteSAkWHZhbHVlID0ge307CiAgICBteSAoCiAgICAgICAgJFZTWWVhciwgICAgICRWU01vbnRoLCAgICAgJFZTRGF5LCAgICAgJFZTSG91ciwgICAgICRWU01pbnV0ZSwgICAgICRWU1NlY29uZCwKICAgICAgICAkVlNTdG9wWWVhciwgJFZTU3RvcE1vbnRoLCAkVlNTdG9wRGF5LCAkVlNTdG9wSG91ciwgJFZTU3RvcE1pbnV0ZSwgJFZTU3RvcFNlY29uZAogICAgKTsKICAgIG15ICRUaW1lQWJzb2x1dFN0b3BVbml4VGltZSA9IDA7CiAgICBteSAkQ291bnQgICAgICAgICAgICAgICAgICAgPSAwOwogICAgbXkgJE1vbnRoQXJyYXlSZWYgICAgICAgICAgID0gX01vbnRoQXJyYXkoKTsKCiAgICBteSAkRWxlbWVudCA9ICRQYXJhbXtVc2VBc1h2YWx1ZX1bMF07CiAgICBpZiAoICRFbGVtZW50LT57QmxvY2t9IGVxICdUaW1lJyApIHsKICAgICAgICBteSAoCiAgICAgICAgICAgICRZZWFyLCAgICRNb250aCwgICAkRGF5LCAgICRIb3VyLCAgICRNaW51dGUsICAgJFNlY29uZCwKICAgICAgICAgICAgJFRvWWVhciwgJFRvTW9udGgsICRUb0RheSwgJFRvSG91ciwgJFRvTWludXRlLCAkVG9TZWNvbmQKICAgICAgICApOwogICAgICAgIGlmICggJEVsZW1lbnQtPntUaW1lU3RhcnR9ID1+IG17XihcZFxkXGRcZCktKFxkXGQpLShcZFxkKVxzKFxkXGQpOihcZFxkKTooXGRcZCkkfWl4ICkgewogICAgICAgICAgICAkWWVhciAgID0gJFZTWWVhciAgID0gJDE7CiAgICAgICAgICAgICRNb250aCAgPSAkVlNNb250aCAgPSBpbnQgJDI7CiAgICAgICAgICAgICREYXkgICAgPSAkVlNEYXkgICAgPSBpbnQgJDM7CiAgICAgICAgICAgICRIb3VyICAgPSAkVlNIb3VyICAgPSBpbnQgJDQ7CiAgICAgICAgICAgICRNaW51dGUgPSAkVlNNaW51dGUgPSBpbnQgJDU7CiAgICAgICAgICAgICRTZWNvbmQgPSAkVlNTZWNvbmQgPSBpbnQgJDY7CiAgICAgICAgfQoKICAgICAgICAkVGltZUFic29sdXRTdG9wVW5peFRpbWUKICAgICAgICAgICAgPSAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSggU3RyaW5nID0+ICRFbGVtZW50LT57J1RpbWVTdG9wJ30gKTsKICAgICAgICBteSAkVGltZVN0YXJ0ID0gMDsKICAgICAgICBteSAkVGltZVN0b3AgID0gMDsKCiAgICAgICAgJENvdW50ID0gJEVsZW1lbnQtPntUaW1lU2NhbGVDb3VudH0gPyAkRWxlbWVudC0+e1RpbWVTY2FsZUNvdW50fSA6IDE7CgogICAgICAgICMgaW4gdGhlc2UgY29uc3RlbGxhdGlvbiAkQ291bnQgPiAxIGlzIG5vdCB1c2VmdWwhIQogICAgICAgIGlmICgKICAgICAgICAgICAgJFBhcmFte1VzZUFzVmFsdWVTZXJpZXN9WzBde0Jsb2NrfQogICAgICAgICAgICAmJiAkUGFyYW17VXNlQXNWYWx1ZVNlcmllc31bMF17QmxvY2t9IGVxICdUaW1lJwogICAgICAgICAgICAmJiAkRWxlbWVudC0+e1NlbGVjdGVkVmFsdWVzfVswXSBlcSAnRGF5JwogICAgICAgICAgICApCiAgICAgICAgewogICAgICAgICAgICAkQ291bnQgPSAxOwogICAgICAgIH0KCiAgICAgICAgaWYgKCAkRWxlbWVudC0+e1NlbGVjdGVkVmFsdWVzfVswXSBlcSAnTWludXRlJyApIHsKICAgICAgICAgICAgJFNlY29uZCA9IDA7CiAgICAgICAgfQogICAgICAgIGVsc2lmICggJEVsZW1lbnQtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ0hvdXInICkgewogICAgICAgICAgICAkU2Vjb25kID0gMDsKICAgICAgICAgICAgJE1pbnV0ZSA9IDA7CiAgICAgICAgfQogICAgICAgIGVsc2lmICggJEVsZW1lbnQtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ0RheScgKSB7CiAgICAgICAgICAgICRTZWNvbmQgPSAwOwogICAgICAgICAgICAkTWludXRlID0gMDsKICAgICAgICAgICAgJEhvdXIgICA9IDA7CiAgICAgICAgfQogICAgICAgIGVsc2lmICggJEVsZW1lbnQtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ01vbnRoJyApIHsKICAgICAgICAgICAgJFNlY29uZCA9IDA7CiAgICAgICAgICAgICRNaW51dGUgPSAwOwogICAgICAgICAgICAkSG91ciAgID0gMDsKICAgICAgICAgICAgJERheSAgICA9IDE7CiAgICAgICAgfQogICAgICAgIGVsc2lmICggJEVsZW1lbnQtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ1llYXInICkgewogICAgICAgICAgICAkU2Vjb25kID0gMDsKICAgICAgICAgICAgJE1pbnV0ZSA9IDA7CiAgICAgICAgICAgICRIb3VyICAgPSAwOwogICAgICAgICAgICAkRGF5ICAgID0gMTsKICAgICAgICAgICAgJE1vbnRoICA9IDE7CiAgICAgICAgfQoKICAgICAgICAjIEZJWE1FIFRpbWVoZWFkZXIgenVzYW1tZW5iYXVlbgogICAgICAgIHdoaWxlICgKICAgICAgICAgICAgISRUaW1lU3RvcAogICAgICAgICAgICB8fCAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSggU3RyaW5nID0+ICRUaW1lU3RvcCApCiAgICAgICAgICAgIDwgJFRpbWVBYnNvbHV0U3RvcFVuaXhUaW1lCiAgICAgICAgICAgICkKICAgICAgICB7CiAgICAgICAgICAgICRUaW1lU3RhcnQgPSBzcHJpbnRmKAogICAgICAgICAgICAgICAgIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDolMDJkIiwKICAgICAgICAgICAgICAgICRZZWFyLCAkTW9udGgsICREYXksICRIb3VyLCAkTWludXRlLCAkU2Vjb25kCiAgICAgICAgICAgICk7CiAgICAgICAgICAgIGlmICggJEVsZW1lbnQtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ1NlY29uZCcgKSB7CiAgICAgICAgICAgICAgICAoICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kICkKICAgICAgICAgICAgICAgICAgICA9IEFkZF9EZWx0YV9ESE1TKAogICAgICAgICAgICAgICAgICAgICRZZWFyLCAkTW9udGgsICREYXksICRIb3VyLCAkTWludXRlLCAkU2Vjb25kLCAwLCAwLCAwLAogICAgICAgICAgICAgICAgICAgICRDb3VudCAtIDEKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgcHVzaCgKICAgICAgICAgICAgICAgICAgICBASGVhZGVyTGluZSwKICAgICAgICAgICAgICAgICAgICBzcHJpbnRmKAogICAgICAgICAgICAgICAgICAgICAgICAiJTAyZDolMDJkOiUwMmQtJTAyZDolMDJkOiUwMmQiLAogICAgICAgICAgICAgICAgICAgICAgICAkSG91ciwgJE1pbnV0ZSwgJFNlY29uZCwgJFRvSG91ciwgJFRvTWludXRlLCAkVG9TZWNvbmQKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNpZiAoICRFbGVtZW50LT57U2VsZWN0ZWRWYWx1ZXN9WzBdIGVxICdNaW51dGUnICkgewogICAgICAgICAgICAgICAgKCAkVG9ZZWFyLCAkVG9Nb250aCwgJFRvRGF5LCAkVG9Ib3VyLCAkVG9NaW51dGUsICRUb1NlY29uZCApCiAgICAgICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUygKICAgICAgICAgICAgICAgICAgICAkWWVhciwgJE1vbnRoLCAkRGF5LCAkSG91ciwgJE1pbnV0ZSwgJFNlY29uZCwgMCwgMCwgJENvdW50LAogICAgICAgICAgICAgICAgICAgIC0xCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIHB1c2goCiAgICAgICAgICAgICAgICAgICAgQEhlYWRlckxpbmUsCiAgICAgICAgICAgICAgICAgICAgc3ByaW50ZigKICAgICAgICAgICAgICAgICAgICAgICAgIiUwMmQ6JTAyZDolMDJkLSUwMmQ6JTAyZDolMDJkIiwKICAgICAgICAgICAgICAgICAgICAgICAgJEhvdXIsICRNaW51dGUsICRTZWNvbmQsICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzaWYgKCAkRWxlbWVudC0+e1NlbGVjdGVkVmFsdWVzfVswXSBlcSAnSG91cicgKSB7CiAgICAgICAgICAgICAgICAoICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kICkKICAgICAgICAgICAgICAgICAgICA9IEFkZF9EZWx0YV9ESE1TKAogICAgICAgICAgICAgICAgICAgICRZZWFyLCAkTW9udGgsICREYXksICRIb3VyLCAkTWludXRlLCAkU2Vjb25kLCAwLCAkQ291bnQsIDAsCiAgICAgICAgICAgICAgICAgICAgLTEKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgcHVzaCgKICAgICAgICAgICAgICAgICAgICBASGVhZGVyTGluZSwKICAgICAgICAgICAgICAgICAgICBzcHJpbnRmKAogICAgICAgICAgICAgICAgICAgICAgICAiJTAyZDolMDJkOiUwMmQtJTAyZDolMDJkOiUwMmQiLAogICAgICAgICAgICAgICAgICAgICAgICAkSG91ciwgJE1pbnV0ZSwgJFNlY29uZCwgJFRvSG91ciwgJFRvTWludXRlLCAkVG9TZWNvbmQKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNpZiAoICRFbGVtZW50LT57U2VsZWN0ZWRWYWx1ZXN9WzBdIGVxICdEYXknICkgewogICAgICAgICAgICAgICAgKCAkVG9ZZWFyLCAkVG9Nb250aCwgJFRvRGF5LCAkVG9Ib3VyLCAkVG9NaW51dGUsICRUb1NlY29uZCApCiAgICAgICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUygKICAgICAgICAgICAgICAgICAgICAkWWVhciwgJE1vbnRoLCAkRGF5LCAkSG91ciwgJE1pbnV0ZSwgJFNlY29uZCwgJENvdW50LCAwLCAwLAogICAgICAgICAgICAgICAgICAgIC0xCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIG15ICREb3cgPSBEYXlfb2ZfV2VlayggJFllYXIsICRNb250aCwgJERheSApOwogICAgICAgICAgICAgICAgJERvdyA9IERheV9vZl9XZWVrX0FiYnJldmlhdGlvbigkRG93KTsKICAgICAgICAgICAgICAgIGlmICggJFRvRGF5IGVxICREYXkgKSB7CiAgICAgICAgICAgICAgICAgICAgcHVzaCBASGVhZGVyTGluZSwgIiREb3cgJERheSI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBwdXNoKAogICAgICAgICAgICAgICAgICAgICAgICBASGVhZGVyTGluZSwKICAgICAgICAgICAgICAgICAgICAgICAgc3ByaW50ZigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICIlMDJkLiUwMmQuJTA0ZCAtICUwMmQuJTAyZC4lMDRkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICREYXksICRNb250aCwgJFllYXIsICRUb0RheSwgJFRvTW9udGgsICRUb1llYXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2lmICggJEVsZW1lbnQtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ01vbnRoJyApIHsKICAgICAgICAgICAgICAgICggJFRvWWVhciwgJFRvTW9udGgsICRUb0RheSApID0gQWRkX0RlbHRhX1lNRCggJFllYXIsICRNb250aCwgJERheSwgMCwgJENvdW50LCAwICk7CiAgICAgICAgICAgICAgICAoICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kICkKICAgICAgICAgICAgICAgICAgICA9IEFkZF9EZWx0YV9ESE1TKAogICAgICAgICAgICAgICAgICAgICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRIb3VyLCAkTWludXRlLCAkU2Vjb25kLCAwLCAwLCAwLAogICAgICAgICAgICAgICAgICAgIC0xCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIGlmICggJFRvTW9udGggZXEgJE1vbnRoICkgewogICAgICAgICAgICAgICAgICAgIHB1c2ggQEhlYWRlckxpbmUsICIkTW9udGhBcnJheVJlZi0+WyRNb250aF0gJE1vbnRoIjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIHB1c2goCiAgICAgICAgICAgICAgICAgICAgICAgIEBIZWFkZXJMaW5lLAogICAgICAgICAgICAgICAgICAgICAgICBzcHJpbnRmKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIiUwMmQuJTAyZC4lMDRkIC0gJTAyZC4lMDJkLiUwNGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJERheSwgJE1vbnRoLCAkWWVhciwgJFRvRGF5LCAkVG9Nb250aCwgJFRvWWVhcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzaWYgKCAkRWxlbWVudC0+e1NlbGVjdGVkVmFsdWVzfVswXSBlcSAnWWVhcicgKSB7CiAgICAgICAgICAgICAgICAoICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXkgKSA9IEFkZF9EZWx0YV9ZTUQoICRZZWFyLCAkTW9udGgsICREYXksICRDb3VudCwgMCwgMCApOwogICAgICAgICAgICAgICAgKCAkVG9ZZWFyLCAkVG9Nb250aCwgJFRvRGF5LCAkVG9Ib3VyLCAkVG9NaW51dGUsICRUb1NlY29uZCApCiAgICAgICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUygKICAgICAgICAgICAgICAgICAgICAkVG9ZZWFyLCAkVG9Nb250aCwgJFRvRGF5LCAkSG91ciwgJE1pbnV0ZSwgJFNlY29uZCwgMCwgMCwgMCwKICAgICAgICAgICAgICAgICAgICAtMQogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICBpZiAoICRUb1llYXIgZXEgJFllYXIgKSB7CiAgICAgICAgICAgICAgICAgICAgcHVzaCBASGVhZGVyTGluZSwgJFllYXI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBwdXNoKAogICAgICAgICAgICAgICAgICAgICAgICBASGVhZGVyTGluZSwKICAgICAgICAgICAgICAgICAgICAgICAgc3ByaW50ZigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICIlMDJkLiUwMmQuJTA0ZCAtICUwMmQuJTAyZC4lMDRkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICREYXksICRNb250aCwgJFllYXIsICRUb0RheSwgJFRvTW9udGgsICRUb1llYXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgICggJFllYXIsICRNb250aCwgJERheSwgJEhvdXIsICRNaW51dGUsICRTZWNvbmQgKQogICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUygKICAgICAgICAgICAgICAgICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kLCAwLCAwLCAwLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgJFRpbWVTdG9wID0gc3ByaW50ZigKICAgICAgICAgICAgICAgICIlMDRkLSUwMmQtJTAyZCAlMDJkOiUwMmQ6JTAyZCIsCiAgICAgICAgICAgICAgICAkVG9ZZWFyLCAkVG9Nb250aCwgJFRvRGF5LCAkVG9Ib3VyLCAkVG9NaW51dGUsICRUb1NlY29uZAogICAgICAgICAgICApOwogICAgICAgICAgICBwdXNoKAogICAgICAgICAgICAgICAgQHsgJFh2YWx1ZS0+e1NlbGVjdGVkVmFsdWVzfSB9LAogICAgICAgICAgICAgICAgeyBUaW1lU3RhcnQgPT4gJFRpbWVTdGFydCwgVGltZVN0b3AgPT4gJFRpbWVTdG9wIH0KICAgICAgICAgICAgKTsKICAgICAgICB9CgogICAgICAgICMgRklYTUUgRU5ERSBUaW1lSGVhZGVyIHp1c2FtbWVuYmFlbgoKICAgICAgICAkWHZhbHVlLT57QmxvY2t9ICA9ICdUaW1lJzsKICAgICAgICAkWHZhbHVlLT57VmFsdWVzfSA9ICRFbGVtZW50LT57VmFsdWVzfTsKICAgIH0KCiAgICAjIGlmIEJsb2NrIGVxdWFsIE11bHRpU2VsZWN0RmllbGQsIFNlbGVjdGZpZWxkCiAgICBlbHNlIHsKICAgICAgICAkWHZhbHVlID0gJEVsZW1lbnQ7CgogICAgICAgICMgYnVpbGQgdGhlIGhlYWRlcmxpbmUKCiAgICAgICAgZm9yIG15ICRWYWx1ZW5hbWUgKCBAeyAkWHZhbHVlLT57U2VsZWN0ZWRWYWx1ZXN9IH0gKSB7CiAgICAgICAgICAgIHB1c2ggQEhlYWRlckxpbmUsICRYdmFsdWUtPntWYWx1ZXN9eyRWYWx1ZW5hbWV9OwogICAgICAgIH0KICAgIH0KCiAgICAjIGdldCB0aGUgdmFsdWUgc2VyaWVzCiAgICBteSAlVmFsdWVTZXJpZXMgICA9ICgpOwogICAgbXkgQEFycmF5U2VsZWN0ZWQgPSAoKTsKICAgIG15ICRDb2x1bW5OYW1lICAgID0gJyc7CgogICAgIyBnaXZlIG1lIGFsbCBwb3NzaWxiZSBlbGVtZW50cyBmb3IgVmFsdWUgU2VyaWVzCiAgICBSRUYxOgogICAgZm9yIG15ICRSZWYxICggQHsgJFBhcmFte1VzZUFzVmFsdWVTZXJpZXN9IH0gKSB7CgogICAgICAgICMgYWxsIGVsZW1lbnRzIHdoaWNoIGFyZSBzaG93biB3aXRoIG11bHRpc2VsZWN0ZmllbGRzCiAgICAgICAgaWYgKCAkUmVmMS0+e0Jsb2NrfSBuZSAnVGltZScgKSB7CiAgICAgICAgICAgIG15ICVTZWxlY3RlZFZhbHVlcyA9ICgpOwogICAgICAgICAgICBmb3IgbXkgJFJlZjIgKCBAeyAkUmVmMS0+e1NlbGVjdGVkVmFsdWVzfSB9ICkgewogICAgICAgICAgICAgICAgJFNlbGVjdGVkVmFsdWVzeyRSZWYyfSA9ICRSZWYxLT57VmFsdWVzfXskUmVmMn07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcHVzaCgKICAgICAgICAgICAgICAgIEBBcnJheVNlbGVjdGVkLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIFZhbHVlcyAgPT4gXCVTZWxlY3RlZFZhbHVlcywKICAgICAgICAgICAgICAgICAgICBFbGVtZW50ID0+ICRSZWYxLT57RWxlbWVudH0sCiAgICAgICAgICAgICAgICAgICAgTmFtZSAgICA9PiAkUmVmMS0+e05hbWV9LAogICAgICAgICAgICAgICAgICAgIEJsb2NrICAgPT4gJFJlZjEtPntCbG9ja30sCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG5leHQgUkVGMTsKICAgICAgICB9CgogICAgICAgICMgdGltZXNjYWxlIGVsZW1lbnRzIG5lZWQgYSBzcGVjaWFsIGhhbmRsaW5nCiAgICAgICAgQEhlYWRlckxpbmUgPSAoKTsKCiAgICAgICAgIyB0aGVzZSBhbGwgbWFrZXMgb25seSBzZW5zZSwgaWYgdGhlIGNvdW50IG9mIHhheGlzIGlzIDEKICAgICAgICBpZiAoICRSZWYxLT57U2VsZWN0ZWRWYWx1ZXN9WzBdIGVxICdZZWFyJyApIHsKICAgICAgICAgICAgaWYgKCAkQ291bnQgPT0gMSApIHsKICAgICAgICAgICAgICAgIGZvciAoIDEgLi4gMTIgKSB7CiAgICAgICAgICAgICAgICAgICAgcHVzaCBASGVhZGVyTGluZSwgIiRNb250aEFycmF5UmVmLT5bJF9dICRfIjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIGZvciAoIG15ICRNb250aCA9IDE7ICRNb250aCA8IDEyOyAkTW9udGggKz0gJENvdW50ICkgewogICAgICAgICAgICAgICAgICAgIHB1c2goCiAgICAgICAgICAgICAgICAgICAgICAgIEBIZWFkZXJMaW5lLAogICAgICAgICAgICAgICAgICAgICAgICAiJE1vbnRoQXJyYXlSZWYtPlskTW9udGhdIC0gJE1vbnRoQXJyYXlSZWYtPlskTW9udGggKyAkQ291bnQgLSAxXSIKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgICRWU1NlY29uZCAgID0gMDsKICAgICAgICAgICAgJFZTTWludXRlICAgPSAwOwogICAgICAgICAgICAkVlNIb3VyICAgICA9IDA7CiAgICAgICAgICAgICRWU0RheSAgICAgID0gMTsKICAgICAgICAgICAgJFZTTW9udGggICAgPSAxOwogICAgICAgICAgICAkQ29sdW1uTmFtZSA9ICdZZWFyJzsKICAgICAgICB9CiAgICAgICAgZWxzaWYgKCAkUmVmMS0+e1NlbGVjdGVkVmFsdWVzfVswXSBlcSAnTW9udGgnICkgewoKICAgICAgICAgICAgJENvdW50ID0gMTsKICAgICAgICAgICAgZm9yICggMSAuLiAzMSApIHsKICAgICAgICAgICAgICAgIHB1c2ggQEhlYWRlckxpbmUsICRfOwogICAgICAgICAgICB9CgogICAgICAgICAgICAkVlNTZWNvbmQgICA9IDA7CiAgICAgICAgICAgICRWU01pbnV0ZSAgID0gMDsKICAgICAgICAgICAgJFZTSG91ciAgICAgPSAwOwogICAgICAgICAgICAkVlNEYXkgICAgICA9IDE7CiAgICAgICAgICAgICRDb2x1bW5OYW1lID0gJ01vbnRoJzsKICAgICAgICB9CiAgICAgICAgZWxzaWYgKCAkUmVmMS0+e1NlbGVjdGVkVmFsdWVzfVswXSBlcSAnRGF5JyApIHsKICAgICAgICAgICAgZm9yICggbXkgJEhvdXIgPSAwOyAkSG91ciA8IDI0OyAkSG91ciArPSAkQ291bnQgKSB7CiAgICAgICAgICAgICAgICBwdXNoIEBIZWFkZXJMaW5lLCBzcHJpbnRmKCAiJTAyZDowMDowMC0lMDJkOjU5OjU5IiwgJEhvdXIsICRIb3VyICsgJENvdW50IC0gMSApOwogICAgICAgICAgICB9CiAgICAgICAgICAgICRWU1NlY29uZCAgID0gMDsKICAgICAgICAgICAgJFZTTWludXRlICAgPSAwOwogICAgICAgICAgICAkVlNIb3VyICAgICA9IDA7CiAgICAgICAgICAgICRDb2x1bW5OYW1lID0gJ0RheSc7CiAgICAgICAgfQogICAgICAgIGVsc2lmICggJFJlZjEtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ0hvdXInICkgewogICAgICAgICAgICBmb3IgKCBteSAkTWludXRlID0gMDsgJE1pbnV0ZSA8IDYwOyAkTWludXRlICs9ICRDb3VudCApIHsKICAgICAgICAgICAgICAgIG15ICRUaW1lID0gJ21pbiAnIC4gJE1pbnV0ZSAuICcgLSAnIC4gKCAkTWludXRlICsgJENvdW50ICk7CiAgICAgICAgICAgICAgICBwdXNoIEBIZWFkZXJMaW5lLCAkVGltZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAkVlNTZWNvbmQgICA9IDA7CiAgICAgICAgICAgICRWU01pbnV0ZSAgID0gMDsKICAgICAgICAgICAgJENvbHVtbk5hbWUgPSAnSG91cic7CiAgICAgICAgfQogICAgICAgIGVsc2lmICggJFJlZjEtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ01pbnV0ZScgKSB7CiAgICAgICAgICAgIGlmICggJENvdW50ID09IDEgKSB7CiAgICAgICAgICAgICAgICBmb3IgKCAwIC4uIDU5ICkgewogICAgICAgICAgICAgICAgICAgIG15ICRUaW1lID0gJ3NlYyAnIC4gJF87CiAgICAgICAgICAgICAgICAgICAgcHVzaCBASGVhZGVyTGluZSwgJFRpbWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICBmb3IgKCBteSAkU2Vjb25kID0gMDsgJFNlY29uZCA8IDYwOyAkU2Vjb25kICs9ICRDb3VudCApIHsKICAgICAgICAgICAgICAgICAgICBteSAkVGltZSA9ICdzZWMgJyAuICRTZWNvbmQgLiAnLScgLiAoICRTZWNvbmQgKyAkQ291bnQgKTsKICAgICAgICAgICAgICAgICAgICBwdXNoIEBIZWFkZXJMaW5lLCAkVGltZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAkVlNTZWNvbmQgICA9IDA7CiAgICAgICAgICAgICRDb2x1bW5OYW1lID0gJ01pbnV0ZSc7CiAgICAgICAgfQoKICAgICAgICBteSAkVGltZVN0YXJ0ICAgICA9IDA7CiAgICAgICAgbXkgJFRpbWVTdG9wICAgICAgPSAwOwogICAgICAgIG15ICRNb250aEFycmF5UmVmID0gX01vbnRoQXJyYXkoKTsKCiAgICAgICAgJENvdW50ID0gMTsKCiAgICAgICAgIyBHZW5lcmF0ZSB0aGUgdGltZSB2YWx1ZSBzZXJpZXMKICAgICAgICBteSAoICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kICk7CgogICAgICAgIGlmICggJFJlZjEtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ1llYXInICkgewogICAgICAgICAgICB3aGlsZSAoCiAgICAgICAgICAgICAgICAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSggU3RyaW5nID0+ICRUaW1lU3RvcCApCiAgICAgICAgICAgICAgICA8ICRUaW1lQWJzb2x1dFN0b3BVbml4VGltZQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkVGltZVN0YXJ0ID0gc3ByaW50ZiggIiUwNGQtMDEtMDEgMDA6MDA6MDAiLCAkVlNZZWFyICk7CiAgICAgICAgICAgICAgICAoICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXkgKQogICAgICAgICAgICAgICAgICAgID0gQWRkX0RlbHRhX1lNRCggJFZTWWVhciwgJFZTTW9udGgsICRWU0RheSwgJENvdW50LCAwLCAwICk7CiAgICAgICAgICAgICAgICAoICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kICkKICAgICAgICAgICAgICAgICAgICA9IEFkZF9EZWx0YV9ESE1TKAogICAgICAgICAgICAgICAgICAgICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRWU0hvdXIsICRWU01pbnV0ZSwgJFZTU2Vjb25kLCAwLAogICAgICAgICAgICAgICAgICAgIDAsIDAsIC0xCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICRUaW1lU3RvcCA9IHNwcmludGYoICIlMDRkLTEyLTMxIDIzOjU5OjU5IiwgJFRvWWVhciApOwoKICAgICAgICAgICAgICAgICRWYWx1ZVNlcmllc3skVlNZZWFyfSA9IHsKICAgICAgICAgICAgICAgICAgICAkUmVmMS0+e1ZhbHVlc317VGltZVN0b3B9ICA9PiAkVGltZVN0b3AsCiAgICAgICAgICAgICAgICAgICAgJFJlZjEtPntWYWx1ZXN9e1RpbWVTdGFydH0gPT4gJFRpbWVTdGFydAogICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAoICRWU1llYXIsICRWU01vbnRoLCAkVlNEYXksICRWU0hvdXIsICRWU01pbnV0ZSwgJFZTU2Vjb25kICkKICAgICAgICAgICAgICAgICAgICA9IEFkZF9EZWx0YV9ESE1TKAogICAgICAgICAgICAgICAgICAgICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kLCAwLAogICAgICAgICAgICAgICAgICAgIDAsIDAsIDEKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2lmICggJFJlZjEtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ01vbnRoJyApIHsKICAgICAgICAgICAgd2hpbGUgKAogICAgICAgICAgICAgICAgJFNlbGYtPntUaW1lT2JqZWN0fS0+VGltZVN0YW1wMlN5c3RlbVRpbWUoIFN0cmluZyA9PiAkVGltZVN0b3AgKQogICAgICAgICAgICAgICAgPCAkVGltZUFic29sdXRTdG9wVW5peFRpbWUKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJFRpbWVTdGFydCA9IHNwcmludGYoICIlMDRkLSUwMmQtMDEgMDA6MDA6MDAiLCAkVlNZZWFyLCAkVlNNb250aCApOwogICAgICAgICAgICAgICAgKCAkVG9ZZWFyLCAkVG9Nb250aCwgJFRvRGF5ICkKICAgICAgICAgICAgICAgICAgICA9IEFkZF9EZWx0YV9ZTUQoICRWU1llYXIsICRWU01vbnRoLCAkVlNEYXksIDAsICRDb3VudCwgMCApOwogICAgICAgICAgICAgICAgKCAkVG9ZZWFyLCAkVG9Nb250aCwgJFRvRGF5LCAkVG9Ib3VyLCAkVG9NaW51dGUsICRUb1NlY29uZCApCiAgICAgICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUygKICAgICAgICAgICAgICAgICAgICAkVG9ZZWFyLCAkVG9Nb250aCwgJFRvRGF5LCAkVlNIb3VyLCAkVlNNaW51dGUsICRWU1NlY29uZCwgMCwKICAgICAgICAgICAgICAgICAgICAwLCAwLCAtMQogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAkVGltZVN0b3AgPSBzcHJpbnRmKCAiJTA0ZC0lMDJkLSUwMmQgMjM6NTk6NTkiLCAkVG9ZZWFyLCAkVG9Nb250aCwgJFRvRGF5ICk7CgogICAgICAgICAgICAgICAgIyAgICAgICAgICAgICAgICAgICAgaWYgKCRDb3VudCA9PSAxKSB7CiAgICAgICAgICAgICAgICAkVmFsdWVTZXJpZXN7CiAgICAgICAgICAgICAgICAgICAgJFZTWWVhciAuICctJwogICAgICAgICAgICAgICAgICAgICAgICAuIHNwcmludGYoICIlMDJkIiwgJFZTTW9udGggKSAuICcgJwogICAgICAgICAgICAgICAgICAgICAgICAuICRNb250aEFycmF5UmVmLT5bJFZTTW9udGhdCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgID0gewogICAgICAgICAgICAgICAgICAgICRSZWYxLT57VmFsdWVzfXtUaW1lU3RvcH0gID0+ICRUaW1lU3RvcCwKICAgICAgICAgICAgICAgICAgICAkUmVmMS0+e1ZhbHVlc317VGltZVN0YXJ0fSA9PiAkVGltZVN0YXJ0CiAgICAgICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAoICRWU1llYXIsICRWU01vbnRoLCAkVlNEYXksICRWU0hvdXIsICRWU01pbnV0ZSwgJFZTU2Vjb25kICkKICAgICAgICAgICAgICAgICAgICA9IEFkZF9EZWx0YV9ESE1TKAogICAgICAgICAgICAgICAgICAgICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kLCAwLAogICAgICAgICAgICAgICAgICAgIDAsIDAsIDEKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2lmICggJFJlZjEtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ0RheScgKSB7CiAgICAgICAgICAgIHdoaWxlICgKICAgICAgICAgICAgICAgICRTZWxmLT57VGltZU9iamVjdH0tPlRpbWVTdGFtcDJTeXN0ZW1UaW1lKCBTdHJpbmcgPT4gJFRpbWVTdG9wICkKICAgICAgICAgICAgICAgIDwgJFRpbWVBYnNvbHV0U3RvcFVuaXhUaW1lCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRUaW1lU3RhcnQgPSBzcHJpbnRmKCAiJTA0ZC0lMDJkLSUwMmQgMDA6MDA6MDAiLCAkVlNZZWFyLCAkVlNNb250aCwgJFZTRGF5ICk7CiAgICAgICAgICAgICAgICAoICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kICkKICAgICAgICAgICAgICAgICAgICA9IEFkZF9EZWx0YV9ESE1TKAogICAgICAgICAgICAgICAgICAgICRWU1llYXIsICRWU01vbnRoLCAkVlNEYXksICRWU0hvdXIsICRWU01pbnV0ZSwgJFZTU2Vjb25kLAogICAgICAgICAgICAgICAgICAgICRDb3VudCwgMCwgMCwgLTEKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgJFRpbWVTdG9wID0gc3ByaW50ZiggIiUwNGQtJTAyZC0lMDJkIDIzOjU5OjU5IiwgJFRvWWVhciwgJFRvTW9udGgsICRUb0RheSApOwoKICAgICAgICAgICAgICAgICMgICAgICAgICAgICAgICAgICAgIGlmICgkQ291bnQgPT0gMSkgewogICAgICAgICAgICAgICAgJFZhbHVlU2VyaWVzeyBzcHJpbnRmKCAiJTA0ZC0lMDJkLSUwMmQiLCAkVlNZZWFyLCAkVlNNb250aCwgJFZTRGF5ICkgfSA9IHsKICAgICAgICAgICAgICAgICAgICAkUmVmMS0+e1ZhbHVlc317VGltZVN0b3B9ICA9PiAkVGltZVN0b3AsCiAgICAgICAgICAgICAgICAgICAgJFJlZjEtPntWYWx1ZXN9e1RpbWVTdGFydH0gPT4gJFRpbWVTdGFydAogICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAoICRWU1llYXIsICRWU01vbnRoLCAkVlNEYXksICRWU0hvdXIsICRWU01pbnV0ZSwgJFZTU2Vjb25kICkKICAgICAgICAgICAgICAgICAgICA9IEFkZF9EZWx0YV9ESE1TKAogICAgICAgICAgICAgICAgICAgICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kLCAwLAogICAgICAgICAgICAgICAgICAgIDAsIDAsIDEKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2lmICggJFJlZjEtPntTZWxlY3RlZFZhbHVlc31bMF0gZXEgJ0hvdXInICkgewogICAgICAgICAgICB3aGlsZSAoCiAgICAgICAgICAgICAgICAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSggU3RyaW5nID0+ICRUaW1lU3RvcCApCiAgICAgICAgICAgICAgICA8ICRUaW1lQWJzb2x1dFN0b3BVbml4VGltZQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkVGltZVN0YXJ0CiAgICAgICAgICAgICAgICAgICAgPSBzcHJpbnRmKCAiJTA0ZC0lMDJkLSUwMmQgJTAyZDowMDowMCIsICRWU1llYXIsICRWU01vbnRoLCAkVlNEYXksICRWU0hvdXIgKTsKICAgICAgICAgICAgICAgICggJFRvWWVhciwgJFRvTW9udGgsICRUb0RheSwgJFRvSG91ciwgJFRvTWludXRlLCAkVG9TZWNvbmQgKQogICAgICAgICAgICAgICAgICAgID0gQWRkX0RlbHRhX0RITVMoCiAgICAgICAgICAgICAgICAgICAgJFZTWWVhciwgJFZTTW9udGgsICRWU0RheSwgJFZTSG91ciwgJFZTTWludXRlLCAkVlNTZWNvbmQsIDAsCiAgICAgICAgICAgICAgICAgICAgJENvdW50LCAwLCAtMQogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAkVGltZVN0b3AKICAgICAgICAgICAgICAgICAgICA9IHNwcmludGYoICIlMDRkLSUwMmQtJTAyZCAlMDJkOjU5OjU5IiwgJFRvWWVhciwgJFRvTW9udGgsICRUb0RheSwgJFRvSG91ciApOwogICAgICAgICAgICAgICAgJFZhbHVlU2VyaWVzewogICAgICAgICAgICAgICAgICAgIHNwcmludGYoCiAgICAgICAgICAgICAgICAgICAgICAgICIlMDRkLSUwMmQtJTAyZCAlMDJkOjAwOjAwIC0gJTAyZDo1OTo1OSIsCiAgICAgICAgICAgICAgICAgICAgICAgICRWU1llYXIsICRWU01vbnRoLCAkVlNEYXksICRWU0hvdXIsICRUb0hvdXIKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICA9IHsKICAgICAgICAgICAgICAgICAgICAkUmVmMS0+e1ZhbHVlc317VGltZVN0b3B9ICA9PiAkVGltZVN0b3AsCiAgICAgICAgICAgICAgICAgICAgJFJlZjEtPntWYWx1ZXN9e1RpbWVTdGFydH0gPT4gJFRpbWVTdGFydAogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAoICRWU1llYXIsICRWU01vbnRoLCAkVlNEYXksICRWU0hvdXIsICRWU01pbnV0ZSwgJFZTU2Vjb25kICkKICAgICAgICAgICAgICAgICAgICA9IEFkZF9EZWx0YV9ESE1TKAogICAgICAgICAgICAgICAgICAgICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kLCAwLAogICAgICAgICAgICAgICAgICAgIDAsIDAsIDEKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBlbHNpZiAoICRSZWYxLT57U2VsZWN0ZWRWYWx1ZXN9WzBdIGVxICdNaW51dGUnICkgewogICAgICAgICAgICB3aGlsZSAoCiAgICAgICAgICAgICAgICAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSggU3RyaW5nID0+ICRUaW1lU3RvcCApCiAgICAgICAgICAgICAgICA8ICRUaW1lQWJzb2x1dFN0b3BVbml4VGltZQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkVGltZVN0YXJ0ID0gc3ByaW50ZigKICAgICAgICAgICAgICAgICAgICAiJTA0ZC0lMDJkLSUwMmQgJTAyZDolMDJkOjAwIiwKICAgICAgICAgICAgICAgICAgICAkVlNZZWFyLCAkVlNNb250aCwgJFZTRGF5LCAkVlNIb3VyLCAkVlNNaW51dGUKICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAoICRUb1llYXIsICRUb01vbnRoLCAkVG9EYXksICRUb0hvdXIsICRUb01pbnV0ZSwgJFRvU2Vjb25kICkKICAgICAgICAgICAgICAgICAgICA9IEFkZF9EZWx0YV9ESE1TKAogICAgICAgICAgICAgICAgICAgICRWU1llYXIsICRWU01vbnRoLCAkVlNEYXksICRWU0hvdXIsICRWU01pbnV0ZSwgJFZTU2Vjb25kLCAwLAogICAgICAgICAgICAgICAgICAgIDAsICRDb3VudCwgLTEKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgJFRpbWVTdG9wID0gc3ByaW50ZigKICAgICAgICAgICAgICAgICAgICAiJTA0ZC0lMDJkLSUwMmQgJTAyZDolMDJkOjU5IiwKICAgICAgICAgICAgICAgICAgICAkVG9ZZWFyLCAkVG9Nb250aCwgJFRvRGF5LCAkVG9Ib3VyLCAkVG9NaW51dGUKICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAkVmFsdWVTZXJpZXN7CiAgICAgICAgICAgICAgICAgICAgc3ByaW50ZigKICAgICAgICAgICAgICAgICAgICAgICAgIiUwNGQtJTAyZC0lMDJkICUwMmQ6JTAyZDowMCAtICUwMmQ6JTAyZDo1OSIsCiAgICAgICAgICAgICAgICAgICAgICAgICRWU1llYXIsICRWU01vbnRoLCAkVlNEYXksICRWU0hvdXIsICRWU01pbnV0ZSwgJFRvSG91ciwgJFRvTWludXRlCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgPSB7CiAgICAgICAgICAgICAgICAgICAgJFJlZjEtPntWYWx1ZXN9e1RpbWVTdG9wfSAgPT4gJFRpbWVTdG9wLAogICAgICAgICAgICAgICAgICAgICRSZWYxLT57VmFsdWVzfXtUaW1lU3RhcnR9ID0+ICRUaW1lU3RhcnQKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgKCAkVlNZZWFyLCAkVlNNb250aCwgJFZTRGF5LCAkVlNIb3VyLCAkVlNNaW51dGUsICRWU1NlY29uZCApCiAgICAgICAgICAgICAgICAgICAgPSBBZGRfRGVsdGFfREhNUygKICAgICAgICAgICAgICAgICAgICAkVG9ZZWFyLCAkVG9Nb250aCwgJFRvRGF5LCAkVG9Ib3VyLCAkVG9NaW51dGUsICRUb1NlY29uZCwgMCwKICAgICAgICAgICAgICAgICAgICAwLCAwLCAxCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgfQoKICAgICAgICB9CiAgICB9CgogICAgIyBtZXJnZSB0aGUgYXJyYXkgaWYgdHdvIGVsZW1lbnRzIGZvciB0aGUgdmFsdWVzZXJpZXMgYXJlIGF2aWFsYWJsZQogICAgS0VZOgogICAgZm9yIG15ICRLZXkgKCBrZXlzICV7ICRBcnJheVNlbGVjdGVkWzBde1ZhbHVlc30gfSApIHsKICAgICAgICBteSAkVmFsdWUwOwogICAgICAgIGlmICggJEFycmF5U2VsZWN0ZWRbMF17QmxvY2t9IGVxICdTZWxlY3RGaWVsZCcgKSB7CiAgICAgICAgICAgICRWYWx1ZTAgPSAkS2V5OwogICAgICAgIH0KICAgICAgICBlbHNpZiAoICRBcnJheVNlbGVjdGVkWzBde0Jsb2NrfSBlcSAnTXVsdGlTZWxlY3RGaWVsZCcgKSB7CiAgICAgICAgICAgICRWYWx1ZTAgPSBbJEtleV07CiAgICAgICAgfQoKICAgICAgICBpZiAoICEkQXJyYXlTZWxlY3RlZFsxXSApIHsKICAgICAgICAgICAgJFZhbHVlU2VyaWVzeyAkQXJyYXlTZWxlY3RlZFswXXtWYWx1ZXN9eyRLZXl9IH0KICAgICAgICAgICAgICAgID0geyAkQXJyYXlTZWxlY3RlZFswXXtFbGVtZW50fSA9PiAkVmFsdWUwIH07CiAgICAgICAgICAgIG5leHQgS0VZOwogICAgICAgIH0KCiAgICAgICAgZm9yIG15ICRTdWJLZXkgKCBrZXlzICV7ICRBcnJheVNlbGVjdGVkWzFde1ZhbHVlc30gfSApIHsKICAgICAgICAgICAgbXkgJFZhbHVlMTsKICAgICAgICAgICAgaWYgKCAkQXJyYXlTZWxlY3RlZFsxXXtCbG9ja30gZXEgJ1NlbGVjdEZpZWxkJyApIHsKICAgICAgICAgICAgICAgICRWYWx1ZTEgPSAkU3ViS2V5OwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2lmICggJEFycmF5U2VsZWN0ZWRbMV17QmxvY2t9IGVxICdNdWx0aVNlbGVjdEZpZWxkJyApIHsKICAgICAgICAgICAgICAgICRWYWx1ZTEgPSBbJFN1YktleV07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgJFZhbHVlU2VyaWVzewogICAgICAgICAgICAgICAgJEFycmF5U2VsZWN0ZWRbMF17VmFsdWVzfXskS2V5fSAuICcgLSAnCiAgICAgICAgICAgICAgICAgICAgLiAkQXJyYXlTZWxlY3RlZFsxXXtWYWx1ZXN9eyRTdWJLZXl9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICA9IHsKICAgICAgICAgICAgICAgICRBcnJheVNlbGVjdGVkWzBde0VsZW1lbnR9ID0+ICRWYWx1ZTAsCiAgICAgICAgICAgICAgICAkQXJyYXlTZWxlY3RlZFsxXXtFbGVtZW50fSA9PiAkVmFsdWUxCiAgICAgICAgICAgICAgICB9OwogICAgICAgIH0KICAgIH0KCiAgICAjIFVzZSB0aGlzIGlmIG5vIHZhbHVlc2VyaWVzIGF2YWlsYWJsZQogICAgaWYgKCAhJVZhbHVlU2VyaWVzICkgewogICAgICAgICRWYWx1ZVNlcmllc3sgJFBhcmFte09iamVjdH0gLiAncycgfSA9IHVuZGVmOwogICAgfQoKICAgICMgZ2V0IHRoZSBmaXJzdCBjb2x1bW4gbmFtZSBpbiB0aGUgaGVhZGVybGluZQogICAgaWYgKCRDb2x1bW5OYW1lKSB7CiAgICAgICAgdW5zaGlmdCBASGVhZGVyTGluZSwgJENvbHVtbk5hbWU7CiAgICB9CiAgICBlbHNpZiAoICRBcnJheVNlbGVjdGVkWzFdICkgewogICAgICAgIHVuc2hpZnQoIEBIZWFkZXJMaW5lLCAkQXJyYXlTZWxlY3RlZFswXXtOYW1lfSAuICcgLSAnIC4gJEFycmF5U2VsZWN0ZWRbMV17TmFtZX0gKTsKICAgIH0KICAgIGVsc2lmICggJEFycmF5U2VsZWN0ZWRbMF0gKSB7CiAgICAgICAgdW5zaGlmdCggQEhlYWRlckxpbmUsICRBcnJheVNlbGVjdGVkWzBde05hbWV9IHx8ICcnICk7CiAgICB9CgogICAgIyBwdXNoIHRoZSBmaXJzdCBhcnJheSBlbGVtZW50cyBpbiB0aGUgU3RhdHNBcnJheQogICAgbXkgJFRpdGxlID0gJFBhcmFte1RpdGxlfTsKICAgIGlmICggJFRpdGxlVGltZVN0YXJ0ICYmICRUaXRsZVRpbWVTdG9wICkgewogICAgICAgICRUaXRsZSAuPSAiICRUaXRsZVRpbWVTdGFydC0kVGl0bGVUaW1lU3RvcCI7CiAgICB9CgogICAgIyBjcmVhdGUgdGhlIGNhY2hlIHN0cmluZwogICAgbXkgJENhY2hlU3RyaW5nID0gJFNlbGYtPl9HZXRDYWNoZVN0cmluZyglUGFyYW0pOwoKICAgICMgdGFrZSB0aGUgY2FjaGUgdmFsdWUgaWYgY29uZmlndXJlZCBhbmQgYXZhaWxhYmxlCiAgICBpZiAoICRQYXJhbXtDYWNoZX0gKSB7CiAgICAgICAgbXkgQFN0YXRBcnJheSA9ICRTZWxmLT5fR2V0UmVzdWx0Q2FjaGUoCiAgICAgICAgICAgIEZpbGVuYW1lID0+ICdTdGF0cycgLiAkUGFyYW17U3RhdElEfSAuICctJyAuICRDYWNoZVN0cmluZyAuICcuY2FjaGUnLAogICAgICAgICk7CgogICAgICAgIHJldHVybiBAU3RhdEFycmF5IGlmIEBTdGF0QXJyYXk7CiAgICB9CgogICAgIyBjcmVhdGUgdGhlIHRhYmxlIHN0cnVjdHVyZQogICAgbXkgJVRhYmxlU3RydWN0dXJlID0gKCk7CiAgICBmb3IgbXkgJFJvdyAoIHNvcnQga2V5cyAlVmFsdWVTZXJpZXMgKSB7CiAgICAgICAgbXkgQENlbGxzID0gKCk7CiAgICAgICAgZm9yIG15ICRDZWxsICggQHsgJFh2YWx1ZS0+e1NlbGVjdGVkVmFsdWVzfSB9ICkgeyAgICAjIGdldCBlYWNoIGNlbGwKICAgICAgICAgICAgJFZhbHVlU2VyaWVzeyRSb3d9IHx8PSB7fTsKICAgICAgICAgICAgbXkgJUF0dHJpYnV0ZXMgPSAoICV7ICRWYWx1ZVNlcmllc3skUm93fSB9LCAlUmVzdHJpY3Rpb25BdHRyaWJ1dGUgKTsKCiAgICAgICAgICAgICMgdGhlIGZvbGxvd2luZyBpcyBuZWNlc3NhcnkgaWYgYXMgeC1heGlzIGFuZCBhcyB2YWx1ZS1zZXJpZXMgdGltZSBpcyBzZWxlY3RlZAogICAgICAgICAgICBpZiAoICRYdmFsdWUtPntCbG9ja30gZXEgJ1RpbWUnICkgewogICAgICAgICAgICAgICAgbXkgJFRpbWVTdGFydCA9ICRYdmFsdWUtPntWYWx1ZXN9e1RpbWVTdGFydH07CiAgICAgICAgICAgICAgICBteSAkVGltZVN0b3AgID0gJFh2YWx1ZS0+e1ZhbHVlc317VGltZVN0b3B9OwogICAgICAgICAgICAgICAgaWYgKCAkVmFsdWVTZXJpZXN7JFJvd317JFRpbWVTdG9wfSAmJiAkVmFsdWVTZXJpZXN7JFJvd317JFRpbWVTdGFydH0gKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgICAgICAgICAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSggU3RyaW5nID0+ICRDZWxsLT57VGltZVN0b3B9ICkKICAgICAgICAgICAgICAgICAgICAgICAgPiAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0cmluZyA9PiAkVmFsdWVTZXJpZXN7JFJvd317JFRpbWVTdG9wfQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIHx8ICRTZWxmLT57VGltZU9iamVjdH0tPlRpbWVTdGFtcDJTeXN0ZW1UaW1lKCBTdHJpbmcgPT4gJENlbGwtPntUaW1lU3RhcnR9ICkKICAgICAgICAgICAgICAgICAgICAgICAgPCAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0cmluZyA9PiAkVmFsdWVTZXJpZXN7JFJvd317JFRpbWVTdGFydH0KICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBuZXh0OwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICRBdHRyaWJ1dGVzeyRUaW1lU3RvcH0gID0gJENlbGwtPntUaW1lU3RvcH07CiAgICAgICAgICAgICAgICAkQXR0cmlidXRlc3skVGltZVN0YXJ0fSA9ICRDZWxsLT57VGltZVN0YXJ0fTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNpZiAoICRYdmFsdWUtPntCbG9ja30gZXEgJ1NlbGVjdEZpZWxkJyApIHsKICAgICAgICAgICAgICAgICRBdHRyaWJ1dGVzeyAkWHZhbHVlLT57RWxlbWVudH0gfSA9ICRDZWxsOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgJEF0dHJpYnV0ZXN7ICRYdmFsdWUtPntFbGVtZW50fSB9ID0gWyRDZWxsXTsKICAgICAgICAgICAgfQogICAgICAgICAgICBwdXNoIEBDZWxscywgXCVBdHRyaWJ1dGVzOwogICAgICAgIH0KICAgICAgICAkVGFibGVTdHJ1Y3R1cmV7JFJvd30gPSBcQENlbGxzOwogICAgfQoKICAgIG15IEBEYXRhQXJyYXkgPSAoKTsKICAgIGlmICggJFN0YXRPYmplY3QtPmNhbignR2V0U3RhdFRhYmxlJykgKSB7CgogICAgICAgICMgZ2V0IHRoZSB3aG9sZSBzdGF0cyB0YWJsZQogICAgICAgIEBEYXRhQXJyYXkgPSAkU3RhdE9iamVjdC0+R2V0U3RhdFRhYmxlKAogICAgICAgICAgICBWYWx1ZVNlcmllcyAgICA9PiAkUGFyYW17VXNlQXNWYWx1ZVNlcmllc30sICAgICNcJVZhbHVlU2VyaWVzLAogICAgICAgICAgICBYVmFsdWUgICAgICAgICA9PiAkWHZhbHVlLAogICAgICAgICAgICBSZXN0cmljdGlvbnMgICA9PiBcJVJlc3RyaWN0aW9uQXR0cmlidXRlLAogICAgICAgICAgICBUYWJsZVN0cnVjdHVyZSA9PiBcJVRhYmxlU3RydWN0dXJlLAogICAgICAgICk7CiAgICB9CiAgICBlbHNlIHsKICAgICAgICBmb3IgbXkgJFJvdyAoIHNvcnQga2V5cyAlVGFibGVTdHJ1Y3R1cmUgKSB7CiAgICAgICAgICAgIG15IEBSZXN1bHRSb3cgPSAoJFJvdyk7CiAgICAgICAgICAgIGZvciBteSAkQ2VsbCAoIEB7ICRUYWJsZVN0cnVjdHVyZXskUm93fSB9ICkgewogICAgICAgICAgICAgICAgbXkgJFF1YW50aXR5ID0gJFN0YXRPYmplY3QtPkdldFN0YXRFbGVtZW50KCAleyRDZWxsfSApOwogICAgICAgICAgICAgICAgcHVzaCBAUmVzdWx0Um93LCAkUXVhbnRpdHk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcHVzaCBARGF0YUFycmF5LCBcQFJlc3VsdFJvdzsKICAgICAgICB9CiAgICB9CgogICAgIyBmaWxsIHVwIGVtcHR5IGFycmF5IGVsZW1lbnRzLCBlLmcgbW9udGggYXMgdmFsdWUgc2VyaWVzIChGZWJydWFyeSBoYXMgMjggZGF5IGFuZCBKYW51YXIgMzEpCiAgICBmb3IgbXkgJFJvdyAoQERhdGFBcnJheSkgewogICAgICAgIGZvciBteSAkSW5kZXggKCAxIC4uICQjSGVhZGVyTGluZSApIHsKICAgICAgICAgICAgaWYgKCAhZGVmaW5lZCAkUm93LT5bJEluZGV4XSApIHsKICAgICAgICAgICAgICAgICRSb3ctPlskSW5kZXhdID0gJyc7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgIyBSRU1BUks6IGl0IGNvdWxkIGJlIGFsc28gdXNlZnVsIHRvIHVzZSB0aGUgaW5kaXZpdWFsIHNvcnQgaWYgZGlmaW5lZAogICAgIyBzbyB5b3UgZG9uJ3QgbmVlZCB0aGlzIGZ1bmN0aW9uCiAgICBpZiAoICRTdGF0T2JqZWN0LT5jYW4oJ0dldEhlYWRlckxpbmUnKSApIHsKICAgICAgICBteSAkSGVhZGVyUmVmID0gJFN0YXRPYmplY3QtPkdldEhlYWRlckxpbmUoCiAgICAgICAgICAgIFhWYWx1ZSA9PiAkWHZhbHVlLAogICAgICAgICk7CgogICAgICAgIGlmICgkSGVhZGVyUmVmKSB7CiAgICAgICAgICAgIEBIZWFkZXJMaW5lID0gQHskSGVhZGVyUmVmfTsKICAgICAgICB9CiAgICB9CgogICAgbXkgQFN0YXRBcnJheSA9ICggWyRUaXRsZV0sIFxASGVhZGVyTGluZSwgQERhdGFBcnJheSApOwoKICAgIHJldHVybiBAU3RhdEFycmF5IGlmICEkUGFyYW17Q2FjaGV9OwoKICAgICMgY2hlY2sgaWYgd2Ugc2hvdWxkIGNhY2hlIHRoaXMgcmVzdWx0CiAgICAjIGdldCB0aGUgY3VycmVudCB0aW1lCiAgICBpZiAoICEkVGl0bGVUaW1lU3RhcnQgfHwgISRUaXRsZVRpbWVTdG9wICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlID0+CiAgICAgICAgICAgICAgICAiQ2FuJ3QgY2FjaGU6IFN0YXRJRCAkUGFyYW17U3RhdElEfSBoYXZlIG5vIHRpbWUgcGVyaW9kLCBzbyB5b3UgY2FuJ3QgY2FjaGUgdGhlIHN0YXQhIiwKICAgICAgICApOwogICAgICAgIHJldHVybiBAU3RhdEFycmF5OwogICAgfQoKICAgIGlmICgKICAgICAgICAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSggU3RyaW5nID0+ICRUaXRsZVRpbWVTdG9wICkKICAgICAgICA+ICRTZWxmLT57VGltZU9iamVjdH0tPlN5c3RlbVRpbWUoKQogICAgICAgICkKICAgIHsKCiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgIE1lc3NhZ2UgPT4KICAgICAgICAgICAgICAgICJDYW4ndCBjYWNoZSBTdGF0SUQgJFBhcmFte1N0YXRJRH06IFRoZSBzZWxlY3RlZCBlbmQgdGltZSBpcyBpbiB0aGUgZnV0dXJlISIsCiAgICAgICAgKTsKICAgICAgICByZXR1cm4gQFN0YXRBcnJheTsKICAgIH0KCiAgICAjIHdyaXRlIHRoZSBzdGF0cyBjYWNoZQogICAgJFNlbGYtPl9TZXRSZXN1bHRDYWNoZSgKICAgICAgICBGaWxlbmFtZSA9PiAnU3RhdHMnIC4gJFBhcmFte1N0YXRJRH0gLiAnLScgLiAkQ2FjaGVTdHJpbmcgLiAnLmNhY2hlJywKICAgICAgICBSZXN1bHQgICA9PiBcQFN0YXRBcnJheSwKICAgICk7CiAgICByZXR1cm4gQFN0YXRBcnJheTsKfQoKPWl0ZW0gR2VuZXJhdGVHcmFwaCgpCgptYWtlIGdyYXBoIGZyb20gcmVzdWx0IGFycmF5CgogICAgbXkgJEdyYXBoID0gJFN0YXRzT2JqZWN0LT5HZW5lcmF0ZUdyYXBoKAogICAgICAgIEFycmF5ICAgICAgICA9PiBcQFN0YXRBcnJheSwKICAgICAgICBHcmFwaFNpemUgICAgPT4gJzgwMHg2MDAnLAogICAgICAgIEhlYWRBcnJheVJlZiA9PiAkSGVhZEFycmF5UmVmLAogICAgICAgIFRpdGxlICAgICAgICA9PiAnQWxsIFRpY2tldHMgb2YgdGhlIG1vbnRoJywKICAgICAgICBGb3JtYXQgICAgICAgPT4gJ0dEOjpHcmFwaDo6bGluZXMnLAogICAgKTsKCj1jdXQKCnN1YiBHZW5lcmF0ZUdyYXBoIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBpZiBuZWVkIHBhcmFtcyBhcmUgYXZhaWxhYmxlCiAgICBmb3IgKHF3KEFycmF5IEdyYXBoU2l6ZSBIZWFkQXJyYXlSZWYgVGl0bGUgRm9ybWF0KSkgewogICAgICAgIGlmICggISRQYXJhbXskX30gKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKCBQcmlvcml0eSA9PiAnZXJyb3InLCBNZXNzYWdlID0+ICJHZW5lcmF0ZUdyYXBoOiBOZWVkICRfISIgKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgIH0KCiAgICBteSBAU3RhdEFycmF5ICAgID0gQHsgJFBhcmFte0FycmF5fSB9OwogICAgbXkgJEhlYWRBcnJheVJlZiA9ICRQYXJhbXtIZWFkQXJyYXlSZWZ9OwogICAgbXkgJEdEQmFja2VuZCAgICA9ICRQYXJhbXtGb3JtYXR9OwoKICAgICMgZGVsZXRlIFN1bUNvbCBhbmQgU3VtUm93IGlmIHByZXNlbnQKICAgIGlmICggJFN0YXRBcnJheVstMV1bMF0gZXEgJ1N1bScgKSB7CiAgICAgICAgcG9wIEBTdGF0QXJyYXk7CiAgICB9CiAgICBpZiAoICRIZWFkQXJyYXlSZWYtPlstMV0gZXEgJ1N1bScgKSB7CiAgICAgICAgcG9wIEB7JEhlYWRBcnJheVJlZn07CiAgICAgICAgZm9yIG15ICRSb3cgKEBTdGF0QXJyYXkpIHsKICAgICAgICAgICAgcG9wIEB7JFJvd307CiAgICAgICAgfQogICAgfQoKICAgICMgbG9hZCBnZCBtb2R1bGVzCiAgICBmb3IgbXkgJE1vZHVsZSAoICdHRCcsICdHRDo6R3JhcGgnLCAkR0RCYWNrZW5kICkgewogICAgICAgIGlmICggISRTZWxmLT57TWFpbk9iamVjdH0tPlJlcXVpcmUoJE1vZHVsZSkgKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgICAgIE1lc3NhZ2UgID0+ICJHZW5lcmF0ZUdyYXBoOiBOZWVkICRNb2R1bGUhIgogICAgICAgICAgICApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgfQoKICAgICMgcmVtb3ZlIGZpcnN0IHkveCBwb3NpdGlvbgogICAgbXkgJFhMYWJsZSA9IHNoaWZ0IEB7JEhlYWRBcnJheVJlZn07CgogICAgIyBnZXQgZmlyc3QgY29sIGZvciBsZWdlbmQKICAgIG15IEBZTGluZSA9ICgpOwogICAgZm9yIG15ICRUbXAgKEBTdGF0QXJyYXkpIHsKICAgICAgICBwdXNoIEBZTGluZSwgJFRtcC0+WzBdOwogICAgICAgIHNoaWZ0IEB7JFRtcH07CiAgICB9CgogICAgIyBidWlsZCBwbG90IGRhdGEKICAgIG15IEBQRGF0YSA9ICggJEhlYWRBcnJheVJlZiwgQFN0YXRBcnJheSApOwogICAgbXkgKCAkWFNpemUsICRZU2l6ZSApID0gc3BsaXQoIG17eH14LCAkUGFyYW17R3JhcGhTaXplfSApOwogICAgbXkgJGdyYXBoID0gJEdEQmFja2VuZC0+bmV3KCAkWFNpemUgfHwgNTUwLCAkWVNpemUgfHwgMzUwICk7CiAgICAkZ3JhcGgtPnNldCgKICAgICAgICB4X2xhYmVsID0+ICRYTGFibGUsCgogICAgICAgICMgICAgICAgIHlfbGFiZWwgPT4gJ1lMYWJsZScsCiAgICAgICAgdGl0bGUgPT4gJFBhcmFte1RpdGxlfSwKCiAgICAgICAgIyAgICAgICAgeV9tYXhfdmFsdWUgPT4gMjAsCiAgICAgICAgIyAgICAgICAgeV90aWNrX251bWJlciA9PiAxNiwKICAgICAgICAjICAgICAgICB5X2xhYmVsX3NraXAgPT4gNCwKICAgICAgICAjICAgICAgICB4X3RpY2tfbnVtYmVyID0+IDgsCiAgICAgICAgdF9tYXJnaW4gICAgPT4gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoIlN0YXRzOjpHcmFwaDo6dF9tYXJnaW4iKSAgICB8fCAxMCwKICAgICAgICBiX21hcmdpbiAgICA9PiAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgiU3RhdHM6OkdyYXBoOjpiX21hcmdpbiIpICAgIHx8IDEwLAogICAgICAgIGxfbWFyZ2luICAgID0+ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCJTdGF0czo6R3JhcGg6OmxfbWFyZ2luIikgICAgfHwgMTAsCiAgICAgICAgcl9tYXJnaW4gICAgPT4gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoIlN0YXRzOjpHcmFwaDo6cl9tYXJnaW4iKSAgICB8fCAyMCwKICAgICAgICBiZ2NsciAgICAgICA9PiAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgiU3RhdHM6OkdyYXBoOjpiZ2NsciIpICAgICAgIHx8ICd3aGl0ZScsCiAgICAgICAgdHJhbnNwYXJlbnQgPT4gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoIlN0YXRzOjpHcmFwaDo6dHJhbnNwYXJlbnQiKSB8fCAwLAogICAgICAgIGludGVybGFjZWQgID0+IDEsCiAgICAgICAgZmdjbHIgICAgICAgPT4gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoIlN0YXRzOjpHcmFwaDo6ZmdjbHIiKSAgICAgICB8fCAnYmxhY2snLAogICAgICAgIGJveGNsciAgICAgID0+ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCJTdGF0czo6R3JhcGg6OmJveGNsciIpICAgICAgfHwgJ3doaXRlJywKICAgICAgICBhY2NlbnRjbHIgICA9PiAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgiU3RhdHM6OkdyYXBoOjphY2NlbnRjbHIiKSAgIHx8ICdibGFjaycsCiAgICAgICAgc2hhZG93Y2xyICAgPT4gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoIlN0YXRzOjpHcmFwaDo6c2hhZG93Y2xyIikgICB8fCAnYmxhY2snLAogICAgICAgIGxlZ2VuZGNsciAgID0+ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCJTdGF0czo6R3JhcGg6OmxlZ2VuZGNsciIpICAgfHwgJ2JsYWNrJywKICAgICAgICB0ZXh0Y2xyICAgICA9PiAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgiU3RhdHM6OkdyYXBoOjp0ZXh0Y2xyIikgICAgIHx8ICdibGFjaycsCiAgICAgICAgZGNscnMgICAgICAgPT4gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoIlN0YXRzOjpHcmFwaDo6ZGNscnMiKQogICAgICAgICAgICB8fCBbCiAgICAgICAgICAgIHF3KHJlZCBncmVlbiBibHVlIHllbGxvdyBibGFjayBwdXJwbGUgb3JhbmdlIHBpbmsgbWFyaW5lIGN5YW4gbGdyYXkgbGJsdWUgbHllbGxvdyBsZ3JlZW4gbHJlZCBscHVycGxlIGxvcmFuZ2UgbGJyb3duKQogICAgICAgICAgICBdLAogICAgICAgIHhfdGlja19vZmZzZXQgICAgICAgPT4gMCwKICAgICAgICB4X2xhYmVsX3Bvc2l0aW9uICAgID0+IDEgLyAyLAogICAgICAgIHlfbGFiZWxfcG9zaXRpb24gICAgPT4gMSAvIDIsCiAgICAgICAgeF9sYWJlbHNfdmVydGljYWwgICA9PiAzMSwKICAgICAgICBsaW5lX3dpZHRoICAgICAgICAgID0+ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCJTdGF0czo6R3JhcGg6OmxpbmVfd2lkdGgiKSB8fCAxLAogICAgICAgIGxlZ2VuZF9wbGFjZW1lbnQgICAgPT4gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoIlN0YXRzOjpHcmFwaDo6bGVnZW5kX3BsYWNlbWVudCIpIHx8ICdCQycsCiAgICAgICAgbGVnZW5kX3NwYWNpbmcgICAgICA9PiAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgiU3RhdHM6OkdyYXBoOjpsZWdlbmRfc3BhY2luZyIpIHx8IDQsCiAgICAgICAgbGVnZW5kX21hcmtlcl93aWR0aCA9PiAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgiU3RhdHM6OkdyYXBoOjpsZWdlbmRfbWFya2VyX3dpZHRoIikKICAgICAgICAgICAgfHwgMTIsCiAgICAgICAgbGVnZW5kX21hcmtlcl9oZWlnaHQgPT4gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoIlN0YXRzOjpHcmFwaDo6bGVnZW5kX21hcmtlcl9oZWlnaHQiKQogICAgICAgICAgICB8fCA4LAogICAgKTsKCiAgICAjIHNldCBsZWdlbmQgKHktbGluZSkKICAgIGlmICggJFBhcmFte0Zvcm1hdH0gbmUgJ0dEOjpHcmFwaDo6cGllJyApIHsKICAgICAgICAkZ3JhcGgtPnNldF9sZWdlbmQoQFlMaW5lKTsKICAgIH0KCiAgICAjIHBsb3QgZ3JhcGgKICAgIG15ICRFeHQgPSAnJzsKICAgIGlmICggISRncmFwaC0+Y2FuKCdwbmcnKSApIHsKICAgICAgICAkRXh0ID0gJ3BuZyc7CiAgICB9CiAgICBlbHNlIHsKICAgICAgICAkRXh0ID0gJGdyYXBoLT5leHBvcnRfZm9ybWF0OwogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAiQ2FuJ3Qgd3JpdGUgcG5nISBXcml0ZTogJEV4dCIsCiAgICAgICAgKTsKICAgIH0KICAgIG15ICRDb250ZW50ID0gZXZhbCB7ICRncmFwaC0+cGxvdCggXEBQRGF0YSApLT4kRXh0KCkgfTsKICAgIHJldHVybiAkQ29udGVudDsKfQoKPWl0ZW0gQ29tcGxldGVuZXNzQ2hlY2soKQoKICAgIG15IEBOb3RpZnkgPSAkU3RhdHNPYmplY3QtPkNvbXBsZXRlbmVzc0NoZWNrKAogICAgICAgIFN0YXREYXRhID0+IFwlU3RhdERhdGEsCiAgICAgICAgU2VjdGlvbiA9PiAnQWxsJyB8fCAnU3BlY2lmaWNhdGlvbicgfHwgJ1ZhbHVlU2VyaWVzJyB8fCAnUmVzdHJpY3Rpb25zIHx8IFhheGlzJwogICAgKTsKCj1jdXQKCnN1YiBDb21wbGV0ZW5lc3NDaGVjayB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgIG15IEBOb3RpZnkgICAgICAgICA9ICgpOwogICAgbXkgQE5vdGlmeVNlbGVjdGVkID0gKCk7CiAgICBteSBASW5kZXhBcnJheSAgICAgPSAoKTsKCiAgICAkTm90aWZ5WzBdID0gewogICAgICAgIEluZm8gICAgID0+ICdQbGVhc2UgZmlsbCBvdXQgdGhlIHJlcXVpcmVkIGZpZWxkcyEnLAogICAgICAgIFByaW9yaXR5ID0+ICdFcnJvcicKICAgIH07CiAgICAkTm90aWZ5WzFdID0gewogICAgICAgIEluZm8gICAgID0+ICdQbGVhc2Ugc2VsZWN0IGEgZmlsZSEnLAogICAgICAgIFByaW9yaXR5ID0+ICdFcnJvcicKICAgIH07CiAgICAkTm90aWZ5WzJdID0gewogICAgICAgIEluZm8gICAgID0+ICdQbGVhc2Ugc2VsZWN0IGFuIG9iamVjdCEnLAogICAgICAgIFByaW9yaXR5ID0+ICdFcnJvcicKICAgIH07CiAgICAkTm90aWZ5WzNdID0gewogICAgICAgIEluZm8gICAgID0+ICdQbGVhc2Ugc2VsZWN0IGEgZ3JhcGggc2l6ZSEnLAogICAgICAgIFByaW9yaXR5ID0+ICdFcnJvcicKICAgIH07CiAgICAkTm90aWZ5WzRdID0gewogICAgICAgIEluZm8gICAgID0+ICdQbGVhc2Ugc2VsZWN0IG9uZSBlbGVtZW50IGZvciB0aGUgWC1heGlzIScsCiAgICAgICAgUHJpb3JpdHkgPT4gJ0Vycm9yJwogICAgfTsKICAgICROb3RpZnlbNl0gPSB7CiAgICAgICAgSW5mbyA9PgogICAgICAgICAgICAnUGxlYXNlIHNlbGVjdCBvbmx5IG9uZSBlbGVtZW50IG9yIHR1cm4gb2YgdGhlIGJ1dHRvbiBcJ0ZpeGVkXCcgd2hlcmUgdGhlIHNlbGVjdCBmaWVsZCBpcyBtYXJrZWQhJywKICAgICAgICBQcmlvcml0eSA9PiAnRXJyb3InCiAgICB9OwogICAgJE5vdGlmeVs3XSA9IHsKICAgICAgICBJbmZvICAgICA9PiAnSWYgeW91IHVzZSBhIGNoZWNrYm94IHlvdSBoYXZlIHRvIHNlbGVjdCBzb21lIGF0dHJpYnV0ZXMgb2YgdGhlIHNlbGVjdCBmaWVsZCEnLAogICAgICAgIFByaW9yaXR5ID0+ICdFcnJvcicKICAgIH07CiAgICAkTm90aWZ5WzhdID0gewogICAgICAgIEluZm8gPT4KICAgICAgICAgICAgJ1BsZWFzZSBpbnNlcnQgYSB2YWx1ZSBpbiB0aGUgc2VsZWN0ZWQgaW5wdXQgZmllbGQgb3IgdHVybiBvZmYgdGhlIFwnRml4ZWRcJyBjaGVja2JveCEnLAogICAgICAgIFByaW9yaXR5ID0+ICdFcnJvcicKICAgIH07CiAgICAkTm90aWZ5WzldID0gewogICAgICAgIEluZm8gICAgID0+ICdUaGUgc2VsZWN0ZWQgZW5kIHRpbWUgaXMgYmVmb3JlIHRoZSBzdGFydCB0aW1lIScsCiAgICAgICAgUHJpb3JpdHkgPT4gJ0Vycm9yJwogICAgfTsKICAgICROb3RpZnlbMTBdID0gewogICAgICAgIEluZm8gICAgID0+ICdZb3UgaGF2ZSB0byBzZWxlY3Qgb25lIG9yIG1vcmUgYXR0cmlidXRlcyBmcm9tIHRoZSBzZWxlY3QgZmllbGQhJywKICAgICAgICBQcmlvcml0eSA9PiAnRXJyb3InCiAgICB9OwogICAgJE5vdGlmeVsxMV0gPSB7CiAgICAgICAgSW5mbyAgICAgPT4gJ1RoZSBzZWxlY3RlZCBEYXRlIGlzblwndCB2YWxpZCEnLAogICAgICAgIFByaW9yaXR5ID0+ICdFcnJvcicKICAgIH07CiAgICAkTm90aWZ5WzEyXSA9IHsKICAgICAgICBJbmZvICAgICA9PiAnUGxlYXNlIHNlbGVjdCBvbmx5IG9uZSBvciB0d28gZWxlbWVudHMgdmlhIHRoZSBjaGVja2JveCEnLAogICAgICAgIFByaW9yaXR5ID0+ICdFcnJvcicKICAgIH07CiAgICAkTm90aWZ5WzEzXSA9IHsKICAgICAgICBJbmZvICAgICA9PiAnSWYgeW91IHVzZSBhIHRpbWUgc2NhbGUgZWxlbWVudCB5b3UgY2FuIG9ubHkgc2VsZWN0IG9uZSBlbGVtZW50IScsCiAgICAgICAgUHJpb3JpdHkgPT4gJ0Vycm9yJwogICAgfTsKICAgICROb3RpZnlbMTRdID0gewogICAgICAgIEluZm8gICAgID0+ICdZb3UgaGF2ZSBhbiBlcnJvciBpbiB5b3VyIHRpbWUgc2VsZWN0aW9uIScsCiAgICAgICAgUHJpb3JpdHkgPT4gJ0Vycm9yJwogICAgfTsKICAgICROb3RpZnlbMTVdID0gewogICAgICAgIEluZm8gICAgID0+ICdZb3VyIHJlcG9ydGluZyB0aW1lIGludGVydmFsIGlzIHRvIHNtYWxsLCBwbGVhc2UgdXNlIGEgbGFyZ2VyIHRpbWUgc2NhbGUhJywKICAgICAgICBQcmlvcml0eSA9PiAnRXJyb3InCiAgICB9OwogICAgJE5vdGlmeVsxNl0gPSB7CiAgICAgICAgSW5mbyAgICAgPT4gJ1RoZXJlIGlzIHNvbWV0aGluZyB3cm9uZyB3aXRoIHlvdXIgdGltZSBzY2FsZSBzZWxlY3Rpb24uIFBsZWFzZSBjaGVjayBpdCEnLAogICAgICAgIFByaW9yaXR5ID0+ICdFcnJvcicKICAgIH07CiAgICAkTm90aWZ5WzE3XSA9IHsKICAgICAgICBJbmZvICAgICA9PiAnWW91IGhhdmUgdG8gc2VsZWN0IGEgdGltZSBzY2FsZSBsaWtlIGRheSBvciBtb250aCEnLAogICAgICAgIFByaW9yaXR5ID0+ICdFcnJvcicKICAgIH07CgogICAgIyBjaGVjayBpZiBuZWVkIHBhcmFtcyBhcmUgYXZhaWxhYmxlCiAgICBORUVEOgogICAgZm9yIG15ICROZWVkIChxdyhTdGF0RGF0YSBTZWN0aW9uKSkgewogICAgICAgIG5leHQgTkVFRCBpZiAkUGFyYW17JE5lZWR9OwogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAiQ29tcGxldGVuZXNzQ2hlY2s6IE5lZWQgJE5lZWQiCiAgICAgICAgKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgbXkgJVN0YXREYXRhID0gJXsgJFBhcmFte1N0YXREYXRhfSB9OwogICAgaWYgKCAkUGFyYW17U2VjdGlvbn0gZXEgJ1NwZWNpZmljYXRpb24nIHx8ICRQYXJhbXtTZWN0aW9ufSBlcSAnQWxsJyApIHsKICAgICAgICBmb3IgKHF3KFRpdGxlIERlc2NyaXB0aW9uIFN0YXRUeXBlIFBlcm1pc3Npb24gRm9ybWF0IE9iamVjdE1vZHVsZSkpIHsKICAgICAgICAgICAgaWYgKCAhJFN0YXREYXRheyRffSApIHsKICAgICAgICAgICAgICAgIHB1c2ggQEluZGV4QXJyYXksIDA7CiAgICAgICAgICAgICAgICBsYXN0OwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICggJFN0YXREYXRhe1N0YXRUeXBlfSAmJiAkU3RhdERhdGF7U3RhdFR5cGV9IGVxICdzdGF0aWMnICYmICEkU3RhdERhdGF7RmlsZX0gKSB7CiAgICAgICAgICAgIHB1c2ggQEluZGV4QXJyYXksIDE7CiAgICAgICAgfQogICAgICAgIGlmICggJFN0YXREYXRhe1N0YXRUeXBlfSAmJiAkU3RhdERhdGF7U3RhdFR5cGV9IGVxICdkeW5hbWljJyAmJiAhJFN0YXREYXRhe09iamVjdH0gKSB7CiAgICAgICAgICAgIHB1c2ggQEluZGV4QXJyYXksIDI7CiAgICAgICAgfQogICAgICAgIGlmICggISRQYXJhbXtTdGF0RGF0YX17R3JhcGhTaXplfSAmJiAkUGFyYW17U3RhdERhdGF9e0Zvcm1hdH0gKSB7CiAgICAgICAgICAgIGZvciAoIEB7ICRTdGF0RGF0YXtGb3JtYXR9IH0gKSB7CiAgICAgICAgICAgICAgICBpZiAoICRfID1+IG17XkdEOjpHcmFwaFwuKn14ICkgewogICAgICAgICAgICAgICAgICAgIHB1c2ggQEluZGV4QXJyYXksIDM7CiAgICAgICAgICAgICAgICAgICAgbGFzdDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICAjIGZvciBmb3JtIGNhbGxzCiAgICBpZiAoICRTdGF0RGF0YXtTdGF0VHlwZX0gJiYgJFN0YXREYXRhe1N0YXRUeXBlfSBlcSAnZHluYW1pYycgKSB7CiAgICAgICAgaWYgKAogICAgICAgICAgICAoICRQYXJhbXtTZWN0aW9ufSBlcSAnWGF4aXMnIHx8ICRQYXJhbXtTZWN0aW9ufSBlcSAnQWxsJyApCiAgICAgICAgICAgICYmICRTdGF0RGF0YXtTdGF0VHlwZX0gZXEgJ2R5bmFtaWMnCiAgICAgICAgICAgICkKICAgICAgICB7CiAgICAgICAgICAgIG15ICRGbGFnID0gMDsKICAgICAgICAgICAgWFZBTFVFOgogICAgICAgICAgICBmb3IgbXkgJFh2YWx1ZSAoIEB7ICRTdGF0RGF0YXtVc2VBc1h2YWx1ZX0gfSApIHsKICAgICAgICAgICAgICAgIG5leHQgWFZBTFVFIGlmICEkWHZhbHVlLT57U2VsZWN0ZWR9OwoKICAgICAgICAgICAgICAgIGlmICggJFh2YWx1ZS0+e0Jsb2NrfSBlcSAnVGltZScgKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCAkWHZhbHVlLT57VGltZVN0YXJ0fSAmJiAkWHZhbHVlLT57VGltZVN0b3B9ICkgewogICAgICAgICAgICAgICAgICAgICAgICBteSAkVGltZVN0YXJ0ID0gJFNlbGYtPntUaW1lT2JqZWN0fS0+VGltZVN0YW1wMlN5c3RlbVRpbWUoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdHJpbmcgPT4gJFh2YWx1ZS0+e1RpbWVTdGFydH0KICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgbXkgJFRpbWVTdG9wID0gJFNlbGYtPntUaW1lT2JqZWN0fS0+VGltZVN0YW1wMlN5c3RlbVRpbWUoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdHJpbmcgPT4gJFh2YWx1ZS0+e1RpbWVTdG9wfQogICAgICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoICEkVGltZVN0YXJ0IHx8ICEkVGltZVN0b3AgKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwdXNoIEBJbmRleEFycmF5LCAxMTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgWFZBTFVFOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2lmICggJFRpbWVTdGFydCA+ICRUaW1lU3RvcCApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHB1c2ggQEluZGV4QXJyYXksIDk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0IFhWQUxVRTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNpZiAoICEkWHZhbHVlLT57VGltZVJlbGF0aXZlVW5pdH0gfHwgISRYdmFsdWUtPntUaW1lUmVsYXRpdmVDb3VudH0gKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHB1c2ggQEluZGV4QXJyYXksIDk7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgWFZBTFVFOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYgKCAhJFh2YWx1ZS0+e1NlbGVjdGVkVmFsdWVzfVswXSApIHsKICAgICAgICAgICAgICAgICAgICAgICAgcHVzaCBASW5kZXhBcnJheSwgMTY7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2lmICggJFh2YWx1ZS0+e0ZpeGVkfSAmJiAkI3sgJFh2YWx1ZS0+e1NlbGVjdGVkVmFsdWVzfSB9ID4gMCApIHsKICAgICAgICAgICAgICAgICAgICAgICAgcHVzaCBASW5kZXhBcnJheSwgMTY7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgJEZsYWcgPSAxOwogICAgICAgICAgICAgICAgbGFzdCBYVkFMVUU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKCAhJEZsYWcgKSB7CiAgICAgICAgICAgICAgICBwdXNoIEBJbmRleEFycmF5LCA0OwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICgKICAgICAgICAgICAgKCAkUGFyYW17U2VjdGlvbn0gZXEgJ1ZhbHVlU2VyaWVzJyB8fCAkUGFyYW17U2VjdGlvbn0gZXEgJ0FsbCcgKQogICAgICAgICAgICAmJiAkU3RhdERhdGF7U3RhdFR5cGV9IGVxICdkeW5hbWljJwogICAgICAgICAgICApCiAgICAgICAgewogICAgICAgICAgICBteSAkQ291bnRlciA9IDA7CiAgICAgICAgICAgIG15ICRGbGFnICAgID0gMDsKICAgICAgICAgICAgVkFMVUVTRVJJRVM6CiAgICAgICAgICAgIGZvciBteSAkVmFsdWVTZXJpZXMgKCBAeyAkU3RhdERhdGF7VXNlQXNWYWx1ZVNlcmllc30gfSApIHsKICAgICAgICAgICAgICAgIG5leHQgVkFMVUVTRVJJRVMgaWYgISRWYWx1ZVNlcmllcy0+e1NlbGVjdGVkfTsKCiAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgJFZhbHVlU2VyaWVzLT57QmxvY2t9IGVxICdUaW1lJwogICAgICAgICAgICAgICAgICAgIHx8ICRWYWx1ZVNlcmllcy0+e0Jsb2NrfSBlcSAnVGltZUV4dGVuZGVkJwogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBpZiAoICRWYWx1ZVNlcmllcy0+e0ZpeGVkfSAmJiAkI3sgJFZhbHVlU2VyaWVzLT57U2VsZWN0ZWRWYWx1ZXN9IH0gPiAwICkgewogICAgICAgICAgICAgICAgICAgICAgICBwdXNoIEBJbmRleEFycmF5LCA2OwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNpZiAoICEkVmFsdWVTZXJpZXMtPntTZWxlY3RlZFZhbHVlc31bMF0gKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHB1c2ggQEluZGV4QXJyYXksIDc7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICRGbGFnID0gMTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAkQ291bnRlcisrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICggJENvdW50ZXIgPiAxICYmICRGbGFnICkgewogICAgICAgICAgICAgICAgcHVzaCBASW5kZXhBcnJheSwgMTM7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzaWYgKCAkQ291bnRlciA+IDIgKSB7CiAgICAgICAgICAgICAgICBwdXNoIEBJbmRleEFycmF5LCAxMjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoCiAgICAgICAgICAgICggJFBhcmFte1NlY3Rpb259IGVxICdSZXN0cmljdGlvbnMnIHx8ICRQYXJhbXtTZWN0aW9ufSBlcSAnQWxsJyApCiAgICAgICAgICAgICYmICRTdGF0RGF0YXtTdGF0VHlwZX0gZXEgJ2R5bmFtaWMnCiAgICAgICAgICAgICkKICAgICAgICB7CiAgICAgICAgICAgIFJFU1RSSUNUSU9OOgogICAgICAgICAgICBmb3IgbXkgJFJlc3RyaWN0aW9uICggQHsgJFN0YXREYXRhe1VzZUFzUmVzdHJpY3Rpb259IH0gKSB7CiAgICAgICAgICAgICAgICBuZXh0IFJFU1RSSUNUSU9OIGlmICEkUmVzdHJpY3Rpb24tPntTZWxlY3RlZH07CgogICAgICAgICAgICAgICAgaWYgKCAkUmVzdHJpY3Rpb24tPntCbG9ja30gZXEgJ1NlbGVjdEZpZWxkJyApIHsKICAgICAgICAgICAgICAgICAgICBpZiAoICRSZXN0cmljdGlvbi0+e0ZpeGVkfSAmJiAkI3sgJFJlc3RyaWN0aW9uLT57U2VsZWN0ZWRWYWx1ZXN9IH0gPiAwICkgewogICAgICAgICAgICAgICAgICAgICAgICBwdXNoIEBJbmRleEFycmF5LCA2OwogICAgICAgICAgICAgICAgICAgICAgICBsYXN0IFJFU1RSSUNUSU9OOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNpZiAoICEkUmVzdHJpY3Rpb24tPntTZWxlY3RlZFZhbHVlc31bMF0gKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHB1c2ggQEluZGV4QXJyYXksIDc7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgUkVTVFJJQ1RJT047CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzaWYgKAogICAgICAgICAgICAgICAgICAgICRSZXN0cmljdGlvbi0+e0Jsb2NrfSBlcSAnSW5wdXRGaWVsZCcKICAgICAgICAgICAgICAgICAgICAmJiAhJFJlc3RyaWN0aW9uLT57U2VsZWN0ZWRWYWx1ZXN9WzBdCiAgICAgICAgICAgICAgICAgICAgJiYgJFJlc3RyaWN0aW9uLT57Rml4ZWR9CiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHB1c2ggQEluZGV4QXJyYXksIDg7CiAgICAgICAgICAgICAgICAgICAgbGFzdCBSRVNUUklDVElPTjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2lmICgKICAgICAgICAgICAgICAgICAgICAkUmVzdHJpY3Rpb24tPntCbG9ja30gZXEgJ1RpbWUnCiAgICAgICAgICAgICAgICAgICAgfHwgJFJlc3RyaWN0aW9uLT57QmxvY2t9IGVxICdUaW1lRXh0ZW5kZWQnCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGlmICggJFJlc3RyaWN0aW9uLT57VGltZVN0YXJ0fSAmJiAkUmVzdHJpY3Rpb24tPntUaW1lU3RvcH0gKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG15ICRUaW1lU3RhcnQgPSAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0cmluZyA9PiAkUmVzdHJpY3Rpb24tPntUaW1lU3RhcnR9CiAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICAgIG15ICRUaW1lU3RvcCA9ICRTZWxmLT57VGltZU9iamVjdH0tPlRpbWVTdGFtcDJTeXN0ZW1UaW1lKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RyaW5nID0+ICRSZXN0cmljdGlvbi0+e1RpbWVTdG9wfQogICAgICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoICEkVGltZVN0YXJ0IHx8ICEkVGltZVN0b3AgKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwdXNoIEBJbmRleEFycmF5LCAxMTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgUkVTVFJJQ1RJT047CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzaWYgKCAkVGltZVN0YXJ0ID4gJFRpbWVTdG9wICkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHVzaCBASW5kZXhBcnJheSwgOTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgUkVTVFJJQ1RJT047CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzaWYgKAogICAgICAgICAgICAgICAgICAgICAgICAhJFJlc3RyaWN0aW9uLT57VGltZVJlbGF0aXZlVW5pdH0KICAgICAgICAgICAgICAgICAgICAgICAgfHwgISRSZXN0cmljdGlvbi0+e1RpbWVSZWxhdGl2ZUNvdW50fQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBwdXNoIEBJbmRleEFycmF5LCA5OwogICAgICAgICAgICAgICAgICAgICAgICBsYXN0IFJFU1RSSUNUSU9OOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgIyBjaGVjayBpZiB0aGUgdGltZXBlcmlvZCBpcyB0byBiaWcgb3IgdGhlIHRpbWUgc2NhbGUgdG8gc21hbGwKICAgICAgICAjIHVzZWQgb25seSBmb3IgZml4ZWQgdGltZSB2YWx1ZXMKICAgICAgICAjIHJlbWFyayB0aW1lIGZ1bmN0aW9ucyBzaG91bGQgYmUgZXhwb3J0ZXQgaW4gZXh0ZXJuYWwgZnVuY3Rpb25zICh0cikKICAgICAgICBpZiAoICRQYXJhbXtTZWN0aW9ufSBlcSAnQWxsJyAmJiAkU3RhdERhdGF7U3RhdFR5cGV9IGVxICdkeW5hbWljJyApIHsKICAgICAgICAgICAgbXkgJFN0YXQgPSAkU2VsZi0+U3RhdHNHZXQoIFN0YXRJRCA9PiAkU3RhdERhdGF7U3RhdElEfSApOwoKICAgICAgICAgICAgWFZBTFVFOgogICAgICAgICAgICBmb3IgbXkgJFh2YWx1ZSAoIEB7ICRTdGF0LT57VXNlQXNYdmFsdWV9IH0gKSB7CiAgICAgICAgICAgICAgICBuZXh0IFhWQUxVRQogICAgICAgICAgICAgICAgICAgIGlmICEoICRYdmFsdWUtPntTZWxlY3RlZH0gJiYgJFh2YWx1ZS0+e0ZpeGVkfSAmJiAkWHZhbHVlLT57QmxvY2t9IGVxICdUaW1lJyApOwoKICAgICAgICAgICAgICAgIG15ICRGbGFnID0gMTsKICAgICAgICAgICAgICAgIFZBTFVFU0VSSUVTOgogICAgICAgICAgICAgICAgZm9yIG15ICRWYWx1ZVNlcmllcyAoIEB7ICRTdGF0LT57VXNlQXNWYWx1ZVNlcmllc30gfSApIHsKICAgICAgICAgICAgICAgICAgICBpZiAoICRWYWx1ZVNlcmllcy0+e1NlbGVjdGVkfSAmJiAkVmFsdWVTZXJpZXMtPntCbG9ja30gZXEgJ1RpbWUnICkgewogICAgICAgICAgICAgICAgICAgICAgICAkRmxhZyA9IDA7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgVkFMVUVTRVJJRVM7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGxhc3QgWFZBTFVFIGlmICEkRmxhZzsKCiAgICAgICAgICAgICAgICBteSAkU2NhbGVQZXJpb2QgPSAwOwogICAgICAgICAgICAgICAgbXkgJFRpbWVQZXJpb2QgID0gMDsKCiAgICAgICAgICAgICAgICBteSAkQ291bnQgPSAkWHZhbHVlLT57VGltZVNjYWxlQ291bnR9ID8gJFh2YWx1ZS0+e1RpbWVTY2FsZUNvdW50fSA6IDE7CgogICAgICAgICAgICAgICAgbXkgJVRpbWVJblNlY29uZHMgPSAoCiAgICAgICAgICAgICAgICAgICAgWWVhciAgID0+IDMxNTM2MDAwLCAgICAjIDYwICogNjAgKiA2MCAqIDM2NQogICAgICAgICAgICAgICAgICAgIE1vbnRoICA9PiAyNTkyMDAwLCAgICAgIyA2MCAqIDYwICogMjQgKiAzMAogICAgICAgICAgICAgICAgICAgIERheSAgICA9PiA4NjQwMCwgICAgICAgIyA2MCAqIDYwICogMjQKICAgICAgICAgICAgICAgICAgICBIb3VyICAgPT4gMzYwMCwgICAgICAgICMgNjAgKiA2MAogICAgICAgICAgICAgICAgICAgIE1pbnV0ZSA9PiA2MCwKICAgICAgICAgICAgICAgICAgICBTZWNvbmQgPT4gMSwKICAgICAgICAgICAgICAgICk7CgogICAgICAgICAgICAgICAgJFNjYWxlUGVyaW9kID0gJFRpbWVJblNlY29uZHN7ICRYdmFsdWUtPntTZWxlY3RlZFZhbHVlc31bMF0gfTsKCiAgICAgICAgICAgICAgICBpZiAoICEkU2NhbGVQZXJpb2QgKSB7CiAgICAgICAgICAgICAgICAgICAgcHVzaCBASW5kZXhBcnJheSwgMTc7CiAgICAgICAgICAgICAgICAgICAgbGFzdCBYVkFMVUU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKCAkWHZhbHVlLT57VGltZVN0b3B9ICYmICRYdmFsdWUtPntUaW1lU3RhcnR9ICkgewogICAgICAgICAgICAgICAgICAgICRUaW1lUGVyaW9kCiAgICAgICAgICAgICAgICAgICAgICAgID0gKAogICAgICAgICAgICAgICAgICAgICAgICAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSggU3RyaW5nID0+ICRYdmFsdWUtPntUaW1lU3RvcH0gKQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIC0gKAogICAgICAgICAgICAgICAgICAgICAgICAkU2VsZi0+e1RpbWVPYmplY3R9LT5UaW1lU3RhbXAyU3lzdGVtVGltZSggU3RyaW5nID0+ICRYdmFsdWUtPntUaW1lU3RhcnR9ICkKICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICRUaW1lUGVyaW9kID0gJFRpbWVJblNlY29uZHN7ICRYdmFsdWUtPntUaW1lUmVsYXRpdmVVbml0fSB9CiAgICAgICAgICAgICAgICAgICAgICAgICogJFh2YWx1ZS0+e1RpbWVSZWxhdGl2ZUNvdW50fTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBteSAkTWF4QXR0ciA9ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdTdGF0czo6TWF4WGF4aXNBdHRyaWJ1dGVzJykgfHwgMTAwMDsKICAgICAgICAgICAgICAgIGlmICggJFRpbWVQZXJpb2QgLyAoICRTY2FsZVBlcmlvZCAqICRDb3VudCApID4gJE1heEF0dHIgKSB7CiAgICAgICAgICAgICAgICAgICAgcHVzaCBASW5kZXhBcnJheSwgMTU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgbGFzdCBYVkFMVUU7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICBmb3IgKEBJbmRleEFycmF5KSB7CiAgICAgICAgcHVzaCBATm90aWZ5U2VsZWN0ZWQsICROb3RpZnlbJF9dOwogICAgfQoKICAgIHJldHVybiBATm90aWZ5U2VsZWN0ZWQ7Cgp9Cgo9aXRlbSBHZXRTdGF0c09iamVjdEF0dHJpYnV0ZXMoKQoKR2V0IGFsbCBhdHRyaWJ1dGVzIGZyb20gdGhlIG9iamVjdCBpbiBkZXBlbmRlbmNlIG9mIHRoZSB1c2UKCiAgICBteSAlT2JqZWN0QXR0cmlidXRlcyA9ICRTdGF0c09iamVjdC0+R2V0U3RhdHNPYmplY3RBdHRyaWJ1dGVzKAogICAgICAgIE9iamVjdE1vZHVsZSA9PiAnVGlja2V0JywKICAgICAgICBVc2UgICAgICAgICAgPT4gJ1VzZUFzWHZhbHVlJyB8fCAnVXNlQXNWYWx1ZVNlcmllcycgfHwgJ1VzZUFzUmVzdHJpY3Rpb24nLAogICAgKTsKCj1jdXQKCnN1YiBHZXRTdGF0c09iamVjdEF0dHJpYnV0ZXMgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICBteSBAT2JqZWN0QXR0cmlidXRlcyA9ICgpOwoKICAgICMgY2hlY2sgbmVlZGVkIHBhcmFtcwogICAgZm9yIChxdyhPYmplY3RNb2R1bGUgVXNlKSkgewogICAgICAgIGlmICggISRQYXJhbXskX30gKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgICAgIE1lc3NhZ2UgID0+ICJHZXRTdGF0c09iamVjdEF0dHJpYnV0ZXM6IE5lZWQgJF8hIgogICAgICAgICAgICApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgfQoKICAgICMgbG9hZCBtb2R1bGUKICAgIG15ICRPYmplY3RNb2R1bGUgPSAkUGFyYW17T2JqZWN0TW9kdWxlfTsKICAgICRTZWxmLT57TWFpbk9iamVjdH0tPlJlcXVpcmUoJE9iamVjdE1vZHVsZSk7CiAgICBteSAkU3RhdE9iamVjdCA9ICRPYmplY3RNb2R1bGUtPm5ldyggJXskU2VsZn0gKTsKCiAgICAjIGxvYWQgYXR0cmlidXRlcwogICAgbXkgQE9iamVjdEF0dHJpYnV0ZXNSYXcgPSAkU3RhdE9iamVjdC0+R2V0T2JqZWN0QXR0cmlidXRlcygpOwoKICAgICMgYnVpbGQgdGhlIG9iamVjdGF0dHJpYnV0ZSBhcnJheQogICAgZm9yIG15ICRIYXNoUmVmIChAT2JqZWN0QXR0cmlidXRlc1JhdykgewogICAgICAgIGlmICggJEhhc2hSZWYtPnsgJFBhcmFte1VzZX0gfSApIHsKICAgICAgICAgICAgZGVsZXRlICRIYXNoUmVmLT57VXNlQXNYdmFsdWV9OwogICAgICAgICAgICBkZWxldGUgJEhhc2hSZWYtPntVc2VBc1ZhbHVlU2VyaWVzfTsKICAgICAgICAgICAgZGVsZXRlICRIYXNoUmVmLT57VXNlQXNSZXN0cmljdGlvbn07CgogICAgICAgICAgICBwdXNoIEBPYmplY3RBdHRyaWJ1dGVzLCAkSGFzaFJlZjsKICAgICAgICB9CiAgICB9CgogICAgcmV0dXJuIEBPYmplY3RBdHRyaWJ1dGVzOwp9Cgo9aXRlbSBHZXRTdGF0aWNGaWxlcygpCgpHZXQgYWxsIHN0YXRpYyBmaWxlcwoKICAgIG15ICRGaWxlSGFzaCA9ICRTdGF0c09iamVjdC0+R2V0U3RhdGljRmlsZXMoCiAgICAgICAgT25seVVudXNlZEZpbGVzID0+IDEgfCAwLCAjIG9wdGlvbmFsIGRlZmF1bHQgMAogICAgKTsKCj1jdXQKCnN1YiBHZXRTdGF0aWNGaWxlcyB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgIG15ICVGaWxlbGlzdCA9ICgpOwoKICAgIG15ICREaXJlY3RvcnkgPSAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnSG9tZScpOwogICAgaWYgKCAkRGlyZWN0b3J5ICF+IG17Xi4qXC8kfXggKSB7CiAgICAgICAgJERpcmVjdG9yeSAuPSAnLyc7CiAgICB9CiAgICAkRGlyZWN0b3J5IC49ICdLZXJuZWwvU3lzdGVtL1N0YXRzL1N0YXRpYy8nOwoKICAgIGlmICggIW9wZW5kaXIoIERJUiwgJERpcmVjdG9yeSApICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAiQ2FuIG5vdCBvcGVuIERpcmVjdG9yeTogJERpcmVjdG9yeSIsCiAgICAgICAgKTsKICAgICAgICByZXR1cm4gKCk7CiAgICB9CgogICAgbXkgJVN0YXRpY0ZpbGVzID0gKCk7CgogICAgaWYgKCAkUGFyYW17T25seVVudXNlZEZpbGVzfSApIHsKCiAgICAgICAgIyBnZXQgYWxsIFN0YXRzIGZyb20gdGhlIGRiCiAgICAgICAgbXkgJFJlc3VsdCA9ICRTZWxmLT5HZXRTdGF0c0xpc3QoKTsKCiAgICAgICAgaWYgKCBkZWZpbmVkICRSZXN1bHQgKSB7CiAgICAgICAgICAgIGZvciBteSAkU3RhdElEICggQHskUmVzdWx0fSApIHsKICAgICAgICAgICAgICAgIG15ICREYXRhID0gJFNlbGYtPlN0YXRzR2V0KCBTdGF0SUQgPT4gJFN0YXRJRCApOwoKICAgICAgICAgICAgICAgICMgY2hlY2sgd2l0Y2ggb25lIGFyZSBzdGF0aWMgc3RhdGlzdGljcwogICAgICAgICAgICAgICAgaWYgKCAkRGF0YS0+e0ZpbGV9ICYmICREYXRhLT57U3RhdFR5cGV9IGVxICdzdGF0aWMnICkgewogICAgICAgICAgICAgICAgICAgICRTdGF0aWNGaWxlc3sgJERhdGEtPntGaWxlfSB9ID0gMTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICAjIHJlYWQgZmlsZXMKICAgIHdoaWxlICggZGVmaW5lZCggbXkgJEZpbGVuYW1lID0gcmVhZGRpciBESVIgKSApIHsKICAgICAgICBuZXh0IGlmICRGaWxlbmFtZSBlcSAnLic7CiAgICAgICAgbmV4dCBpZiAkRmlsZW5hbWUgZXEgJy4uJzsKICAgICAgICBpZiAoICRGaWxlbmFtZSA9fiBte14oLiopXC5wbSR9eCApIHsKICAgICAgICAgICAgaWYgKCAhZGVmaW5lZCAkU3RhdGljRmlsZXN7JDF9ICkgewogICAgICAgICAgICAgICAgJEZpbGVsaXN0eyQxfSA9ICQxOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgY2xvc2VkaXIoRElSKTsKCiAgICByZXR1cm4gXCVGaWxlbGlzdDsKfQoKPWl0ZW0gR2V0RHluYW1pY0ZpbGVzKCkKCkdldCBhbGwgc3RhdGljIG9iamVjdHMKCiAgICBteSAkRmlsZUhhc2ggPSAkU3RhdHNPYmplY3QtPkdldER5bmFtaWNGaWxlcygpOwoKPWN1dAoKc3ViIEdldER5bmFtaWNGaWxlcyB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgIG15ICVGaWxlbGlzdCA9ICV7ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdTdGF0czo6RHluYW1pY09iamVjdFJlZ2lzdHJhdGlvbicpIH07CiAgICBPQkpFQ1Q6CiAgICBmb3IgbXkgJE9iamVjdCAoIGtleXMgJUZpbGVsaXN0ICkgewogICAgICAgIGlmICggISRGaWxlbGlzdHskT2JqZWN0fSApIHsKICAgICAgICAgICAgZGVsZXRlICRGaWxlbGlzdHskT2JqZWN0fTsKICAgICAgICAgICAgbmV4dCBPQkpFQ1Q7CiAgICAgICAgfQogICAgICAgICRGaWxlbGlzdHskT2JqZWN0fSA9ICRTZWxmLT5HZXRPYmplY3ROYW1lKAogICAgICAgICAgICBPYmplY3RNb2R1bGUgPT4gJEZpbGVsaXN0eyRPYmplY3R9e01vZHVsZX0sCiAgICAgICAgKTsKICAgIH0KICAgIHJldHVybiBpZiAhJUZpbGVsaXN0OwoKICAgIHJldHVybiBcJUZpbGVsaXN0Owp9Cgo9aXRlbSBHZXRPYmplY3ROYW1lKCkKCkdldCB0aGUgbmFtZSBvZiBhIGR5bmFtaWMgb2JqZWN0CgogICAgbXkgJE9iamVjdE5hbWUgPSAkU3RhdHNPYmplY3QtPkdldE9iamVjdE5hbWUoCiAgICAgICAgT2JqZWN0TW9kdWxlID0+ICdLZXJuZWw6OlN5c3RlbTo6U3RhdHM6OkR5bmFtaWM6OlRpY2tldExpc3QnLAogICAgKTsKCj1jdXQKCnN1YiBHZXRPYmplY3ROYW1lIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CiAgICBteSAkTW9kdWxlID0gJFBhcmFte09iamVjdE1vZHVsZX07CgogICAgIyBjaGVjayBpZiBpdCBpcyBjYWNoZWQKICAgIHJldHVybiAkU2VsZi0+eydDYWNoZTo6T2JqZWN0TW9kdWxlJ317JE1vZHVsZX0gaWYgJFNlbGYtPnsnQ2FjaGU6Ok9iamVjdE5hbWUnfXskTW9kdWxlfTsKCiAgICAjIGxvYWQgbW9kdWxlLCByZXR1cm4gaWYgbW9kdWxlIGRvZXMgbm90IGV4aXN0CiAgICAjICh0aGlzIGlzIGltcG9ydGFudCB3aGVuIHN0YXRzIGFyZSB1bmluc3RhbGxlZCwgc2VlIGFsc28gYnVnIyA0MjY5KQogICAgcmV0dXJuIGlmICEkU2VsZi0+e01haW5PYmplY3R9LT5SZXF1aXJlKCRNb2R1bGUpOwoKICAgICMgZ2V0IG5hbWUKICAgIG15ICRTdGF0T2JqZWN0ID0gJE1vZHVsZS0+bmV3KCAleyRTZWxmfSApOwogICAgbXkgJE5hbWUgICAgICAgPSAkU3RhdE9iamVjdC0+R2V0T2JqZWN0TmFtZSgpOwoKICAgICMgY2FjaGUgdGhlIHJlc3VsdAogICAgJFNlbGYtPnsnQ2FjaGU6Ok9iamVjdE1vZHVsZSd9eyRNb2R1bGV9ID0gJE5hbWU7CgogICAgcmV0dXJuICROYW1lOwp9Cgo9aXRlbSBPYmplY3RGaWxlQ2hlY2soKQoKY2hlY2sgcmVhZGFibGUgb2JqZWN0IGZpbGUKCiAgICBteSAkT2JqZWN0RmlsZUNoZWNrID0gJFN0YXRzT2JqZWN0LT5PYmplY3RGaWxlQ2hlY2soCiAgICAgICAgVHlwZSA9PiAnc3RhdGljJywKICAgICAgICBOYW1lID0+ICdOZXdUaWNrZXRzJywKICAgICk7Cgo9Y3V0CgpzdWIgT2JqZWN0RmlsZUNoZWNrIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgbXkgJERpcmVjdG9yeSA9ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdIb21lJyk7CiAgICBpZiAoICREaXJlY3RvcnkgIX4gbXteLipcLyR9eCApIHsKICAgICAgICAkRGlyZWN0b3J5IC49ICcvJzsKICAgIH0KICAgIGlmICggJFBhcmFte1R5cGV9IGVxICdzdGF0aWMnICkgewogICAgICAgICREaXJlY3RvcnkgLj0gJ0tlcm5lbC9TeXN0ZW0vU3RhdHMvU3RhdGljLycgLiAkUGFyYW17TmFtZX0gLiAnLnBtJzsKICAgIH0KICAgIGVsc2lmICggJFBhcmFte1R5cGV9IGVxICdkeW5hbWljJyApIHsKICAgICAgICAkRGlyZWN0b3J5IC49ICdLZXJuZWwvU3lzdGVtL1N0YXRzL0R5bmFtaWMvJyAuICRQYXJhbXtOYW1lfSAuICcucG0nOwogICAgfQoKICAgIHJldHVybiAxIGlmIC1yICREaXJlY3Rvcnk7CiAgICByZXR1cm4gMDsKfQoKc3ViIF9Xcml0ZVJlc3VsdENhY2hlIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgbXkgJUdldFBhcmFtID0gJXsgJFBhcmFte0dldFBhcmFtfSB9OwoKICAgICMgY2hlY2sgaWYgd2Ugc2hvdWxkIGNhY2hlIHRoaXMgcmVzdWx0CiAgICAjIGdldCB0aGUgY3VycmVudCB0aW1lCiAgICBteSAoICRzLCAkbSwgJGgsICRELCAkTSwgJFkgKQogICAgICAgID0gJFNlbGYtPntUaW1lT2JqZWN0fS0+U3lzdGVtVGltZTJEYXRlKCBTeXN0ZW1UaW1lID0+ICRTZWxmLT57VGltZU9iamVjdH0tPlN5c3RlbVRpbWUoKSwgKTsKCiAgICAjIGlmIGdldCBwYXJhbXMgaW4gZnV0dXJlIGRvIG5vdCBjYWNoZQogICAgaWYgKCAkR2V0UGFyYW17WWVhcn0gJiYgJEdldFBhcmFte01vbnRofSApIHsKICAgICAgICByZXR1cm4gaWYgJEdldFBhcmFte1llYXJ9ID4gJFk7CiAgICAgICAgcmV0dXJuIGlmICRHZXRQYXJhbXtZZWFyfSA9PSAkWSAmJiAkR2V0UGFyYW17TW9udGh9ID4gJE07CiAgICAgICAgcmV0dXJuCiAgICAgICAgICAgIGlmICRHZXRQYXJhbXtZZWFyfSA9PSAkWQogICAgICAgICAgICAgICAgJiYgJEdldFBhcmFte01vbnRofSA9PSAkTQogICAgICAgICAgICAgICAgJiYgJEdldFBhcmFte0RheX0KICAgICAgICAgICAgICAgICYmICRHZXRQYXJhbXtEYXl9ID49ICREOwogICAgfQoKICAgICMgd3JpdGUgY2FjaGUgZmlsZQogICAgbXkgJEZpbGVuYW1lID0gJFNlbGYtPl9DcmVhdGVTdGF0aWNSZXN1bHRDYWNoZUZpbGVuYW1lKAogICAgICAgIEdldFBhcmFtID0+ICRQYXJhbXtHZXRQYXJhbX0sCiAgICAgICAgU3RhdElEICAgPT4gJFBhcmFte1N0YXRJRH0sCiAgICApOwoKICAgICRTZWxmLT5fU2V0UmVzdWx0Q2FjaGUoCiAgICAgICAgRmlsZW5hbWUgPT4gJEZpbGVuYW1lLAogICAgICAgIFJlc3VsdCAgID0+ICRQYXJhbXtEYXRhfSwKICAgICk7CgogICAgcmV0dXJuIDE7Cn0KCiM9aXRlbSBfQ3JlYXRlU3RhdGljUmVzdWx0Q2FjaGVGaWxlbmFtZSgpCiMKI2NyZWF0ZSBhIGZpbGVuYW1lIG91dCBvZiB0aGUgR2V0UGFyYW0gaW5mb3JtYXRpb24gYW5kIHRoZSBzdGF0IGlkCiMKIyAgICBteSAkRmlsZW5hbWUgPSAkU3RhdHNPYmplY3QtPl9DcmVhdGVTdGF0aWNSZXN1bHRDYWNoZUZpbGVuYW1lKAojICAgICAgICBHZXRQYXJhbSA9PiB7CiMgICAgICAgICAgICBZZWFyICA9PiAyMDA4LAojICAgICAgICAgICAgTW9udGggPT4gMywKIyAgICAgICAgICAgIERheSAgID0+IDUKIyAgICAgICAgfSwKIyAgICAgICAgU3RhdElEICAgPT4gJFBhcmFte1N0YXRJRH0sCiMgICAgKTsKIwojPWN1dAoKc3ViIF9DcmVhdGVTdGF0aWNSZXN1bHRDYWNoZUZpbGVuYW1lIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgcGFyYW1zCiAgICBmb3IgbXkgJE5lZWRlZFBhcmFtIChxdyggU3RhdElEIEdldFBhcmFtICkpIHsKICAgICAgICBpZiAoICEkUGFyYW17JE5lZWRlZFBhcmFtfSApIHsKICAgICAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICAgICAgTWVzc2FnZSAgPT4gIl9DcmVhdGVTdGF0aWNSZXN1bHRDYWNoZUZpbGVuYW1lOiBOZWVkICROZWVkZWRQYXJhbSEiCiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgbXkgJEdldFBhcmFtUmVmID0gJFBhcmFte0dldFBhcmFtfTsKCiAgICAjIGZvcm1hdCBtb250aCBhbmQgZGF5IHBhcmFtcwogICAgZm9yIChxdyhNb250aCBEYXkpKSB7CiAgICAgICAgaWYgKCAkR2V0UGFyYW1SZWYtPnskX30gKSB7CiAgICAgICAgICAgICRHZXRQYXJhbVJlZi0+eyRffSA9IHNwcmludGYoICIlMDJkIiwgJEdldFBhcmFtUmVmLT57JF99ICk7CiAgICAgICAgfQogICAgfQoKICAgIG15ICRLZXkgPSAnJzsKICAgIGlmICggJEdldFBhcmFtUmVmLT57WWVhcn0gKSB7CiAgICAgICAgJEtleSAuPSAkR2V0UGFyYW1SZWYtPntZZWFyfTsKICAgIH0KICAgIGlmICggJEdldFBhcmFtUmVmLT57TW9udGh9ICkgewogICAgICAgICRLZXkgLj0gIi0kR2V0UGFyYW1SZWYtPntNb250aH0iOwogICAgfQogICAgaWYgKCAkR2V0UGFyYW1SZWYtPntEYXl9ICkgewogICAgICAgICRLZXkgLj0gIi0kR2V0UGFyYW1SZWYtPntEYXl9IjsKICAgIH0KCiAgICBteSAkTUQ1S2V5ID0gJFNlbGYtPntNYWluT2JqZWN0fS0+RmlsZW5hbWVDbGVhblVwKAogICAgICAgIEZpbGVuYW1lID0+ICRLZXksCiAgICAgICAgVHlwZSAgICAgPT4gJ21kNScsCiAgICApOwoKICAgIHJldHVybiAnU3RhdHMnIC4gJFBhcmFte1N0YXRJRH0gLiAnLScgLiAkTUQ1S2V5IC4gJy5jYWNoZSc7Cn0KCiM9aXRlbSBfU2V0UmVzdWx0Q2FjaGUoKQojCiN3cml0ZSB0aGUgcmVzdWx0IGFycmF5IGFzIGNhY2hlIGluIHRoZSBmaWxlc3lzdGVtCiMKIyAgICAkU3RhdHNPYmplY3QtPl9TZXRSZXN1bHRDYWNoZSgKIyAgICAgICAgRmlsZW5hbWUgPT4gJ1N0YXRzJyAuICRQYXJhbXtTdGF0SUR9IC4gJy0nIC4gJE1ENUtleSAuICcuY2FjaGUnLAojICAgICAgICBSZXN1bHQgICA9PiAkUGFyYW17RGF0YX0sCiMgICAgKTsKIwojPWN1dAoKc3ViIF9TZXRSZXN1bHRDYWNoZSB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVlZGVkIHBhcmFtcwogICAgZm9yIG15ICROZWVkZWRQYXJhbSAocXcoIEZpbGVuYW1lIFJlc3VsdCkpIHsKICAgICAgICBpZiAoICEkUGFyYW17JE5lZWRlZFBhcmFtfSApIHsKICAgICAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICAgICAgTWVzc2FnZSAgPT4gIl9TZXRSZXN1bHRDYWNoZTogTmVlZCAkTmVlZGVkUGFyYW0hIgogICAgICAgICAgICApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgfQoKICAgICMgY29udmVydCB0aGUgcmVzdWx0IGFycmF5IGludG8gYSBjc3Ygc3RyaW5nCiAgICBteSAkQ1NWU3RyaW5nID0gJFNlbGYtPntDU1ZPYmplY3R9LT5BcnJheTJDU1YoIERhdGEgPT4gJFBhcmFte1Jlc3VsdH0sICk7CiAgICAkU2VsZi0+e0VuY29kZU9iamVjdH0tPkVuY29kZU91dHB1dCggXCRDU1ZTdHJpbmcgKTsKCiAgICAjIHdyaXRlIHRoZSBjc3Ygc3RyaW5nIGludG8gdGhlIGZpbGVzeXN0ZW0KICAgIG15ICRGaWxlaGFuZGxlOwogICAgbXkgJFBhdGggPSAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnVGVtcERpcicpOwogICAgaWYgKCAhb3BlbiAkRmlsZWhhbmRsZSwgJz4nLCAiJFBhdGgvJFBhcmFte0ZpbGVuYW1lfSIgKSB7CiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgIE1lc3NhZ2UgID0+ICJDYW4ndCB3cml0ZTogJFBhdGgvJFBhcmFte0ZpbGVuYW1lfSEiLAogICAgICAgICk7CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGJpbm1vZGUgJEZpbGVoYW5kbGU7CiAgICBwcmludCAkRmlsZWhhbmRsZSAkQ1NWU3RyaW5nOwogICAgY2xvc2UgJEZpbGVoYW5kbGU7CgogICAgcmV0dXJuIDE7Cn0KCiM9aXRlbSBfR2V0UmVzdWx0Q2FjaGUoKQojCiNnZXQgdGhlIHJlc3VsdCBhcnJheSBjYWNoZSBvdXQgb2YgdGhlIGZpbGVzeXN0ZW0KIwojICAgIG15IEBSZXN1bHQgPSAkU3RhdHNPYmplY3QtPl9HZXRSZXN1bHRDYWNoZSgKIyAgICAgICAgRmlsZW5hbWUgPT4gJ1N0YXRzJyAuICRQYXJhbXtTdGF0SUR9IC4gJy0nIC4gJE1ENUtleSAuICcuY2FjaGUnLAojICAgICk7CiMKIz1jdXQKCnN1YiBfR2V0UmVzdWx0Q2FjaGUgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGNoZWNrIG5lZWRlZCBwYXJhbXMKICAgIGlmICggISRQYXJhbXtGaWxlbmFtZX0gKSB7CiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgIE1lc3NhZ2UgID0+ICdfR2V0UmVzdWx0Q2FjaGU6IE5lZWQgRmlsZW5hbWUhJywKICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBteSAkUGF0aCAgICAgID0gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoJ1RlbXBEaXInKTsKICAgIG15ICRDU1ZTdHJpbmcgPSAnJzsKICAgIGlmICggb3BlbiBteSAkRmlsZWhhbmRsZSwgJzwnLCAiJFBhdGgvJFBhcmFte0ZpbGVuYW1lfSIgKSB7CiAgICAgICAgYmlubW9kZSAkRmlsZWhhbmRsZTsKICAgICAgICB3aGlsZSAoPCRGaWxlaGFuZGxlPikgewogICAgICAgICAgICAkQ1NWU3RyaW5nIC49ICRfOwogICAgICAgIH0KICAgICAgICBjbG9zZSAkRmlsZWhhbmRsZTsKICAgICAgICAkU2VsZi0+e0VuY29kZU9iamVjdH0tPkVuY29kZSggXCRDU1ZTdHJpbmcgKTsKICAgIH0KCiAgICBteSAkUmVzdWx0UmVmID0gJFNlbGYtPntDU1ZPYmplY3R9LT5DU1YyQXJyYXkoCiAgICAgICAgU3RyaW5nICAgID0+ICRDU1ZTdHJpbmcsCiAgICAgICAgU2VwYXJhdG9yID0+ICc7JywKICAgICAgICBRdW90ZSAgICAgPT4gJyInLAogICAgKTsKCiAgICByZXR1cm4gQHskUmVzdWx0UmVmfTsKfQoKc3ViIF9EZWxldGVDYWNoZSB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgIG15ICRQYXRoID0gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoJ1RlbXBEaXInKTsKCiAgICBpZiAoICRQYXRoICF+IG17Xi4qXC8kfXggKSB7CiAgICAgICAgJFBhdGggLj0gJy8nOwogICAgfQoKICAgIG15IEBGaWxlcyA9IGdsb2IgJFBhdGggLiAnU3RhdHMnIC4gJFBhcmFte1N0YXRJRH0gLiAnLSouY2FjaGUnOwoKICAgIGZvciBteSAkRmlsZSAoQEZpbGVzKSB7CiAgICAgICAgdW5saW5rICRGaWxlOwogICAgfQogICAgcmV0dXJuIDE7Cn0KCj1pdGVtIEV4cG9ydCgpCgpnZXQgY29udGVudCBmcm9tIHN0YXRzIGZvciBleHBvcnQKCiAgICBteSAkRXhwb3J0RmlsZSA9ICRTdGF0c09iamVjdC0+RXhwb3J0KAogICAgICAgIFN0YXRJRCA9PiAnMTIzJywKICAgICAgICBFeHBvcnRTdGF0TnVtYmVyID0+IDEgfHwgMCwgIyBvcHRpb25hbCwgb25seSB1c2VmdWwgbW92ZSBzdGF0aXN0aWNzIGZyb20gdGhlIHRlc3Qgc3lzdGVtIHRvIHRoZSBwcm9kdWN0aXZlIHN5c3RlbQogICAgKTsKCj1jdXQKCnN1YiBFeHBvcnQgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICBteSAlRmlsZSA9ICgpOwoKICAgIGlmICggISRQYXJhbXtTdGF0SUR9ICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAiRXhwb3J0OiBOZWVkIFN0YXRJRCEiCiAgICAgICAgKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgbXkgQFhNTEhhc2ggPSAkU2VsZi0+e1hNTE9iamVjdH0tPlhNTEhhc2hHZXQoCiAgICAgICAgVHlwZSA9PiAnU3RhdHMnLAoKICAgICAgICAjQ2FjaGUgPT4gMCwKICAgICAgICBLZXkgPT4gJFBhcmFte1N0YXRJRH0KICAgICk7CgogICAgJEZpbGV7RmlsZW5hbWV9ID0gJFNlbGYtPlN0cmluZ0FuZFRpbWVzdGFtcDJGaWxlbmFtZSgKICAgICAgICBTdHJpbmcgPT4gJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtUaXRsZX1bMV17Q29udGVudH0sCiAgICApOwogICAgJEZpbGV7RmlsZW5hbWV9IC49ICcueG1sJzsKCiAgICAjIHNldHRpbmdzIGZvciBzdGF0aWMgZmlsZXMKICAgIGlmICgKICAgICAgICAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde1N0YXRUeXBlfVsxXXtDb250ZW50fQogICAgICAgICYmICRYTUxIYXNoWzBdLT57b3Ryc19zdGF0c31bMV17U3RhdFR5cGV9WzFde0NvbnRlbnR9IGVxICdzdGF0aWMnCiAgICAgICAgKQogICAgewogICAgICAgIG15ICRGaWxlTG9jYXRpb24gPSAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde09iamVjdE1vZHVsZX1bMV17Q29udGVudH07CiAgICAgICAgJEZpbGVMb2NhdGlvbiA9fiBzezo6fXtcL314ZzsKICAgICAgICAkRmlsZUxvY2F0aW9uIC49ICcucG0nOwogICAgICAgIG15ICRGaWxlICAgICAgICA9ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdIb21lJykgLiAiLyRGaWxlTG9jYXRpb24iOwogICAgICAgIG15ICRGaWxlQ29udGVudCA9ICcnOwoKICAgICAgICBvcGVuIG15ICRGaWxlaGFuZGxlLCAnPCcsICRGaWxlIG9yIGRpZSAiQ2FuJ3Qgb3BlbjogJEZpbGU6ICQhIjsKCiAgICAgICAgIyBzZXQgYmluIG1vZGUKICAgICAgICBiaW5tb2RlICRGaWxlaGFuZGxlOwogICAgICAgIHdoaWxlICg8JEZpbGVoYW5kbGU+KSB7CiAgICAgICAgICAgICRGaWxlQ29udGVudCAuPSAkXzsKICAgICAgICB9CiAgICAgICAgY2xvc2UgJEZpbGVoYW5kbGU7CgogICAgICAgICRTZWxmLT57RW5jb2RlT2JqZWN0fS0+RW5jb2RlKCBcJEZpbGVDb250ZW50ICk7CiAgICAgICAgJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtGaWxlfVsxXXtGaWxlfQogICAgICAgICAgICA9ICRYTUxIYXNoWzBdLT57b3Ryc19zdGF0c31bMV17RmlsZX1bMV17Q29udGVudH07CiAgICAgICAgJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtGaWxlfVsxXXtDb250ZW50fSAgICA9IGVuY29kZV9iYXNlNjQoICRGaWxlQ29udGVudCwgJycgKTsKICAgICAgICAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde0ZpbGV9WzFde0xvY2F0aW9ufSAgID0gJEZpbGVMb2NhdGlvbjsKICAgICAgICAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde0ZpbGV9WzFde1Blcm1pc3Npb259ID0gJzY0NCc7CiAgICAgICAgJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtGaWxlfVsxXXtFbmNvZGV9ICAgICA9ICdCYXNlNjQnOwogICAgfQoKICAgICMgZGVsZXRlIGNyZWF0ZSBhbmQgY2hhbmdlIGRhdGEKICAgIGRlbGV0ZSggJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtDaGFuZ2VkfSApOwogICAgZGVsZXRlKCAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde0NoYW5nZWRCeX0gKTsKICAgIGRlbGV0ZSggJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtDcmVhdGVkfSApOwogICAgZGVsZXRlKCAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde0NyZWF0ZWRCeX0gKTsKICAgIGRlbGV0ZSggJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtTdGF0SUR9ICk7CiAgICBpZiAoICEkUGFyYW17RXhwb3J0U3RhdE51bWJlcn0gKSB7CiAgICAgICAgZGVsZXRlKCAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde1N0YXROdW1iZXJ9ICk7CiAgICB9CgogICAgIyB3cmFwcGVyIHRvIGNoYW5nZSBpZHMgaW4gdXNlZCBzcGVsbGluZwogICAgIyB3cmFwIHBlcm1pc3Npb25zCiAgICBmb3IgbXkgJElEICggQHsgJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtQZXJtaXNzaW9ufSB9ICkgewogICAgICAgIGlmICgkSUQpIHsKICAgICAgICAgICAgbXkgJUdyb3VwID0gJFNlbGYtPntHcm91cE9iamVjdH0tPkdyb3VwR2V0KCBJRCA9PiAoICRJRC0+e0NvbnRlbnR9ICkgKTsKICAgICAgICAgICAgJElELT57Q29udGVudH0gPSAkR3JvdXB7TmFtZX07CiAgICAgICAgfQogICAgfQoKICAgICMgd3JhcCBvYmplY3QgZGVwZW5kZW5kIGlkcwogICAgaWYgKCAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde09iamVjdH1bMV17Q29udGVudH0gKSB7CgogICAgICAgICMgbG9hZCBtb2R1bGUKICAgICAgICBteSAkT2JqZWN0TW9kdWxlID0gJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtPYmplY3RNb2R1bGV9WzFde0NvbnRlbnR9OwogICAgICAgICRTZWxmLT57TWFpbk9iamVjdH0tPlJlcXVpcmUoJE9iamVjdE1vZHVsZSk7CiAgICAgICAgbXkgJFN0YXRPYmplY3QgPSAkT2JqZWN0TW9kdWxlLT5uZXcoICV7JFNlbGZ9ICk7CgogICAgICAgICMgbG9hZCBhdHRyaWJ1dGVzCiAgICAgICAgJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXQogICAgICAgICAgICA9ICRTdGF0T2JqZWN0LT5FeHBvcnRXcmFwcGVyKCAleyAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFdIH0gKTsKICAgIH0KCiAgICAjIGNvbnZlcnQgaGFzaCB0byBzdHJpbmcKICAgICRGaWxle0NvbnRlbnR9ID0gJFNlbGYtPntYTUxPYmplY3R9LT5YTUxIYXNoMlhNTChAWE1MSGFzaCk7CgogICAgcmV0dXJuIFwlRmlsZTsKfQoKPWl0ZW0gSW1wb3J0KCkKCmltcG9ydCBhIHN0YXRzIGZyb20geG1sIGZpbGUKCiAgICBteSAkU3RhdElEID0gJFN0YXRzT2JqZWN0LT5JbXBvcnQoCiAgICAgICAgQ29udGVudCA9PiAkVXBsb2FkU3R1ZmZ7Q29udGVudH0sCiAgICApOwoKPWN1dAoKc3ViIEltcG9ydCB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgIG15ICRTdGF0SUQgPSAxOwoKICAgIGlmICggISRQYXJhbXtDb250ZW50fSApIHsKICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgTWVzc2FnZSAgPT4gIkltcG9ydDogTmVlZCBDb250ZW50ISIKICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgIH0KICAgIG15IEBYTUxIYXNoID0gJFNlbGYtPntYTUxPYmplY3R9LT5YTUxQYXJzZTJYTUxIYXNoKCBTdHJpbmcgPT4gJFBhcmFte0NvbnRlbnR9ICk7CgogICAgaWYgKCAhJFhNTEhhc2hbMF0gKSB7CiAgICAgICAgc2hpZnQgQFhNTEhhc2g7CiAgICB9CgogICAgIyBHZXQgbmV3IFN0YXRJRAogICAgbXkgQEtleXMgPSAkU2VsZi0+e1hNTE9iamVjdH0tPlhNTEhhc2hTZWFyY2goIFR5cGUgPT4gJ1N0YXRzJywgKTsKCiAgICAjIGNoZWNrIGlmIHRoZSByZXF1aXJlZCBlbGVtZW50cyBhcmUgYXZhaWxhYmxlCiAgICBmb3IgbXkgJEVsZW1lbnQgKAogICAgICAgIHF3KCBEZXNjcmlwdGlvbiBGb3JtYXQgT2JqZWN0IE9iamVjdE1vZHVsZSBQZXJtaXNzaW9uIFN0YXRUeXBlIFN1bUNvbCBTdW1Sb3cgVGl0bGUgVmFsaWQpCiAgICAgICAgKQogICAgewogICAgICAgIGlmICggIWRlZmluZWQgJFhNTEhhc2hbMF17b3Ryc19zdGF0c31bMV17JEVsZW1lbnR9WzFde0NvbnRlbnR9ICkgewogICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgICAgICBNZXNzYWdlID0+CiAgICAgICAgICAgICAgICAgICAgIkltcG9ydDogQ2FuJ3QgaW1wb3J0IFN0YXQsIGJlY2F1c2UgdGhlIHJlcXVpcmVkIGVsZW1lbnQgJEVsZW1lbnQgaXMgbm90IGF2YWlsYWJsZSEiCiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgIyBpZi1jbGF1c2UgaWYgYSBzdGF0LXhtbCBpbmNsdWRlcyBhIFN0YXROdW1iZXIKICAgIGlmICggJFhNTEhhc2hbMF17b3Ryc19zdGF0c31bMV17U3RhdE51bWJlcn0gKSB7CiAgICAgICAgbXkgJFhNTFN0YXRzSUQgPSAkWE1MSGFzaFswXXtvdHJzX3N0YXRzfVsxXXtTdGF0TnVtYmVyfVsxXXtDb250ZW50fQogICAgICAgICAgICAtICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCJTdGF0czo6U3RhdHNTdGFydE51bWJlciIpOwogICAgICAgIGZvciBteSAkS2V5IChAS2V5cykgewogICAgICAgICAgICBpZiAoICRLZXkgZXEgJFhNTFN0YXRzSUQgKSB7CiAgICAgICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICAgICAgICAgIE1lc3NhZ2UgPT4KICAgICAgICAgICAgICAgICAgICAgICAgIkltcG9ydDogQ2FuJ3QgaW1wb3J0IFN0YXROdW1iZXIgJEtleSwgYmVjYXVzZSB0aGlzIFN0YXROdW1iZXIgaXMgYWxyZWFkeSB1c2VkISIKICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgJFN0YXRJRCA9ICRYTUxTdGF0c0lEOwogICAgfQoKICAgICMgaWYgbm8gc3RhdHMgbnVtYmVyIGF2YWlsYWJsZSB1c2UgdGhpcyBmdW5jdGlvbgogICAgZWxzZSB7CiAgICAgICAgbXkgQFNvcnRLZXlzID0gc29ydCB7ICRhIDw9PiAkYiB9IEBLZXlzOwogICAgICAgIGlmIChAU29ydEtleXMpIHsKICAgICAgICAgICAgJFN0YXRJRCA9ICRTb3J0S2V5c1stMV0gKyAxOwogICAgICAgIH0KICAgIH0KCiAgICAjIGdldCB0aW1lCiAgICBteSAkVGltZVN0YW1wID0gJFNlbGYtPntUaW1lT2JqZWN0fS0+U3lzdGVtVGltZTJUaW1lU3RhbXAoCiAgICAgICAgU3lzdGVtVGltZSA9PiAkU2VsZi0+e1RpbWVPYmplY3R9LT5TeXN0ZW1UaW1lKCksCiAgICApOwoKICAgICMgbWV0YSB0YWdzCiAgICAkWE1MSGFzaFswXXtvdHJzX3N0YXRzfVsxXXtDcmVhdGVkfVsxXXtDb250ZW50fSAgID0gJFRpbWVTdGFtcDsKICAgICRYTUxIYXNoWzBde290cnNfc3RhdHN9WzFde0NyZWF0ZWRCeX1bMV17Q29udGVudH0gPSAkU2VsZi0+e1VzZXJJRH07CiAgICAkWE1MSGFzaFswXXtvdHJzX3N0YXRzfVsxXXtDaGFuZ2VkfVsxXXtDb250ZW50fSAgID0gJFRpbWVTdGFtcDsKICAgICRYTUxIYXNoWzBde290cnNfc3RhdHN9WzFde0NoYW5nZWRCeX1bMV17Q29udGVudH0gPSAkU2VsZi0+e1VzZXJJRH07CiAgICAkWE1MSGFzaFswXXtvdHJzX3N0YXRzfVsxXXtTdGF0TnVtYmVyfVsxXXtDb250ZW50fQogICAgICAgID0gJFN0YXRJRCArICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCJTdGF0czo6U3RhdHNTdGFydE51bWJlciIpOwoKICAgIG15ICREeW5hbWljRmlsZXMgPSAkU2VsZi0+R2V0RHluYW1pY0ZpbGVzKCk7CgogICAgIyBCZWNhdXNlIHNvbWUgeG1sLXBhcnNlciBpbnNlcnQgXG4gaW5zdGVhZCBvZiA8ZXhhbXBsZT48ZXhhbXBsZT4KICAgIGlmICggJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtPYmplY3R9WzFde0NvbnRlbnR9ICkgewogICAgICAgICRYTUxIYXNoWzBdLT57b3Ryc19zdGF0c31bMV17T2JqZWN0fVsxXXtDb250ZW50fSA9fiBze1xufXt9eDsKICAgIH0KCiAgICBpZiAoCiAgICAgICAgJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtPYmplY3R9WzFde0NvbnRlbnR9CiAgICAgICAgJiYgISREeW5hbWljRmlsZXMtPnsgJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtPYmplY3R9WzFde0NvbnRlbnR9IH0KICAgICAgICApCiAgICB7CiAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgIE1lc3NhZ2UgPT4KICAgICAgICAgICAgICAgICJJbXBvcnQ6IE9iamVjdCAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde09iamVjdH1bMV17Q29udGVudH0gZG9lc24ndCBleGlzdHMhIgogICAgICAgICk7CiAgICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBpZiAoCiAgICAgICAgJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtTdGF0VHlwZX1bMV17Q29udGVudH0KICAgICAgICAmJiAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde1N0YXRUeXBlfVsxXXtDb250ZW50fSBlcSAnc3RhdGljJwogICAgICAgICkKICAgIHsKICAgICAgICBteSAkRmlsZUxvY2F0aW9uID0gJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtPYmplY3RNb2R1bGV9WzFde0NvbnRlbnR9OwogICAgICAgICRGaWxlTG9jYXRpb24gPX4gc3s6On17XC99Z3g7CiAgICAgICAgJEZpbGVMb2NhdGlvbiA9ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdIb21lJykgLiAnLycgLiAkRmlsZUxvY2F0aW9uIC4gJy5wbSc7CgogICAgICAgICMgd3JpdGUgZmlsZQogICAgICAgIGlmICggb3BlbiBteSAkRmlsZWhhbmRsZSwgJz4nLCAkRmlsZUxvY2F0aW9uICkgewogICAgICAgICAgICBwcmludCBTVERFUlIKICAgICAgICAgICAgICAgICJOb3RpY2U6IEluc3RhbGwgJEZpbGVMb2NhdGlvbiAoJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtGaWxlfVsxXXtQZXJtaXNzaW9ufSkhXG4iOwogICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde0ZpbGV9WzFde0VuY29kZX0KICAgICAgICAgICAgICAgICYmICRYTUxIYXNoWzBdLT57b3Ryc19zdGF0c31bMV17RmlsZX1bMV17RW5jb2RlfSBlcSAnQmFzZTY0JwogICAgICAgICAgICAgICAgKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde0ZpbGV9WzFde0NvbnRlbnR9CiAgICAgICAgICAgICAgICAgICAgPSBkZWNvZGVfYmFzZTY0KCAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde0ZpbGV9WzFde0NvbnRlbnR9ICk7CiAgICAgICAgICAgICAgICAkU2VsZi0+e0VuY29kZU9iamVjdH0tPkVuY29kZU91dHB1dCgKICAgICAgICAgICAgICAgICAgICBcJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtGaWxlfVsxXXtDb250ZW50fQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgIyBzZXQgYmluIG1vZGUKICAgICAgICAgICAgYmlubW9kZSAkRmlsZWhhbmRsZTsKICAgICAgICAgICAgcHJpbnQgJEZpbGVoYW5kbGUgJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtGaWxlfVsxXXtDb250ZW50fTsKICAgICAgICAgICAgY2xvc2UgJEZpbGVoYW5kbGU7CgogICAgICAgICAgICAjIHNldCBwZXJtaXNzaW9uCiAgICAgICAgICAgIGlmICggbGVuZ3RoKCAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde0ZpbGV9WzFde1Blcm1pc3Npb259ICkgPT0gMyApIHsKICAgICAgICAgICAgICAgICRYTUxIYXNoWzBdLT57b3Ryc19zdGF0c31bMV17RmlsZX1bMV17UGVybWlzc2lvbn0KICAgICAgICAgICAgICAgICAgICA9ICIwJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtGaWxlfVsxXXtQZXJtaXNzaW9ufSI7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2htb2QoIG9jdCggJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtGaWxlfVsxXXtQZXJtaXNzaW9ufSApLCAkRmlsZUxvY2F0aW9uICk7CiAgICAgICAgICAgICRYTUxIYXNoWzBdLT57b3Ryc19zdGF0c31bMV17RmlsZX1bMV17Q29udGVudH0KICAgICAgICAgICAgICAgID0gJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtGaWxlfVsxXXtGaWxlfTsKICAgICAgICAgICAgZGVsZXRlICRYTUxIYXNoWzBdLT57b3Ryc19zdGF0c31bMV17RmlsZX1bMV17RmlsZX07CiAgICAgICAgICAgIGRlbGV0ZSAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde0ZpbGV9WzFde0xvY2F0aW9ufTsKICAgICAgICAgICAgZGVsZXRlICRYTUxIYXNoWzBdLT57b3Ryc19zdGF0c31bMV17RmlsZX1bMV17UGVybWlzc2lvbn07CiAgICAgICAgICAgIGRlbGV0ZSAkWE1MSGFzaFswXS0+e290cnNfc3RhdHN9WzFde0ZpbGV9WzFde0VuY29kZX07CiAgICAgICAgfQogICAgfQoKICAgICMgd3JhcHBlciB0byBjaGFuZ2UgdXNlZCBzcGVsbGluZyBpbiBpZHMKICAgICMgd3JhcCBwZXJtaXNzaW9ucwogICAgbXkgJUdyb3VwcyA9ICRTZWxmLT57R3JvdXBPYmplY3R9LT5Hcm91cExpc3QoIFZhbGlkID0+IDEgKTsKCiAgICBOQU1FOgogICAgZm9yIG15ICROYW1lICggQHsgJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtQZXJtaXNzaW9ufSB9ICkgewogICAgICAgIG5leHQgTkFNRSBpZiAhJE5hbWU7CgogICAgICAgIG15ICRGbGFnID0gMTsKICAgICAgICBJRDoKICAgICAgICBmb3IgbXkgJElEICgga2V5cyAlR3JvdXBzICkgewogICAgICAgICAgICBpZiAoICRHcm91cHN7JElEfSBlcSAkTmFtZS0+e0NvbnRlbnR9ICkgewogICAgICAgICAgICAgICAgJE5hbWUtPntDb250ZW50fSA9ICRJRDsKICAgICAgICAgICAgICAgICRGbGFnID0gMDsKICAgICAgICAgICAgICAgIGxhc3QgSUQ7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKCRGbGFnKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgICAgIE1lc3NhZ2UgID0+ICJJbXBvcnQ6IENhbicgZmluZCB0aGUgcGVybWlzc2lvbiAoZ3JvdXApICROYW1lLT57Q29udGVudH0hIgogICAgICAgICAgICApOwogICAgICAgICAgICAkTmFtZSA9IHVuZGVmOwogICAgICAgIH0KICAgIH0KCiAgICAjIHdyYXAgb2JqZWN0IGRlcGVuZGVuZCBpZHMKICAgIGlmICggJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXXtPYmplY3R9WzFde0NvbnRlbnR9ICkgewoKICAgICAgICAjIGxvYWQgbW9kdWxlCiAgICAgICAgbXkgJE9iamVjdE1vZHVsZSA9ICRYTUxIYXNoWzBdLT57b3Ryc19zdGF0c31bMV17T2JqZWN0TW9kdWxlfVsxXXtDb250ZW50fTsKICAgICAgICAkU2VsZi0+e01haW5PYmplY3R9LT5SZXF1aXJlKCRPYmplY3RNb2R1bGUpOwogICAgICAgIG15ICRTdGF0T2JqZWN0ID0gJE9iamVjdE1vZHVsZS0+bmV3KCAleyRTZWxmfSApOwoKICAgICAgICAjIGxvYWQgYXR0cmlidXRlcwogICAgICAgICRYTUxIYXNoWzBdLT57b3Ryc19zdGF0c31bMV0KICAgICAgICAgICAgPSAkU3RhdE9iamVjdC0+SW1wb3J0V3JhcHBlciggJXsgJFhNTEhhc2hbMF0tPntvdHJzX3N0YXRzfVsxXSB9ICk7CiAgICB9CgogICAgIyBuZXcKICAgIHJldHVybiAwIGlmICEkU2VsZi0+e1hNTE9iamVjdH0tPlhNTEhhc2hBZGQoCiAgICAgICAgVHlwZSAgICA9PiAnU3RhdHMnLAogICAgICAgIEtleSAgICAgPT4gJFN0YXRJRCwKICAgICAgICBYTUxIYXNoID0+IFxAWE1MSGFzaCwKICAgICk7CgogICAgcmV0dXJuICRTdGF0SUQ7Cn0KCj1pdGVtIEdldFBhcmFtcygpCgogICAgZ2V0IGFsbCBlZGl0IHBhcmFtcyBmcm9tIHN0YXRzIGZvciB2aWV3CgogICAgbXkgJFBhcmFtcyA9ICRTdGF0c09iamVjdC0+R2V0UGFyYW1zKFN0YXRJRCA9PiAnMTIzJyk7Cgo9Y3V0CgpzdWIgR2V0UGFyYW1zIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgbXkgQFBhcmFtcyA9ICgpOwoKICAgIGlmICggISRQYXJhbXtTdGF0SUR9ICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAiR2V0UGFyYW1zOiBOZWVkIFN0YXRJRCEiCiAgICAgICAgKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgbXkgJFN0YXQgPSAkU2VsZi0+U3RhdHNHZXQoIFN0YXRJRCA9PiAkUGFyYW17U3RhdElEfSApOwoKICAgICMgc3RhdGljCiAgICAjIGRvbid0IHJlbW92ZSB0aGlzIGlmIGNsYXVzZSwgYmVjYXVzZSBpcyByZXF1aXJlZCBmb3IgbWtTdGF0cy5wbAogICAgaWYgKCAkU3RhdC0+e1N0YXRUeXBlfSBlcSAnc3RhdGljJyApIHsKCiAgICAgICAgIyBsb2FkIHN0YXRpYyBtb2R1bAogICAgICAgIG15ICRPYmplY3RNb2R1bGUgPSAkU3RhdC0+e09iamVjdE1vZHVsZX07CiAgICAgICAgJFNlbGYtPntNYWluT2JqZWN0fS0+UmVxdWlyZSgkT2JqZWN0TW9kdWxlKTsKICAgICAgICBteSAkU3RhdE9iamVjdCA9ICRPYmplY3RNb2R1bGUtPm5ldyggJXskU2VsZn0gKTsKCiAgICAgICAgIyBnZXQgcGFyYW1zCiAgICAgICAgQFBhcmFtcyA9ICRTdGF0T2JqZWN0LT5QYXJhbSgpOwogICAgfQogICAgcmV0dXJuIFxAUGFyYW1zOwp9Cgo9aXRlbSBTdGF0c1J1bigpCgogICAgcnVuIGEgc3RhdHMuLi4KCiAgICBteSAkU3RhdEFycmF5ID0gJFN0YXRzT2JqZWN0LT5TdGF0c1J1bigKICAgICAgICBTdGF0SUQgPT4gJzEyMycsCiAgICAgICAgR2V0UGFyYW0gPT4gXCVHZXRQYXJhbSwKICAgICk7Cgo9Y3V0CgpzdWIgU3RhdHNSdW4gewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGNoZWNrIG5lZWRlZCBwYXJhbXMKICAgIE5FRUQ6CiAgICBmb3IgbXkgJE5lZWQgKHF3KFN0YXRJRCBHZXRQYXJhbSkpIHsKICAgICAgICBuZXh0IE5FRUQgaWYgJFBhcmFteyROZWVkfTsKICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgTWVzc2FnZSAgPT4gIlN0YXRzUnVuOiBOZWVkICROZWVkISIKICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgIH0KCiAgICAjIHVzZSB0aGUgbWlycm9yIGRiIGlmIGNvbmZpZ3VyZWQKICAgIGlmICggJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoJ0NvcmU6Ok1pcnJvckRCOjpEU04nKSApIHsKICAgICAgICBteSAkRXh0cmFEYXRhYmFzZU9iamVjdCA9IEtlcm5lbDo6U3lzdGVtOjpEQi0+bmV3KAogICAgICAgICAgICBMb2dPYmplY3QgICAgPT4gJFNlbGYtPntMb2dPYmplY3R9LAogICAgICAgICAgICBDb25maWdPYmplY3QgPT4gJFNlbGYtPntDb25maWdPYmplY3R9LAogICAgICAgICAgICBNYWluT2JqZWN0ICAgPT4gJFNlbGYtPntNYWluT2JqZWN0fSwKICAgICAgICAgICAgRW5jb2RlT2JqZWN0ID0+ICRTZWxmLT57RW5jb2RlT2JqZWN0fSwKICAgICAgICAgICAgRGF0YWJhc2VEU04gID0+ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdDb3JlOjpNaXJyb3JEQjo6RFNOJyksCiAgICAgICAgICAgIERhdGFiYXNlVXNlciA9PiAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnQ29yZTo6TWlycm9yREI6OlVzZXInKSwKICAgICAgICAgICAgRGF0YWJhc2VQdyAgID0+ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdDb3JlOjpNaXJyb3JEQjo6UGFzc3dvcmQnKSwKICAgICAgICApOwogICAgICAgIGlmICggISRFeHRyYURhdGFiYXNlT2JqZWN0ICkgewogICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgICAgICBNZXNzYWdlICA9PiAnVGhlcmUgaXMgbm8gTWlycm9EQiEnLAogICAgICAgICAgICApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgICRTZWxmLT57REJPYmplY3R9ID0gJEV4dHJhRGF0YWJhc2VPYmplY3Q7CiAgICB9CgogICAgbXkgJFN0YXQgICAgID0gJFNlbGYtPlN0YXRzR2V0KCBTdGF0SUQgPT4gJFBhcmFte1N0YXRJRH0gKTsKICAgIG15ICVHZXRQYXJhbSA9ICV7ICRQYXJhbXtHZXRQYXJhbX0gfTsKICAgIG15IEBSZXN1bHQgICA9ICgpOwoKICAgICMgZ2V0IGRhdGEgaWYgaXQgaXMgYSBzdGF0aWMgc3RhdHMKICAgIGlmICggJFN0YXQtPntTdGF0VHlwZX0gZXEgJ3N0YXRpYycgKSB7CiAgICAgICAgQFJlc3VsdCA9ICRTZWxmLT5fR2VuZXJhdGVTdGF0aWNTdGF0cygKICAgICAgICAgICAgT2JqZWN0TW9kdWxlID0+ICRTdGF0LT57T2JqZWN0TW9kdWxlfSwKICAgICAgICAgICAgR2V0UGFyYW0gICAgID0+ICRQYXJhbXtHZXRQYXJhbX0sCiAgICAgICAgICAgIFRpdGxlICAgICAgICA9PiAkU3RhdC0+e1RpdGxlfSwKICAgICAgICAgICAgU3RhdElEICAgICAgID0+ICRTdGF0LT57U3RhdElEfSwKICAgICAgICAgICAgQ2FjaGUgICAgICAgID0+ICRTdGF0LT57Q2FjaGV9LAogICAgICAgICk7CiAgICB9CgogICAgIyBnZXQgZGF0YSBpZiBpdCBpcyBhIGR5bmF5bWljIHN0YXRzCiAgICBlbHNpZiAoICRTdGF0LT57U3RhdFR5cGV9IGVxICdkeW5hbWljJyApIHsKICAgICAgICBAUmVzdWx0ID0gJFNlbGYtPl9HZW5lcmF0ZUR5bmFtaWNTdGF0cygKICAgICAgICAgICAgT2JqZWN0TW9kdWxlICAgICA9PiAkU3RhdC0+e09iamVjdE1vZHVsZX0sCiAgICAgICAgICAgIE9iamVjdCAgICAgICAgICAgPT4gJFN0YXQtPntPYmplY3R9LAogICAgICAgICAgICBVc2VBc1h2YWx1ZSAgICAgID0+ICRHZXRQYXJhbXtVc2VBc1h2YWx1ZX0sCiAgICAgICAgICAgIFVzZUFzVmFsdWVTZXJpZXMgPT4gJEdldFBhcmFte1VzZUFzVmFsdWVTZXJpZXN9LAogICAgICAgICAgICBVc2VBc1Jlc3RyaWN0aW9uID0+ICRHZXRQYXJhbXtVc2VBc1Jlc3RyaWN0aW9ufSwKICAgICAgICAgICAgVGl0bGUgICAgICAgICAgICA9PiAkU3RhdC0+e1RpdGxlfSwKICAgICAgICAgICAgU3RhdElEICAgICAgICAgICA9PiAkU3RhdC0+e1N0YXRJRH0sCiAgICAgICAgICAgIENhY2hlICAgICAgICAgICAgPT4gJFN0YXQtPntDYWNoZX0sCiAgICAgICAgKTsKICAgIH0KCiAgICAjIGJ1aWxkIHN1bSBpbiByb3cgb3IgY29sCiAgICBpZiAoICggJFN0YXQtPntTdW1Sb3d9IHx8ICRTdGF0LT57U3VtQ29sfSApICYmICRTdGF0LT57Rm9ybWF0fSAhfiBte15HRDo6R3JhcGhcLip9eCApIHsKICAgICAgICByZXR1cm4gJFNlbGYtPlN1bUJ1aWxkKAogICAgICAgICAgICBBcnJheSAgPT4gXEBSZXN1bHQsCiAgICAgICAgICAgIFN1bVJvdyA9PiAkU3RhdC0+e1N1bVJvd30sCiAgICAgICAgICAgIFN1bUNvbCA9PiAkU3RhdC0+e1N1bUNvbH0sCiAgICAgICAgKTsKICAgIH0KICAgIHJldHVybiBcQFJlc3VsdDsKfQoKPWl0ZW0gU3RyaW5nQW5kVGltZXN0YW1wMkZpbGVuYW1lKCkKCmJ1aWxkcyBhIGZpbGVuYW1lIHdpdGggYSBzdHJpbmcgYW5kIGEgdGltZXN0YW1wLgooc3BhY2Ugd2lsbCBiZSByZXBsYWNlZCB3aXRoIF8gYW5kIC0gZS5nLiBUaXRsZS1vZi1GaWxlXzIwMDYtMTItMzFfMTEtNTkpCgogICAgbXkgJEZpbGVuYW1lID0gJFN0YXRzT2JqZWN0LT5TdHJpbmdBbmRUaW1lc3RhbXAyRmlsZW5hbWUoU3RyaW5nID0+ICdUaXRsZScpOwoKPWN1dAoKc3ViIFN0cmluZ0FuZFRpbWVzdGFtcDJGaWxlbmFtZSB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgIGlmICggISRQYXJhbXtTdHJpbmd9ICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAnU3RyaW5nQW5kVGltZXN0YW1wMkZpbGVuYW1lOiBOZWVkIFN0cmluZyEnCiAgICAgICAgKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgbXkgKCAkcywgJG0sICRoLCAkRCwgJE0sICRZICkgPSAkU2VsZi0+e1RpbWVPYmplY3R9LT5TeXN0ZW1UaW1lMkRhdGUoCiAgICAgICAgU3lzdGVtVGltZSA9PiAkU2VsZi0+e1RpbWVPYmplY3R9LT5TeXN0ZW1UaW1lKCksCiAgICApOwogICAgJE0gPSBzcHJpbnRmKCAiJTAyZCIsICRNICk7CiAgICAkRCA9IHNwcmludGYoICIlMDJkIiwgJEQgKTsKICAgICRoID0gc3ByaW50ZiggIiUwMmQiLCAkaCApOwogICAgJG0gPSBzcHJpbnRmKCAiJTAyZCIsICRtICk7CgogICAgJFBhcmFte1N0cmluZ30gPSAkU2VsZi0+e01haW5PYmplY3R9LT5GaWxlbmFtZUNsZWFuVXAoCiAgICAgICAgRmlsZW5hbWUgPT4gJFBhcmFte1N0cmluZ30sCiAgICAgICAgVHlwZSAgICAgPT4gJ0F0dGFjaG1lbnQnLAogICAgKTsKCiAgICBteSAkRmlsZW5hbWUgPSAkUGFyYW17U3RyaW5nfSAuICdfJyAuICIkWS0kTS0kRCIgLiAnXycgLiAiJGgtJG0iOwoKICAgIHJldHVybiAkRmlsZW5hbWU7Cn0KCnN1YiBfTW9udGhBcnJheSB7CiAgICBteSBATW9udGhBcnJheQogICAgICAgID0gKAogICAgICAgICcnLCAnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLCAnSnVsJywgJ0F1ZycsICdTZXAnLCAnT2N0JywgJ05vdicsICdEZWMnLAogICAgICAgICk7CgogICAgcmV0dXJuIFxATW9udGhBcnJheTsKfQoKPWl0ZW0gU3RhdE51bWJlcjJTdGF0SUQoKQoKaW5zZXJ0IHRoZSBzdGF0IG51bWJlciBnZXQgdGhlIHN0YXQgaWQKCiAgICBteSAkU3RhdElEID0gJFN0YXRzT2JqZWN0LT5TdGF0TnVtYmVyMlN0YXRJRCgKICAgICAgICBTdGF0TnVtYmVyID0+IDExMjEyCiAgICApOwoKPWN1dAoKc3ViIFN0YXROdW1iZXIyU3RhdElEIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgaWYgKCAhJFBhcmFte1N0YXROdW1iZXJ9ICkgewogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAnU3RhdE51bWJlcjJTdGF0SUQ6IE5lZWQgU3RhdE51bWJlciEnLAogICAgICAgICk7CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIG15IEBLZXkgPSAkU2VsZi0+e1hNTE9iamVjdH0tPlhNTEhhc2hTZWFyY2goCiAgICAgICAgVHlwZSA9PiAnU3RhdHMnLAogICAgICAgIFdoYXQgPT4gWyB7ICJbJV17J290cnNfc3RhdHMnfVslXXsnU3RhdE51bWJlcid9WyVdeydDb250ZW50J30iID0+ICRQYXJhbXtTdGF0TnVtYmVyfSwgfSwgXSwKICAgICk7CiAgICBpZiAoIEBLZXkgJiYgJCNLZXkgPCAxICkgewogICAgICAgIHJldHVybiAkS2V5WzBdOwogICAgfQoKICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgTWVzc2FnZSAgPT4gJ1N0YXROdW1iZXIgaW52YWxpZCEnLAogICAgKTsKICAgIHJldHVybiAwOwp9CgpzdWIgX0F1dG9tYXRpY1NhbXBsZUltcG9ydCB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgIG15ICRMYW5ndWFnZSAgPSAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnRGVmYXVsdExhbmd1YWdlJyk7CiAgICBteSAkRGlyZWN0b3J5ID0gJFNlbGYtPntTdGF0c1RlbXBEaXJ9OwoKICAgIGlmICggIW9wZW5kaXIoIERJUkUsICREaXJlY3RvcnkgKSApIHsKICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZygKICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgTWVzc2FnZSAgPT4gIkNhbiBub3Qgb3BlbiBEaXJlY3Rvcnk6ICREaXJlY3RvcnkiLAogICAgICAgICk7CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgICMgY2hlY2sgaWYgc3RhdHMgaW4gdGhlIGRlZmF1bHQgbGFuZ3VhZ2UgYXZhaWxhYmxlLCBpZiBub3QgdXNlIGVuCiAgICBteSAkRmxhZyA9IDA7CiAgICB3aGlsZSAoIGRlZmluZWQoIG15ICRGaWxlbmFtZSA9IHJlYWRkaXIgRElSRSApICkgewogICAgICAgIGlmICggJEZpbGVuYW1lID1+IG17Xi4qXC4kTGFuZ3VhZ2VcLnhtbCR9eCApIHsKICAgICAgICAgICAgJEZsYWcgPSAxOwogICAgICAgIH0KICAgIH0KCiAgICByZXdpbmRkaXIoRElSRSk7CiAgICBpZiAoICEkRmxhZyApIHsKICAgICAgICAkTGFuZ3VhZ2UgPSAnZW4nOwogICAgfQoKICAgIHdoaWxlICggZGVmaW5lZCggbXkgJEZpbGVuYW1lID0gcmVhZGRpciBESVJFICkgKSB7CiAgICAgICAgaWYgKCAkRmlsZW5hbWUgPX4gbXteLipcLiRMYW5ndWFnZVwueG1sJH14ICkgewoKICAgICAgICAgICAgIyBjaGVjayBmaWxlc2l6ZQogICAgICAgICAgICAjICAgICAgICAgICAgbXkgJEZpbGVzaXplID0gLXMgJERpcmVjdG9yeS4kRmlsZW5hbWU7CiAgICAgICAgICAgICMgICAgICAgICAgICBpZiAoJEZpbGVzaXplID4gJE1heEZpbGVzaXplKSB7CiAgICAgICAgICAgICMgICAgICAgICAgICAgICAgcHJpbnQgIkZpbGU6ICRGaWxlbmFtZSB0byBiaWchIG1heC4gJE1heEZpbGVzaXplIGJ5dGUgYWxsb3dlZC5cbiI7CiAgICAgICAgICAgICMgICAgICAgICAgICAgICAgJENvbW1vbk9iamVjdHtMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgICMgICAgICAgICAgICAgICAgICAgIFByaW9yaXR5ID0+ICdlcnJvcicsCiAgICAgICAgICAgICMgICAgICAgICAgICAgICAgICAgIE1lc3NhZ2UgPT4gIkNhbid0IGZpbGUgaW1wb3J0ZWQ6ICREaXJlY3RvcnkuJEZpbGVuYW1lIiwKICAgICAgICAgICAgIyAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAjICAgICAgICAgICAgICAgIG5leHQ7CiAgICAgICAgICAgICMgICAgICAgICAgICB9CgogICAgICAgICAgICAjIHJlYWQgZmlsZQogICAgICAgICAgICBteSAkRmlsZWhhbmRsZTsKICAgICAgICAgICAgaWYgKCAhb3BlbiAkRmlsZWhhbmRsZSwgJzwnLCAkRGlyZWN0b3J5IC4gJEZpbGVuYW1lICkgewogICAgICAgICAgICAgICAgJFNlbGYtPntMb2dPYmplY3R9LT5Mb2coCiAgICAgICAgICAgICAgICAgICAgUHJpb3JpdHkgPT4gJ2Vycm9yJywKICAgICAgICAgICAgICAgICAgICBNZXNzYWdlICA9PiAiQ2FuIG5vdCBvcGVuIEZpbGU6ICIgLiAkRGlyZWN0b3J5IC4gJEZpbGVuYW1lLAogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIGNsb3NlZGlyKERJUkUpOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CgogICAgICAgICAgICBteSAkQ29udGVudCA9ICcnOwogICAgICAgICAgICB3aGlsZSAoPCRGaWxlaGFuZGxlPikgewogICAgICAgICAgICAgICAgJENvbnRlbnQgLj0gJF87CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2xvc2UgJEZpbGVoYW5kbGU7CgogICAgICAgICAgICBteSAkU3RhdElEID0gJFNlbGYtPkltcG9ydCggQ29udGVudCA9PiAkQ29udGVudCwgKTsKICAgICAgICB9CiAgICB9CiAgICBjbG9zZWRpcihESVJFKTsKCiAgICByZXR1cm4gMTsKfQoKPWl0ZW0gU3RhdHNJbnN0YWxsKCkKCmluc3RhbGxzIHN0YXRzCgogICAgbXkgJFJlc3VsdCA9ICRDb2RlT2JqZWN0LT5TdGF0c0luc3RhbGwoCiAgICAgICAgRmlsZVByZWZpeCA9PiAnRkFRJywgICMgKG9wdGlvbmFsKQogICAgKTsKCj1jdXQKCnN1YiBTdGF0c0luc3RhbGwgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIHByZXBhcmUgcHJlZml4CiAgICAkUGFyYW17RmlsZVByZWZpeH0gPSAkUGFyYW17RmlsZVByZWZpeH0gPyAkUGFyYW17RmlsZVByZWZpeH0gLiAnLScgOiAnJzsKCiAgICAjIHN0YXJ0IEF1dG9tYXRpY1NhbXBsZUltcG9ydCBpZiBubyBzdGF0cyBhcmUgaW5zdGFsbGVkCiAgICAkU2VsZi0+R2V0U3RhdHNMaXN0KCk7CgogICAgIyBjbGVhbnVwIHN0YXRzCiAgICAkU2VsZi0+U3RhdHNDbGVhblVwKCk7CgogICAgIyBnZXQgbGlzdCBvZiBzdGF0cyBmaWxlcwogICAgbXkgQFN0YXRzRmlsZUxpc3QgPSBnbG9iICRTZWxmLT57U3RhdHNUZW1wRGlyfSAuICRQYXJhbXtGaWxlUHJlZml4fSAuICcqLnhtbCc7CgogICAgIyBpbXBvcnQgdGhlIHN0YXRzCiAgICBteSAkSW5zdGFsbGVkUG9zdGZpeCA9ICcuaW5zdGFsbGVkJzsKICAgIEZJTEU6CiAgICBmb3IgbXkgJEZpbGUgKCBzb3J0IEBTdGF0c0ZpbGVMaXN0ICkgewoKICAgICAgICBuZXh0IEZJTEUgaWYgIS1mICRGaWxlOwogICAgICAgIG5leHQgRklMRSBpZiAtZSAkRmlsZSAuICRJbnN0YWxsZWRQb3N0Zml4OwoKICAgICAgICAjIHJlYWQgZmlsZSBjb250ZW50CiAgICAgICAgbXkgJFhNTENvbnRlbnRSZWYgPSAkU2VsZi0+e01haW5PYmplY3R9LT5GaWxlUmVhZCgKICAgICAgICAgICAgTG9jYXRpb24gPT4gJEZpbGUsCiAgICAgICAgKTsKCiAgICAgICAgIyBpbXBvcnQgc3RhdAogICAgICAgIG15ICRTdGF0SUQgPSAkU2VsZi0+SW1wb3J0KAogICAgICAgICAgICBDb250ZW50ID0+ICR7JFhNTENvbnRlbnRSZWZ9LAogICAgICAgICk7CgogICAgICAgIG5leHQgRklMRSBpZiAhJFN0YXRJRDsKCiAgICAgICAgIyB3cml0ZSBpbnN0YWxsZWQgZmlsZSB3aXRoIHN0YXQgaWQKICAgICAgICAkU2VsZi0+e01haW5PYmplY3R9LT5GaWxlV3JpdGUoCiAgICAgICAgICAgIENvbnRlbnQgID0+IFwkU3RhdElELAogICAgICAgICAgICBMb2NhdGlvbiA9PiAkRmlsZSAuICRJbnN0YWxsZWRQb3N0Zml4LAogICAgICAgICk7CiAgICB9CgogICAgcmV0dXJuIDE7Cn0KCj1pdGVtIFN0YXRzVW5pbnN0YWxsKCkKCnVuaW5zdGFsbHMgc3RhdHMKCiAgICBteSAkUmVzdWx0ID0gJFN0YXRzT2JqZWN0LT5TdGF0c1VuaW5zdGFsbCgKICAgICAgICBGaWxlUHJlZml4ID0+ICdGQVEnLCAgIyAob3B0aW9uYWwpCiAgICApOwoKPWN1dAoKc3ViIFN0YXRzVW5pbnN0YWxsIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBwcmVwYXJlIHByZWZpeAogICAgJFBhcmFte0ZpbGVQcmVmaXh9ID0gJFBhcmFte0ZpbGVQcmVmaXh9ID8gJFBhcmFte0ZpbGVQcmVmaXh9IC4gJy0nIDogJyc7CgogICAgIyBnZXQgbGlzdCBvZiBpbnN0YWxsZWQgc3RhdHMgZmlsZXMKICAgIG15IEBTdGF0c0ZpbGVMaXN0ID0gZ2xvYiAkU2VsZi0+e1N0YXRzVGVtcERpcn0gLiAkUGFyYW17RmlsZVByZWZpeH0gLiAnKi54bWwuaW5zdGFsbGVkJzsKCiAgICAjIGRlbGV0ZSB0aGUgc3RhdHMKICAgIGZvciBteSAkRmlsZSAoIHNvcnQgQFN0YXRzRmlsZUxpc3QgKSB7CgogICAgICAgICMgcmVhZCBmaWxlIGNvbnRlbnQKICAgICAgICBteSAkU3RhdHNJRFJlZiA9ICRTZWxmLT57TWFpbk9iamVjdH0tPkZpbGVSZWFkKAogICAgICAgICAgICBMb2NhdGlvbiA9PiAkRmlsZSwKICAgICAgICApOwoKICAgICAgICAjIGRlbGV0ZSBzdGF0cwogICAgICAgICRTZWxmLT5TdGF0c0RlbGV0ZSgKICAgICAgICAgICAgU3RhdElEID0+ICR7JFN0YXRzSURSZWZ9LAogICAgICAgICk7CiAgICB9CgogICAgIyBjbGVhbnVwIHN0YXRzCiAgICAkU2VsZi0+U3RhdHNDbGVhblVwKCk7CgogICAgcmV0dXJuIDE7Cn0KCj1pdGVtIFN0YXRzQ2xlYW5VcCgpCgpyZW1vdmVkIHN0YXRzIHdpdGggbm90IGV4aXN0aW5nIGJhY2tlbmQgZmlsZQoKICAgIG15ICRSZXN1bHQgPSAkU3RhdHNPYmplY3QtPlN0YXRzQ2xlYW5VcCgpOwoKPWN1dAoKc3ViIFN0YXRzQ2xlYW5VcCB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgICMgZ2V0IGEgbGlzdCBvZiBhbGwgc3RhdHMKICAgIG15ICRMaXN0UmVmID0gJFNlbGYtPkdldFN0YXRzTGlzdCgpOwoKICAgIHJldHVybiBpZiAhJExpc3RSZWY7CiAgICByZXR1cm4gaWYgcmVmICRMaXN0UmVmIG5lICdBUlJBWSc7CgogICAgU1RBVFNJRDoKICAgIGZvciBteSAkU3RhdHNJRCAoIEB7JExpc3RSZWZ9ICkgewoKICAgICAgICAjIGdldCBzdGF0cwogICAgICAgIG15ICRIYXNoUmVmID0gJFNlbGYtPlN0YXRzR2V0KAogICAgICAgICAgICBTdGF0SUQgICAgICAgICAgICAgPT4gJFN0YXRzSUQsCiAgICAgICAgICAgIE5vT2JqZWN0QXR0cmlidXRlcyA9PiAxLAogICAgICAgICk7CgogICAgICAgIG5leHQgU1RBVFNJRCBpZiAkSGFzaFJlZgogICAgICAgICAgICAgICAgJiYgcmVmICRIYXNoUmVmIGVxICdIQVNIJwogICAgICAgICAgICAgICAgJiYgJEhhc2hSZWYtPntPYmplY3RNb2R1bGV9CiAgICAgICAgICAgICAgICAmJiAkU2VsZi0+e01haW5PYmplY3R9LT5SZXF1aXJlKCAkSGFzaFJlZi0+e09iamVjdE1vZHVsZX0gKTsKCiAgICAgICAgIyBkZWxldGUgc3RhdHMKICAgICAgICAkU2VsZi0+U3RhdHNEZWxldGUoIFN0YXRJRCA9PiAkU3RhdHNJRCApOwogICAgfQoKICAgIHJldHVybiAxOwp9CgojID1pdGVtIF9HZXRDYWNoZVN0cmluZygpCiMKIyByZXR1cm4gdGhlIGNhY2hlIHN0cmluZwojCiMgICAgIG15ICRSZXN1bHQgPSAkU3RhdHNPYmplY3QtPl9HZXRDYWNoZVN0cmluZygKIyAgICAgICAgIFVzZUFzWHZhbHVlICAgICAgPT4gJFVzZUFzWHZhbHVlUmVmCiMgICAgICAgICBVc2VBc1ZhbHVlU2VyaWVzID0+ICRVc2VBc1ZhbHVlU2VyaWVzUmVmLAojICAgICAgICAgVXNlQXNSZXN0cmljdGlvbiA9PiAkVXNlQXNSZXN0cmljdGlvblJlZiwKIyAgICAgKTsKIwojID1jdXQKCnN1YiBfR2V0Q2FjaGVTdHJpbmcgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKICAgIG15ICRDYWNoZVN0cmluZyA9ICcnOwoKICAgIGZvciBteSAkVXNlIChxdyhVc2VBc1h2YWx1ZSBVc2VBc1ZhbHVlU2VyaWVzIFVzZUFzUmVzdHJpY3Rpb24pKSB7CiAgICAgICAgVVNFUkVGOgogICAgICAgIGZvciBteSAkVXNlUmVmICggQHsgJFBhcmFteyRVc2V9IH0gKSB7CiAgICAgICAgICAgICRDYWNoZVN0cmluZyAuPSAnX18nIC4gJFVzZVJlZi0+e05hbWV9IC4gJ18nOwogICAgICAgICAgICBpZiAoICRVc2VSZWYtPntTZWxlY3RlZFZhbHVlc30gKSB7CiAgICAgICAgICAgICAgICAkQ2FjaGVTdHJpbmcgLj0gam9pbiggJ18nLCBzb3J0IEB7ICRVc2VSZWYtPntTZWxlY3RlZFZhbHVlc30gfSApCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzaWYgKCAkVXNlUmVmLT57VGltZVN0YXJ0fSAmJiAkVXNlUmVmLT57VGltZVN0b3B9ICkgewogICAgICAgICAgICAgICAgJENhY2hlU3RyaW5nIC49ICRVc2VSZWYtPntUaW1lU3RhcnR9IC4gJy0nIC4gJFVzZVJlZi0+e1RpbWVTdG9wfTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBteSAkTUQ1S2V5ID0gJFNlbGYtPntNYWluT2JqZWN0fS0+RmlsZW5hbWVDbGVhblVwKAogICAgICAgIEZpbGVuYW1lID0+ICRDYWNoZVN0cmluZywKICAgICAgICBUeXBlICAgICA9PiAnbWQ1JywKICAgICk7CgogICAgcmV0dXJuICRNRDVLZXk7Cn0KCjE7Cgo9YmFjawoKPWhlYWQxIFRFUk1TIEFORCBDT05ESVRJT05TCgpUaGlzIHNvZnR3YXJlIGlzIHBhcnQgb2YgdGhlIE9UUlMgcHJvamVjdCAoaHR0cDovL290cnMub3JnLykuCgpUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQp0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CmRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCgo9aGVhZDEgVkVSU0lPTgoKJFJldmlzaW9uOiAxLjMgJCAkRGF0ZTogMjAxMC8wMy8wMSAxMjoxNzoyMyAkCgo9Y3V0Cg==</File>
        <File Location="Kernel/System/VirtualFS.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/System/VirtualFS/DB.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9TeXN0ZW0vVmlydHVhbEZTL0RCLnBtIC0gYWxsIHZpcnR1YWwgZnMgZnVuY3Rpb25zCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMDkgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIC0tCiMgJElkOiBEQi5wbSx2IDEuMSAyMDA5LzEyLzE0IDE0OjI3OjQzIHJlYiBFeHAgJAojICRPbGRJZDogREIucG0sdiAxLjIgMjAwOS8xMi8xMCAxMTo1OTo1NCBiZXMgRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpTeXN0ZW06OlZpcnR1YWxGUzo6REI7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7CnVzZSBNSU1FOjpCYXNlNjQ7Cgp1c2UgdmFycyBxdygkVkVSU0lPTik7CiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjEgJCkgWzFdOwoKc3ViIG5ldyB7CiAgICBteSAoICRUeXBlLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgYWxsb2NhdGUgbmV3IGhhc2ggZm9yIG9iamVjdAogICAgbXkgJFNlbGYgPSB7fTsKICAgIGJsZXNzKCAkU2VsZiwgJFR5cGUgKTsKCiAgICAjIGNoZWNrIG5lZWRlZCBvYmplY3RzCiAgICBmb3IgKHF3KERCT2JqZWN0IENvbmZpZ09iamVjdCBMb2dPYmplY3QgTWFpbk9iamVjdCBFbmNvZGVPYmplY3QpKSB7CiAgICAgICAgJFNlbGYtPnskX30gPSAkUGFyYW17JF99IHx8IGRpZSAiR290IG5vICRfISI7CiAgICB9CgogICAgIyBjb25maWcgKG5vdCB1c2VkIHJpZ2h0IG5vdykKICAgICRTZWxmLT57Q29tcHJlc3N9ID0gMDsKICAgICRTZWxmLT57Q3J5cHR9ICAgID0gMDsKCiAgICByZXR1cm4gJFNlbGY7Cn0KCnN1YiBSZWFkIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGZvciAocXcoQmFja2VuZEtleSBNb2RlKSkgewogICAgICAgIGlmICggISRQYXJhbXskX30gKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKCBQcmlvcml0eSA9PiAnZXJyb3InLCBNZXNzYWdlID0+ICJOZWVkICRfISIgKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgIH0KCiAgICBteSAkQXR0cmlidXRlcyA9ICRTZWxmLT5fQmFja2VuZEtleVBhcnNlKCVQYXJhbSk7CgogICAgbXkgJEVuY29kZSA9IDE7CiAgICBpZiAoIGxjICRQYXJhbXtNb2RlfSBlcSAnYmluYXJ5JyApIHsKICAgICAgICAkRW5jb2RlID0gMDsKICAgIH0KICAgIHJldHVybiBpZiAhJFNlbGYtPntEQk9iamVjdH0tPlByZXBhcmUoCiAgICAgICAgU1FMICAgID0+ICdTRUxFQ1QgY29udGVudCBGUk9NIHZpcnR1YWxfZnNfZGIgV0hFUkUgaWQgPSA/JywKICAgICAgICBCaW5kICAgPT4gWyBcJEF0dHJpYnV0ZXMtPntGaWxlSUR9IF0sCiAgICAgICAgRW5jb2RlID0+IFskRW5jb2RlXSwKICAgICk7CiAgICBteSAkQ29udGVudDsKICAgIHdoaWxlICggbXkgQFJvdyA9ICRTZWxmLT57REJPYmplY3R9LT5GZXRjaHJvd0FycmF5KCkgKSB7CgogICAgICAgICMgZGVjb2RlIGF0dGFjaG1lbnQgaWYgaXQncyBlLiBnLiBhIHBvc3RncmVzcWwgYmFja2VuZCEhIQogICAgICAgIGlmICggISRTZWxmLT57REJPYmplY3R9LT5HZXREYXRhYmFzZUZ1bmN0aW9uKCdEaXJlY3RCbG9iJykgKSB7CiAgICAgICAgICAgICRDb250ZW50ID0gZGVjb2RlX2Jhc2U2NCggJFJvd1swXSApOwogICAgICAgICAgICBpZiAoJEVuY29kZSkgewogICAgICAgICAgICAgICAgJFNlbGYtPntFbmNvZGVPYmplY3R9LT5FbmNvZGUoIFwkQ29udGVudCApOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICAkQ29udGVudCA9ICRSb3dbMF07CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIGlmICEkQ29udGVudDsKCiAgICAjIHVuY29tcHJlc3MgKGluIGNhc2UpCiAgICBpZiAoICRBdHRyaWJ1dGVzLT57Q29tcHJlc3N9ICkgewoKICAgICAgICAjICRDb250ZW50ID0gLi4uCiAgICB9CgogICAgIyBkZWNyeXB0IChpbiBjYXNlKQogICAgaWYgKCAkQXR0cmlidXRlcy0+e0NyeXB0fSApIHsKCiAgICAgICAgIyAkQ29udGVudCA9IC4uLgogICAgfQoKICAgIHJldHVybiBcJENvbnRlbnQ7Cn0KCnN1YiBXcml0ZSB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVlZGVkIHN0dWZmCiAgICBmb3IgKHF3KENvbnRlbnQgRmlsZW5hbWUgTW9kZSkpIHsKICAgICAgICBpZiAoICEkUGFyYW17JF99ICkgewogICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZyggUHJpb3JpdHkgPT4gJ2Vycm9yJywgTWVzc2FnZSA9PiAiTmVlZCAkXyEiICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgIyBjaGVjayBpZiBhbHJlYWR5IGV4aXN0cwogICAgbXkgJEV4aXN0cyA9ICRTZWxmLT5fRmlsZUxvb2t1cCggJFBhcmFte0ZpbGVuYW1lfSApOwogICAgcmV0dXJuIGlmICRFeGlzdHM7CgogICAgIyBjb21wcmVzcyAoaW4gY2FzZSkKICAgIGlmICggJFNlbGYtPntDb21wcmVzc30gKSB7CgogICAgICAgICMgJFBhcmFte0NvbnRlbnR9ID0gLi4uCiAgICB9CgogICAgIyBjcnlwdCAoaW4gY2FzZSkKICAgIGlmICggJFNlbGYtPntDcnlwdH0gKSB7CgogICAgICAgICMgJFBhcmFte0NvbnRlbnR9ID0gLi4uCiAgICB9CgogICAgIyBlbmNvZGUgYXR0YWNobWVudCBpZiBpdCdzIGEgcG9zdGdyZXNxbCBiYWNrZW5kISEhCiAgICBpZiAoICEkU2VsZi0+e0RCT2JqZWN0fS0+R2V0RGF0YWJhc2VGdW5jdGlvbignRGlyZWN0QmxvYicpICkgewogICAgICAgICRTZWxmLT57RW5jb2RlT2JqZWN0fS0+RW5jb2RlT3V0cHV0KCAkUGFyYW17Q29udGVudH0gKTsKICAgICAgICBteSAkQ29udGVudCA9IGVuY29kZV9iYXNlNjQoICR7ICRQYXJhbXtDb250ZW50fSB9ICk7CiAgICAgICAgJFBhcmFte0NvbnRlbnR9ID0gXCRDb250ZW50OwogICAgfQoKICAgIG15ICRFbmNvZGUgPSAxOwogICAgaWYgKCBsYyAkUGFyYW17TW9kZX0gZXEgJ2JpbmFyeScgKSB7CiAgICAgICAgJEVuY29kZSA9IDA7CiAgICB9CiAgICByZXR1cm4gaWYgISRTZWxmLT57REJPYmplY3R9LT5EbygKICAgICAgICBTUUwgPT4gJ0lOU0VSVCBJTlRPIHZpcnR1YWxfZnNfZGIgKGZpbGVuYW1lLCBjb250ZW50LCBjcmVhdGVfdGltZSkgJwogICAgICAgICAgICAuICdWQUxVRVMgKCA/LCA/LCBjdXJyZW50X3RpbWVzdGFtcCApJywKICAgICAgICBCaW5kID0+IFsgXCRQYXJhbXtGaWxlbmFtZX0sICRQYXJhbXtDb250ZW50fSBdLAogICAgKTsKCiAgICBteSAkRmlsZUlEID0gJFNlbGYtPl9GaWxlTG9va3VwKCAkUGFyYW17RmlsZW5hbWV9ICk7CiAgICByZXR1cm4gaWYgISRGaWxlSUQ7CgogICAgbXkgJEJhY2tlbmRLZXkgPSAkU2VsZi0+X0JhY2tlbmRLZXlHZW5lcmF0ZSgKICAgICAgICBGaWxlSUQgICA9PiAkRmlsZUlELAogICAgICAgIENvbXByZXNzID0+ICRTZWxmLT57Q29tcHJlc3N9LAogICAgICAgIENyeXB0ICAgID0+ICRTZWxmLT57Q3J5cHR9LAogICAgICAgIE1vZGUgICAgID0+ICRQYXJhbXtNb2RlfSwKICAgICAgICBWZXJzaW9uICA9PiAkVkVSU0lPTiwKICAgICk7CgogICAgcmV0dXJuICRCYWNrZW5kS2V5Owp9CgpzdWIgRGVsZXRlIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGZvciAocXcoQmFja2VuZEtleSkpIHsKICAgICAgICBpZiAoICEkUGFyYW17JF99ICkgewogICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZyggUHJpb3JpdHkgPT4gJ2Vycm9yJywgTWVzc2FnZSA9PiAiTmVlZCAkXyEiICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgbXkgJEF0dHJpYnV0ZXMgPSAkU2VsZi0+X0JhY2tlbmRLZXlQYXJzZSglUGFyYW0pOwoKICAgIHJldHVybiBpZiAhJFNlbGYtPntEQk9iamVjdH0tPkRvKAogICAgICAgIFNRTCAgPT4gJ0RFTEVURSBGUk9NIHZpcnR1YWxfZnNfZGIgV0hFUkUgaWQgPSA/JywKICAgICAgICBCaW5kID0+IFsgXCRBdHRyaWJ1dGVzLT57RmlsZUlEfSBdLAogICAgKTsKICAgIHJldHVybiAxOwp9CgpzdWIgX0ZpbGVMb29rdXAgewogICAgbXkgKCAkU2VsZiwgJEZpbGVuYW1lICkgPSBAXzsKCiAgICAjIGxvb2t1cAogICAgcmV0dXJuIGlmICEkU2VsZi0+e0RCT2JqZWN0fS0+UHJlcGFyZSgKICAgICAgICBTUUwgID0+ICdTRUxFQ1QgaWQgRlJPTSB2aXJ0dWFsX2ZzX2RiIFdIRVJFIGZpbGVuYW1lID0gPycsCiAgICAgICAgQmluZCA9PiBbIFwkRmlsZW5hbWUgXSwKICAgICk7CiAgICBteSAkRmlsZUlEOwogICAgd2hpbGUgKCBteSBAUm93ID0gJFNlbGYtPntEQk9iamVjdH0tPkZldGNocm93QXJyYXkoKSApIHsKICAgICAgICAkRmlsZUlEID0gJFJvd1swXTsKICAgIH0KICAgIHJldHVybiAkRmlsZUlEOwp9CgpzdWIgX0JhY2tlbmRLZXlHZW5lcmF0ZSB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgIG15ICRCYWNrZW5kS2V5ID0gJyc7CiAgICBmb3IgbXkgJEtleSAoIHNvcnQga2V5cyAlUGFyYW0gKSB7CiAgICAgICAgJEJhY2tlbmRLZXkgLj0gIiRLZXk9JFBhcmFteyRLZXl9OyI7CiAgICB9CiAgICByZXR1cm4gJEJhY2tlbmRLZXk7Cn0KCnN1YiBfQmFja2VuZEtleVBhcnNlIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgIyBjaGVjayBuZWVkZWQgc3R1ZmYKICAgIGZvciAocXcoQmFja2VuZEtleSkpIHsKICAgICAgICBpZiAoICEkUGFyYW17JF99ICkgewogICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZyggUHJpb3JpdHkgPT4gJ2Vycm9yJywgTWVzc2FnZSA9PiAiTmVlZCAkXyEiICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgbXkgJUF0dHJpYnV0ZXM7CiAgICBteSBAUGFpcnMgPSBzcGxpdCAvOy8sICRQYXJhbXtCYWNrZW5kS2V5fTsKICAgIGZvciBteSAkUGFpciAoQFBhaXJzKSB7CiAgICAgICAgbXkgKCAkS2V5LCAkVmFsdWUgKSA9IHNwbGl0IC89LywgJFBhaXI7CiAgICAgICAgJEF0dHJpYnV0ZXN7JEtleX0gPSAkVmFsdWU7CiAgICB9CiAgICByZXR1cm4gXCVBdHRyaWJ1dGVzOwp9CgoxOwo=</File>
        <File Location="Kernel/System/VirtualFS/FS.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9TeXN0ZW0vVmlydHVhbEZTL0ZTLnBtIC0gYWxsIHZpcnR1YWwgZnMgZnVuY3Rpb25zCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMDkgT1RSUyBBRywgaHR0cDovL290cnMub3JnLwojIC0tCiMgJElkOiBGUy5wbSx2IDEuMSAyMDA5LzEyLzE0IDE0OjI3OjQzIHJlYiBFeHAgJAojICRPbGRJZDogRlMucG0sdiAxLjIgMjAwOS8xMi8xMCAxMTo1OTo1NCBiZXMgRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpTeXN0ZW06OlZpcnR1YWxGUzo6RlM7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7CnVzZSBGaWxlOjpQYXRoOwp1c2UgRmlsZTo6QmFzZW5hbWU7CgojIHRvIGdldCBpdCB3cml0YWJsZSBmb3IgdGhlIG90cnMgZ3JvdXAgKGp1c3QgaW4gY2FzZSkKdW1hc2sgMDAyOwoKdXNlIHZhcnMgcXcoJFZFUlNJT04pOwokVkVSU0lPTiA9IHF3KCRSZXZpc2lvbjogMS4xICQpIFsxXTsKCnN1YiBuZXcgewogICAgbXkgKCAkVHlwZSwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGFsbG9jYXRlIG5ldyBoYXNoIGZvciBvYmplY3QKICAgIG15ICRTZWxmID0ge307CiAgICBibGVzcyggJFNlbGYsICRUeXBlICk7CgogICAgIyBjaGVjayBuZWVkZWQgb2JqZWN0cwogICAgZm9yIChxdyhEQk9iamVjdCBDb25maWdPYmplY3QgTG9nT2JqZWN0IE1haW5PYmplY3QgRW5jb2RlT2JqZWN0KSkgewogICAgICAgICRTZWxmLT57JF99ID0gJFBhcmFteyRffSB8fCBkaWUgIkdvdCBubyAkXyEiOwogICAgfQoKICAgICMgZ2V0IGRhdGEgZGlyCiAgICAkU2VsZi0+e0RhdGFEaXJ9ICAgID0gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoJ0hvbWUnKSAuICcvdmFyL3ZpcnR1YWxmcyc7CiAgICAkU2VsZi0+e1Blcm1pc3Npb259ID0gJzY2NCc7CgogICAgIyBjaGVjayBmcyB3cml0ZSBwZXJtaXNzaW9ucyEKICAgIG15ICRQYXRoID0gIiRTZWxmLT57RGF0YURpcn0vY2hlY2tfcGVybWlzc2lvbnMuJCQiOwogICAgaWYgKCAtZCAkUGF0aCApIHsKICAgICAgICBGaWxlOjpQYXRoOjpybXRyZWUoIFskUGF0aF0gKSB8fCBkaWUgIkNhbid0IHJlbW92ZSAkUGF0aDogJCFcbiI7CiAgICB9CiAgICBpZiAoIG1rZGlyKCAiJFNlbGYtPntEYXRhRGlyfS9jaGVja19wZXJtaXNzaW9uc18kJCIsIDAyMiApICkgewogICAgICAgIGlmICggIXJtZGlyKCIkU2VsZi0+e0RhdGFEaXJ9L2NoZWNrX3Blcm1pc3Npb25zXyQkIikgKSB7CiAgICAgICAgICAgIGRpZSAiQ2FuJ3QgcmVtb3ZlICRTZWxmLT57RGF0YURpcn0vY2hlY2tfcGVybWlzc2lvbnNfJCQ6ICQhXG4iOwogICAgICAgIH0KICAgICAgICBpZiAoIEZpbGU6OlBhdGg6Om1rcGF0aCggWyRQYXRoXSwgMCwgMDc3NSApICkgewogICAgICAgICAgICBGaWxlOjpQYXRoOjpybXRyZWUoIFskUGF0aF0gKSB8fCBkaWUgIkNhbid0IHJlbW92ZSAkUGF0aDogJCFcbiI7CiAgICAgICAgfQogICAgfQoKICAgICMgY3JlYXRlIGRhdGEgZGlyCiAgICBpZiAoICEtZCAkU2VsZi0+e0RhdGFEaXJ9ICkgewogICAgICAgIG1rZGlyICRTZWxmLT57RGF0YURpcn0gfHwgZGllICQhOwogICAgfQoKICAgICMgY29uZmlnIChub3QgdXNlZCByaWdodCBub3cpCiAgICAkU2VsZi0+e0NvbXByZXNzfSA9IDA7CiAgICAkU2VsZi0+e0NyeXB0fSAgICA9IDA7CgogICAgcmV0dXJuICRTZWxmOwp9CgpzdWIgUmVhZCB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVlZGVkIHN0dWZmCiAgICBmb3IgKHF3KEJhY2tlbmRLZXkgTW9kZSkpIHsKICAgICAgICBpZiAoICEkUGFyYW17JF99ICkgewogICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZyggUHJpb3JpdHkgPT4gJ2Vycm9yJywgTWVzc2FnZSA9PiAiTmVlZCAkXyEiICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgbXkgJEF0dHJpYnV0ZXMgPSAkU2VsZi0+X0JhY2tlbmRLZXlQYXJzZSglUGFyYW0pOwoKICAgIG15ICRDb250ZW50ID0gJFNlbGYtPntNYWluT2JqZWN0fS0+RmlsZVJlYWQoCiAgICAgICAgRGlyZWN0b3J5ID0+ICRTZWxmLT57RGF0YURpcn0gLiAkQXR0cmlidXRlcy0+e0RhdGFEaXJ9LAogICAgICAgIEZpbGVuYW1lICA9PiAkQXR0cmlidXRlcy0+e0ZpbGVuYW1lfSwKICAgICAgICBNb2RlICAgICAgPT4gJFBhcmFte01vZGV9LAogICAgKTsKCiAgICAjIHVuY29tcHJlc3MgKGluIGNhc2UpCiAgICBpZiAoICRBdHRyaWJ1dGVzLT57Q29tcHJlc3N9ICkgewoKICAgICAgICAjICRDb250ZW50ID0gLi4uCiAgICB9CgogICAgIyBkZWNyeXB0IChpbiBjYXNlKQogICAgaWYgKCAkQXR0cmlidXRlcy0+e0NyeXB0fSApIHsKCiAgICAgICAgIyAkQ29udGVudCA9IC4uLgogICAgfQoKICAgIHJldHVybiBpZiAhJENvbnRlbnQ7CiAgICByZXR1cm4gJENvbnRlbnQ7Cn0KCnN1YiBXcml0ZSB7CiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOwoKICAgICMgY2hlY2sgbmVlZGVkIHN0dWZmCiAgICBmb3IgKHF3KENvbnRlbnQgRmlsZW5hbWUgTW9kZSkpIHsKICAgICAgICBpZiAoICEkUGFyYW17JF99ICkgewogICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZyggUHJpb3JpdHkgPT4gJ2Vycm9yJywgTWVzc2FnZSA9PiAiTmVlZCAkXyEiICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgIyBjb21wcmVzcyAoaW4gY2FzZSkKICAgIGlmICggJFNlbGYtPntDb21wcmVzc30gKSB7CgogICAgICAgICMgJFBhcmFte0NvbnRlbnR9ID0gLi4uCiAgICB9CgogICAgIyBjcnlwdCAoaW4gY2FzZSkKICAgIGlmICggJFNlbGYtPntDcnlwdH0gKSB7CgogICAgICAgICMgJFBhcmFte0NvbnRlbnR9ID0gLi4uCiAgICB9CgogICAgbXkgJE1ENSA9ICRTZWxmLT57TWFpbk9iamVjdH0tPkZpbGVuYW1lQ2xlYW5VcCgKICAgICAgICBGaWxlbmFtZSA9PiAkUGFyYW17RmlsZW5hbWV9LAogICAgICAgIFR5cGUgICAgID0+ICdNRDUnLAogICAgKTsKCiAgICBteSAkRGF0YURpciA9ICcnOwogICAgbXkgQERpcnMgPSAkU2VsZi0+X1NwbGl0RGlyKCBGaWxlbmFtZSA9PiAkTUQ1ICk7CiAgICBmb3IgbXkgJERpciAoQERpcnMpIHsKICAgICAgICAkRGF0YURpciAuPSAnLycgLiAkRGlyOwogICAgICAgIG5leHQgaWYgLWUgJFNlbGYtPntEYXRhRGlyfSAuICREYXRhRGlyOwogICAgICAgIG5leHQgaWYgbWtkaXIgJFNlbGYtPntEYXRhRGlyfSAuICREYXRhRGlyOwogICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKAogICAgICAgICAgICBQcmlvcml0eSA9PiAnZXJyb3InLAogICAgICAgICAgICBNZXNzYWdlICA9PiAiQ2FuJ3QgY3JlYXRlICRTZWxmLT57RGF0YURpcn0kRGF0YURpcjogJCEiLAogICAgICAgICk7CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgICMgd3JpdGUgYXJ0aWNsZSB0byBmcwogICAgbXkgJEZpbGVuYW1lID0gJFNlbGYtPntNYWluT2JqZWN0fS0+RmlsZVdyaXRlKAogICAgICAgIERpcmVjdG9yeSAgPT4gJFNlbGYtPntEYXRhRGlyfSAuICREYXRhRGlyLAogICAgICAgIEZpbGVuYW1lICAgPT4gJE1ENSwKICAgICAgICBNb2RlICAgICAgID0+ICRQYXJhbXtNb2RlfSwKICAgICAgICBDb250ZW50ICAgID0+ICRQYXJhbXtDb250ZW50fSwKICAgICAgICBQZXJtaXNzaW9uID0+ICRTZWxmLT57UGVybWlzc2lvbn0sCiAgICApOwogICAgcmV0dXJuIGlmICEkRmlsZW5hbWU7CgogICAgbXkgJEJhY2tlbmRLZXkgPSAkU2VsZi0+X0JhY2tlbmRLZXlHZW5lcmF0ZSgKICAgICAgICBGaWxlbmFtZSA9PiAkRmlsZW5hbWUsCiAgICAgICAgRGF0YURpciAgPT4gJERhdGFEaXIsCiAgICAgICAgQ29tcHJlc3MgPT4gJFNlbGYtPntDb21wcmVzc30sCiAgICAgICAgQ3J5cHQgICAgPT4gJFNlbGYtPntDcnlwdH0sCiAgICAgICAgTW9kZSAgICAgPT4gJFBhcmFte01vZGV9LAogICAgICAgIFZlcnNpb24gID0+ICRWRVJTSU9OLAogICAgKTsKCiAgICByZXR1cm4gJEJhY2tlbmRLZXk7Cn0KCnN1YiBEZWxldGUgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGNoZWNrIG5lZWRlZCBzdHVmZgogICAgZm9yIChxdyhCYWNrZW5kS2V5KSkgewogICAgICAgIGlmICggISRQYXJhbXskX30gKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKCBQcmlvcml0eSA9PiAnZXJyb3InLCBNZXNzYWdlID0+ICJOZWVkICRfISIgKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgIH0KCiAgICBteSAkQXR0cmlidXRlcyA9ICRTZWxmLT5fQmFja2VuZEtleVBhcnNlKCVQYXJhbSk7CgogICAgcmV0dXJuICRTZWxmLT57TWFpbk9iamVjdH0tPkZpbGVEZWxldGUoCiAgICAgICAgRGlyZWN0b3J5ID0+ICRTZWxmLT57RGF0YURpcn0gLiAkQXR0cmlidXRlcy0+e0RhdGFEaXJ9LAogICAgICAgIEZpbGVuYW1lICA9PiAkQXR0cmlidXRlcy0+e0ZpbGVuYW1lfSwKICAgICk7Cn0KCnN1YiBfQmFja2VuZEtleUdlbmVyYXRlIHsKICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87CgogICAgbXkgJEJhY2tlbmRLZXkgPSAnJzsKICAgIGZvciBteSAkS2V5ICggc29ydCBrZXlzICVQYXJhbSApIHsKICAgICAgICAkQmFja2VuZEtleSAuPSAiJEtleT0kUGFyYW17JEtleX07IjsKICAgIH0KICAgIHJldHVybiAkQmFja2VuZEtleTsKfQoKc3ViIF9CYWNrZW5kS2V5UGFyc2UgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGNoZWNrIG5lZWRlZCBzdHVmZgogICAgZm9yIChxdyhCYWNrZW5kS2V5KSkgewogICAgICAgIGlmICggISRQYXJhbXskX30gKSB7CiAgICAgICAgICAgICRTZWxmLT57TG9nT2JqZWN0fS0+TG9nKCBQcmlvcml0eSA9PiAnZXJyb3InLCBNZXNzYWdlID0+ICJOZWVkICRfISIgKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgIH0KCiAgICBteSAlQXR0cmlidXRlczsKICAgIG15IEBQYWlycyA9IHNwbGl0IC87LywgJFBhcmFte0JhY2tlbmRLZXl9OwogICAgZm9yIG15ICRQYWlyIChAUGFpcnMpIHsKICAgICAgICBteSAoICRLZXksICRWYWx1ZSApID0gc3BsaXQgLz0vLCAkUGFpcjsKICAgICAgICAkQXR0cmlidXRlc3skS2V5fSA9ICRWYWx1ZTsKICAgIH0KICAgIHJldHVybiBcJUF0dHJpYnV0ZXM7Cn0KCnN1YiBfU3BsaXREaXIgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGNoZWNrIG5lZWRlZCBzdHVmZgogICAgZm9yIChxdyhGaWxlbmFtZSkpIHsKICAgICAgICBpZiAoICEkUGFyYW17JF99ICkgewogICAgICAgICAgICAkU2VsZi0+e0xvZ09iamVjdH0tPkxvZyggUHJpb3JpdHkgPT4gJ2Vycm9yJywgTWVzc2FnZSA9PiAiTmVlZCAkXyEiICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CgogICAgbXkgQERpcjsKICAgICREaXJbMF0gPSBzdWJzdHIgJFBhcmFte0ZpbGVuYW1lfSwgMCwgMjsKICAgICREaXJbMV0gPSBzdWJzdHIgJFBhcmFte0ZpbGVuYW1lfSwgMiwgMjsKICAgIHJldHVybiAoICREaXJbMF0sICREaXJbMV0gKTsKfQoKMTsK</File>
        <File Location="scripts/test/CustomerUserService.t" Permission="644" Encode="Base64"></File>
        <File Location="scripts/test/ITSMCIPAllocate.t" Permission="644" Encode="Base64">IyAtLQojIElUU01DSVBBbGxvY2F0ZS50IC0gY3JpdGljYWxpdHksIGltcGFjdCBwcmlvcml0eSB0ZXN0cwojIENvcHlyaWdodCAoQykgMjAwMS0yMDEwIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLm9yZy8KIyAtLQojICRJZDogSVRTTUNJUEFsbG9jYXRlLnQsdiAxLjkgMjAxMC8wMi8xOCAxNDozMzozNiBiZXMgRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnVzZSB2YXJzIHF3KCRTZWxmKTsKCnVzZSBLZXJuZWw6OlN5c3RlbTo6SVRTTUNJUEFsbG9jYXRlOwoKJFNlbGYtPntDSVBBbGxvY2F0ZU9iamVjdH0gPSBLZXJuZWw6OlN5c3RlbTo6SVRTTUNJUEFsbG9jYXRlLT5uZXcoICV7JFNlbGZ9ICk7CgojIGdldCBjdXJyZW50IGFsbG9jYXRpb24gbGlzdCAoVXNlcklEIGlzIG5lZWRlZCkKbXkgJEFsbG9jYXRlRGF0YTEgPSAkU2VsZi0+e0NJUEFsbG9jYXRlT2JqZWN0fS0+QWxsb2NhdGVMaXN0KCk7CgojIGNoZWNrIHRoZSByZXN1bHQKJFNlbGYtPkZhbHNlKCAkQWxsb2NhdGVEYXRhMSwgJ0FsbG9jYXRlTGlzdCgpJyApOwoKIyBnZXQgY3VycmVudCBhbGxvY2F0aW9uIGxpc3QKbXkgJEFsbG9jYXRlRGF0YTIgPSAkU2VsZi0+e0NJUEFsbG9jYXRlT2JqZWN0fS0+QWxsb2NhdGVMaXN0KAogICAgVXNlcklEID0+IDEsCik7CgojIGNoZWNrIHRoZSByZXN1bHQKJFNlbGYtPlRydWUoICRBbGxvY2F0ZURhdGEyLCAnQWxsb2NhdGVMaXN0KCknICk7CgojIGNoZWNrIHRoZSBhbGxvY2F0aW9uIGhhc2gKbXkgJEhhc2hPSyA9IDE7CmlmICggcmVmICRBbGxvY2F0ZURhdGEyIG5lICdIQVNIJyApIHsKICAgICRIYXNoT0sgPSAwOwp9CgojIGNoZWNrIHRoZSBhbGxvY2F0aW9uIDJkIGhhc2gKaWYgKCRIYXNoT0spIHsKCiAgICBJTVBBQ1RJRDoKICAgIGZvciBteSAkSW1wYWN0SUQgKCBrZXlzICV7JEFsbG9jYXRlRGF0YTJ9ICkgewoKICAgICAgICBpZiAoIHJlZiAkQWxsb2NhdGVEYXRhMi0+eyRJbXBhY3RJRH0gbmUgJ0hBU0gnICkgewogICAgICAgICAgICAkSGFzaE9LID0gMDsKICAgICAgICAgICAgbGFzdCBJTVBBQ1RJRDsKICAgICAgICB9CgogICAgICAgIENSSVRJQ0FMSVRZSUQ6CiAgICAgICAgZm9yIG15ICRDcml0aWNhbGl0eUlEICgga2V5cyAleyAkQWxsb2NhdGVEYXRhMi0+eyRJbXBhY3RJRH0gfSApIHsKCiAgICAgICAgICAgIGlmICggISRDcml0aWNhbGl0eUlEIHx8ICEkQWxsb2NhdGVEYXRhMi0+eyRJbXBhY3RJRH0tPnskQ3JpdGljYWxpdHlJRH0gKSB7CiAgICAgICAgICAgICAgICAkSGFzaE9LID0gMDsKICAgICAgICAgICAgICAgIGxhc3QgSU1QQUNUSUQ7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0KCiMgY2hlY2sgSGFzaE9LCiRTZWxmLT5UcnVlKCAkSGFzaE9LLCAnQWxsb2NhdGVMaXN0KCknICk7CgojIGNhbGwgUHJpb3JpdHlBbGxvY2F0aW9uR2V0KCkgZm9yIG9uZSBDcml0aWNhbGl0eS9JbXBhY3QgcGFpcgppZiAoJEhhc2hPSykgewoKICAgIG15ICgkSW1wYWN0SUQpID0ga2V5cyAleyRBbGxvY2F0ZURhdGEyfTsKCiAgICBpZiAoICRBbGxvY2F0ZURhdGEyLT57JEltcGFjdElEfSApIHsKICAgICAgICBteSAoJENyaXRpY2FsaXR5SUQpID0ga2V5cyAleyAkQWxsb2NhdGVEYXRhMi0+eyRJbXBhY3RJRH0gfTsKCiAgICAgICAgbXkgJEV4cGVjdGVkUHJpb3JpdHlJRCA9ICRBbGxvY2F0ZURhdGEyLT57JEltcGFjdElEfS0+eyRDcml0aWNhbGl0eUlEfTsKICAgICAgICBteSAkUHJpb3JpdHlJRCAgICAgICAgID0gJFNlbGYtPntDSVBBbGxvY2F0ZU9iamVjdH0tPlByaW9yaXR5QWxsb2NhdGlvbkdldCgKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAkQ3JpdGljYWxpdHlJRCwKICAgICAgICAgICAgSW1wYWN0SUQgICAgICA9PiAkSW1wYWN0SUQsCiAgICAgICAgKTsKICAgICAgICAkU2VsZi0+SXMoCiAgICAgICAgICAgICRQcmlvcml0eUlELAogICAgICAgICAgICAkRXhwZWN0ZWRQcmlvcml0eUlELAogICAgICAgICAgICAnUHJpb3JpdHlBbGxvY2F0aW9uR2V0KCknLAogICAgICAgICk7CiAgICB9Cn0KCiMgdXBkYXRlIHRoZSBhbGxvY2F0aW9uIGhhc2ggKG5vdCBhbGwgbmVlZGVkIGFyZ3VtZW50cyBnaXZlbikKbXkgJFN1Y2Nlc3MxID0gJFNlbGYtPntDSVBBbGxvY2F0ZU9iamVjdH0tPkFsbG9jYXRlVXBkYXRlKAogICAgVXNlcklEID0+IDEsCik7CgojIGNoZWNrIHRoZSByZXN1bHQKJFNlbGYtPkZhbHNlKCAkU3VjY2VzczEsICdBbGxvY2F0ZVVwZGF0ZSgpJyApOwoKIyB1cGRhdGUgdGhlIGFsbG9jYXRpb24gaGFzaCAobm90IGFsbCBuZWVkZWQgYXJndW1lbnRzIGdpdmVuKQpteSAkU3VjY2VzczIgPSAkU2VsZi0+e0NJUEFsbG9jYXRlT2JqZWN0fS0+QWxsb2NhdGVVcGRhdGUoCiAgICBBbGxvY2F0ZURhdGEgPT4gJEFsbG9jYXRlRGF0YTIsCik7CgojIGNoZWNrIHRoZSByZXN1bHQKJFNlbGYtPkZhbHNlKCAkU3VjY2VzczIsICdBbGxvY2F0ZVVwZGF0ZSgpJyApOwoKIyB1cGRhdGUgdGhlIGFsbG9jYXRpb24gaGFzaCAoYWxsb2NhdGlvbiBoYXNoKQpteSAkU3VjY2VzczMgPSAkU2VsZi0+e0NJUEFsbG9jYXRlT2JqZWN0fS0+QWxsb2NhdGVVcGRhdGUoCiAgICBBbGxvY2F0ZURhdGEgPT4gewogICAgICAgIFRlc3QgID0+ICdhYWEnLAogICAgICAgIFRlc3QyID0+ICdiYmInLAogICAgfSwKICAgIFVzZXJJRCA9PiAxLAopOwoKIyBjaGVjayB0aGUgcmVzdWx0CiRTZWxmLT5GYWxzZSggJFN1Y2Nlc3MzLCAnQWxsb2NhdGVVcGRhdGUoKScgKTsKCiMgdXBkYXRlIHRoZSBhbGxvY2F0aW9uIGhhc2gKbXkgJFN1Y2Nlc3M0ID0gJFNlbGYtPntDSVBBbGxvY2F0ZU9iamVjdH0tPkFsbG9jYXRlVXBkYXRlKAogICAgQWxsb2NhdGVEYXRhID0+ICRBbGxvY2F0ZURhdGEyLAogICAgVXNlcklEICAgICAgID0+IDEsCik7CgojIGNoZWNrIHRoZSByZXN1bHQKJFNlbGYtPlRydWUoICRTdWNjZXNzNCwgJ0FsbG9jYXRlVXBkYXRlKCknICk7CgoxOwo=</File>
        <File Location="scripts/test/Service.t" Permission="644" Encode="Base64">IyAtLQojIFNlcnZpY2UudCAtIFNlcnZpY2UgdGVzdHMKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAwOSBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvCiMgLS0KIyAkSWQ6IFNlcnZpY2UudCx2IDEuMiAyMDA5LzA2LzMwIDE0OjU1OjQ3IHViIEV4cCAkCiMgJE9sZElkOiBTZXJ2aWNlLnQsdiAxLjEwIDIwMDkvMDIvMTYgMTI6NDA6MjMgdHIgRXhwICQKIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKdXNlIHV0Zjg7Cgp1c2UgdmFycyBxdygkU2VsZik7Cgp1c2UgS2VybmVsOjpTeXN0ZW06OlNlcnZpY2U7CnVzZSBLZXJuZWw6OlN5c3RlbTo6VXNlcjsKCiRTZWxmLT57U2VydmljZU9iamVjdH0gPSBLZXJuZWw6OlN5c3RlbTo6U2VydmljZS0+bmV3KCAleyRTZWxmfSApOwokU2VsZi0+e1VzZXJPYmplY3R9ICAgID0gS2VybmVsOjpTeXN0ZW06OlVzZXItPm5ldyggJXskU2VsZn0gKTsKCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICMKIyBtYWtlIHByZXBhcmF0aW9ucwojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjCgojIGNyZWF0ZSBuZWVkZWQgdXNlcnMKbXkgQFVzZXJJRHM7CnsKCiAgICAjIGRpc2FibGUgZW1haWwgY2hlY2tzIHRvIGNyZWF0ZSBuZXcgdXNlcgogICAgbXkgJENoZWNrRW1haWxBZGRyZXNzZXNPcmcgPSAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPkdldCgnQ2hlY2tFbWFpbEFkZHJlc3NlcycpIHx8IDE7CiAgICAkU2VsZi0+e0NvbmZpZ09iamVjdH0tPlNldCgKICAgICAgICBLZXkgICA9PiAnQ2hlY2tFbWFpbEFkZHJlc3NlcycsCiAgICAgICAgVmFsdWUgPT4gMCwKICAgICk7CgogICAgZm9yIG15ICRDb3VudGVyICggMSAuLiAyICkgewoKICAgICAgICAjIGNyZWF0ZSBuZXcgdXNlcnMgZm9yIHRoZSB0ZXN0cwogICAgICAgIG15ICRVc2VySUQgPSAkU2VsZi0+e1VzZXJPYmplY3R9LT5Vc2VyQWRkKAogICAgICAgICAgICBVc2VyRmlyc3RuYW1lID0+ICdTZXJ2aWNlJyAuICRDb3VudGVyLAogICAgICAgICAgICBVc2VyTGFzdG5hbWUgID0+ICdVbml0VGVzdCcsCiAgICAgICAgICAgIFVzZXJMb2dpbiAgICAgPT4gJ1VuaXRUZXN0LVNlcnZpY2UtJyAuICRDb3VudGVyIC4gaW50IHJhbmQgMV8wMDBfMDAwLAogICAgICAgICAgICBVc2VyRW1haWwgICAgID0+ICdVbml0VGVzdC1TZXJ2aWNlLScgLiAkQ291bnRlciAuICdAbG9jYWxob3N0JywKICAgICAgICAgICAgVmFsaWRJRCAgICAgICA9PiAxLAogICAgICAgICAgICBDaGFuZ2VVc2VySUQgID0+IDEsCiAgICAgICAgKTsKCiAgICAgICAgcHVzaCBAVXNlcklEcywgJFVzZXJJRDsKICAgIH0KCiAgICAjIHJlc3RvcmUgb3JpZ2luYWwgZW1haWwgY2hlY2sgcGFyYW0KICAgICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+U2V0KAogICAgICAgIEtleSAgID0+ICdDaGVja0VtYWlsQWRkcmVzc2VzJywKICAgICAgICBWYWx1ZSA9PiAkQ2hlY2tFbWFpbEFkZHJlc3Nlc09yZywKICAgICk7Cn0KCiMgY3JlYXRlIG5lZWRlZCByYW5kb20gc2VydmljZSBuYW1lcwpteSBAU2VydmljZU5hbWU7CmZvciBteSAkQ291bnRlciAoIDEgLi4gMTEgKSB7CiAgICBwdXNoIEBTZXJ2aWNlTmFtZSwgJ1VuaXRUZXN0JyAuIGludCByYW5kIDFfMDAwXzAwMDsKfQoKIyBnZXQgb3JpZ2luYWwgc2VydmljZSBsaXN0IGZvciBsYXRlciBjaGVja3MKbXkgJVNlcnZpY2VMaXN0T3JpZ2luYWwgPSAkU2VsZi0+e1NlcnZpY2VPYmplY3R9LT5TZXJ2aWNlTGlzdCgKICAgIFZhbGlkICA9PiAwLAogICAgVXNlcklEID0+IDEsCik7CgojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjCiMgZGVmaW5lIGdlbmVyYWwgdGVzdHMKIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIwoKbXkgJEl0ZW1EYXRhID0gWwoKICAgICMgdGhpcyBzZXJ2aWNlIGlzIE5PVCBjb21wbGV0ZSBhbmQgbXVzdCBub3QgYmUgYWRkZWQKICAgIHsKICAgICAgICBBZGQgPT4gewogICAgICAgICAgICBWYWxpZElEID0+IDEsCiAgICAgICAgICAgIFVzZXJJRCAgPT4gMSwKICAgICAgICB9LAogICAgfSwKCiAgICAjIHRoaXMgc2VydmljZSBpcyBOT1QgY29tcGxldGUgYW5kIG11c3Qgbm90IGJlIGFkZGVkCiAgICB7CiAgICAgICAgQWRkID0+IHsKICAgICAgICAgICAgTmFtZSAgID0+ICRTZXJ2aWNlTmFtZVswXSwKICAgICAgICAgICAgVXNlcklEID0+IDEsCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGlzIHNlcnZpY2UgaXMgTk9UIGNvbXBsZXRlIGFuZCBtdXN0IG5vdCBiZSBhZGRlZAogICAgewogICAgICAgIEFkZCA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgPT4gJFNlcnZpY2VOYW1lWzBdLAogICAgICAgICAgICBWYWxpZElEID0+IDEsCiAgICAgICAgfSwKICAgIH0sCiMgLS0tCiMgSVRTTQojIC0tLQoKICAgICMgdGhpcyBzZXJ2aWNlIGlzIE5PVCBjb21wbGV0ZSBhbmQgbXVzdCBub3QgYmUgYWRkZWQKICAgIHsKICAgICAgICBBZGQgPT4gewogICAgICAgICAgICBOYW1lICAgID0+ICRTZXJ2aWNlTmFtZVswXSwKICAgICAgICAgICAgVmFsaWRJRCA9PiAxLAogICAgICAgICAgICBVc2VySUQgID0+IDEsCiAgICAgICAgICAgIFR5cGVJRCAgPT4gMSwKICAgICAgICB9LAogICAgfSwKCiAgICAjIHRoaXMgc2VydmljZSBpcyBOT1QgY29tcGxldGUgYW5kIG11c3Qgbm90IGJlIGFkZGVkCiAgICB7CiAgICAgICAgQWRkID0+IHsKICAgICAgICAgICAgTmFtZSAgICAgICAgICA9PiAkU2VydmljZU5hbWVbMF0sCiAgICAgICAgICAgIFZhbGlkSUQgICAgICAgPT4gMSwKICAgICAgICAgICAgVXNlcklEICAgICAgICA9PiAxLAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDEsCiAgICAgICAgfSwKICAgIH0sCiMgLS0tCgogICAgIyB0aGlzIHNlcnZpY2UgbXVzdCBiZSBpbnNlcnRlZCBzdWNlc3NmdWxseQogICAgewogICAgICAgIEFkZCA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgPT4gJFNlcnZpY2VOYW1lWzBdLAogICAgICAgICAgICBWYWxpZElEID0+IDEsCiAgICAgICAgICAgIFVzZXJJRCAgPT4gMSwKIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAgICAgICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAojIC0tLQogICAgICAgIH0sCiAgICAgICAgQWRkR2V0ID0+IHsKICAgICAgICAgICAgUGFyZW50SUQgID0+ICcnLAogICAgICAgICAgICBOYW1lICAgICAgPT4gJFNlcnZpY2VOYW1lWzBdLAogICAgICAgICAgICBOYW1lU2hvcnQgPT4gJFNlcnZpY2VOYW1lWzBdLAogICAgICAgICAgICBWYWxpZElEICAgPT4gMSwKICAgICAgICAgICAgQ29tbWVudCAgID0+ICcnLAogICAgICAgICAgICBDcmVhdGVCeSAgPT4gMSwKICAgICAgICAgICAgQ2hhbmdlQnkgID0+IDEsCiMgLS0tCiMgSVRTTQojIC0tLQogICAgICAgICAgICBUeXBlSUQgICAgICAgID0+IDEsCiAgICAgICAgICAgIENyaXRpY2FsaXR5SUQgPT4gMSwKIyAtLS0KICAgICAgICB9LAogICAgfSwKCiAgICAjIHRoaXMgc2VydmljZSBoYXZlIHRoZSBzYW1lIG5hbWUgYXMgb25lIHRlc3QgYmVmb3JlIGFuZCBtdXN0IG5vdCBiZSBhZGRlZAogICAgewogICAgICAgIEFkZCA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgPT4gJFNlcnZpY2VOYW1lWzBdLAogICAgICAgICAgICBWYWxpZElEID0+IDEsCiAgICAgICAgICAgIFVzZXJJRCAgPT4gMSwKICAgICAgICB9LAogICAgfSwKCiAgICAjIHRoZSBzZXJ2aWNlIG9uZSBhZGQtdGVzdCBiZWZvcmUgbXVzdCBiZSBOT1QgdXBkYXRlZCAoc2VydmljZSBpcyBOT1QgY29tcGxldGUpCiAgICB7CiAgICAgICAgVXBkYXRlID0+IHsKICAgICAgICAgICAgVmFsaWRJRCA9PiAxLAogICAgICAgICAgICBVc2VySUQgID0+IDEsCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGUgc2VydmljZSBvbmUgYWRkLXRlc3QgYmVmb3JlIG11c3QgYmUgTk9UIHVwZGF0ZWQgKHNlcnZpY2UgaXMgTk9UIGNvbXBsZXRlKQogICAgewogICAgICAgIFVwZGF0ZSA9PiB7CiAgICAgICAgICAgIE5hbWUgICA9PiAkU2VydmljZU5hbWVbMF0gLiAnVVBEQVRFMScsCiAgICAgICAgICAgIFVzZXJJRCA9PiAxLAogICAgICAgIH0sCiAgICB9LAoKICAgICMgdGhlIHNlcnZpY2Ugb25lIGFkZC10ZXN0IGJlZm9yZSBtdXN0IGJlIE5PVCB1cGRhdGVkIChzZXJ2aWNlIGlzIE5PVCBjb21wbGV0ZSkKICAgIHsKICAgICAgICBVcGRhdGUgPT4gewogICAgICAgICAgICBOYW1lICAgID0+ICRTZXJ2aWNlTmFtZVswXSAuICdVUERBVEUxJywKICAgICAgICAgICAgVmFsaWRJRCA9PiAxLAogICAgICAgIH0sCiAgICB9LAojIC0tLQojIElUU00KIyAtLS0KCiAgICAjIHRoZSBzZXJ2aWNlIG9uZSBhZGQtdGVzdCBiZWZvcmUgbXVzdCBiZSBOT1QgdXBkYXRlZCAoc2VydmljZSBpcyBOT1QgY29tcGxldGUpCiAgICB7CiAgICAgICAgVXBkYXRlID0+IHsKICAgICAgICAgICAgTmFtZSAgICA9PiAkU2VydmljZU5hbWVbMF0gLiAnVVBEQVRFMScsCiAgICAgICAgICAgIFZhbGlkSUQgPT4gMSwKICAgICAgICAgICAgVXNlcklEICA9PiAxLAogICAgICAgICAgICBUeXBlSUQgID0+IDEsCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGUgc2VydmljZSBvbmUgYWRkLXRlc3QgYmVmb3JlIG11c3QgYmUgTk9UIHVwZGF0ZWQgKHNlcnZpY2UgaXMgTk9UIGNvbXBsZXRlKQogICAgewogICAgICAgIFVwZGF0ZSA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgICAgICAgPT4gJFNlcnZpY2VOYW1lWzBdIC4gJ1VQREFURTEnLAogICAgICAgICAgICBWYWxpZElEICAgICAgID0+IDEsCiAgICAgICAgICAgIFVzZXJJRCAgICAgICAgPT4gMSwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAogICAgICAgIH0sCiAgICB9LAojIC0tLQoKICAgICMgdGhpcyBzZXJ2aWNlIG11c3QgYmUgaW5zZXJ0ZWQgc3VjZXNzZnVsbHkKICAgIHsKICAgICAgICBBZGQgPT4gewogICAgICAgICAgICBOYW1lICAgID0+ICRTZXJ2aWNlTmFtZVsxXSwKICAgICAgICAgICAgVmFsaWRJRCA9PiAxLAogICAgICAgICAgICBDb21tZW50ID0+ICdUZXN0Q29tbWVudDInLAogICAgICAgICAgICBVc2VySUQgID0+IDEsCiMgLS0tCiMgSVRTTQojIC0tLQogICAgICAgICAgICBUeXBlSUQgICAgICAgID0+IDIsCiAgICAgICAgICAgIENyaXRpY2FsaXR5SUQgPT4gMywKIyAtLS0KICAgICAgICB9LAogICAgICAgIEFkZEdldCA9PiB7CiAgICAgICAgICAgIFBhcmVudElEICA9PiAnJywKICAgICAgICAgICAgTmFtZSAgICAgID0+ICRTZXJ2aWNlTmFtZVsxXSwKICAgICAgICAgICAgTmFtZVNob3J0ID0+ICRTZXJ2aWNlTmFtZVsxXSwKICAgICAgICAgICAgVmFsaWRJRCAgID0+IDEsCiAgICAgICAgICAgIENvbW1lbnQgICA9PiAnVGVzdENvbW1lbnQyJywKICAgICAgICAgICAgQ3JlYXRlQnkgID0+IDEsCiAgICAgICAgICAgIENoYW5nZUJ5ICA9PiAxLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAgICAgVHlwZUlEICAgICAgICA9PiAyLAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDMsCiMgLS0tCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGUgc2VydmljZSBvbmUgYWRkLXRlc3QgYmVmb3JlIG11c3QgYmUgTk9UIHVwZGF0ZWQgKHNlcnZpY2UgdXBkYXRlIGFyZ3VtZW50cyBOT1QgY29tcGxldGUpCiAgICB7CiAgICAgICAgVXBkYXRlID0+IHsKICAgICAgICAgICAgVmFsaWRJRCA9PiAxLAogICAgICAgICAgICBVc2VySUQgID0+IDEsCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGUgc2VydmljZSBvbmUgYWRkLXRlc3QgYmVmb3JlIG11c3QgYmUgTk9UIHVwZGF0ZWQgKHNlcnZpY2UgdXBkYXRlIGFyZ3VtZW50cyBOT1QgY29tcGxldGUpCiAgICB7CiAgICAgICAgVXBkYXRlID0+IHsKICAgICAgICAgICAgTmFtZSAgID0+ICRTZXJ2aWNlTmFtZVsxXSAuICdVUERBVEUyJywKICAgICAgICAgICAgVXNlcklEID0+IDEsCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGUgc2VydmljZSBvbmUgYWRkLXRlc3QgYmVmb3JlIG11c3QgYmUgTk9UIHVwZGF0ZWQgKHNlcnZpY2UgdXBkYXRlIGFyZ3VtZW50cyBOT1QgY29tcGxldGUpCiAgICB7CiAgICAgICAgVXBkYXRlID0+IHsKICAgICAgICAgICAgTmFtZSAgICA9PiAkU2VydmljZU5hbWVbMV0gLiAnVVBEQVRFMicsCiAgICAgICAgICAgIFZhbGlkSUQgPT4gMSwKICAgICAgICB9LAogICAgfSwKCiAgICAjIHRoZSBzZXJ2aWNlIG9uZSBhZGQtdGVzdCBiZWZvcmUgbXVzdCBiZSB1cGRhdGVkIChzZXJ2aWNlIHVwZGF0ZSBhcmd1bWVudHMgYXJlIGNvbXBsZXRlKQogICAgewogICAgICAgIFVwZGF0ZSA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgPT4gJFNlcnZpY2VOYW1lWzFdIC4gJ1VQREFURTInLAogICAgICAgICAgICBWYWxpZElEID0+IDIsCiAgICAgICAgICAgIENvbW1lbnQgPT4gJ1Rlc3RDb21tZW50MlVQREFURTInLAogICAgICAgICAgICBVc2VySUQgID0+ICRVc2VySURzWzBdLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAgICAgVHlwZUlEICAgICAgICA9PiA0LAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDUsCiMgLS0tCiAgICAgICAgfSwKICAgICAgICBVcGRhdGVHZXQgPT4gewogICAgICAgICAgICBQYXJlbnRJRCAgPT4gJycsCiAgICAgICAgICAgIE5hbWUgICAgICA9PiAkU2VydmljZU5hbWVbMV0gLiAnVVBEQVRFMicsCiAgICAgICAgICAgIE5hbWVTaG9ydCA9PiAkU2VydmljZU5hbWVbMV0gLiAnVVBEQVRFMicsCiAgICAgICAgICAgIFZhbGlkSUQgICA9PiAyLAogICAgICAgICAgICBDb21tZW50ICAgPT4gJ1Rlc3RDb21tZW50MlVQREFURTInLAogICAgICAgICAgICBDcmVhdGVCeSAgPT4gMSwKICAgICAgICAgICAgQ2hhbmdlQnkgID0+ICRVc2VySURzWzBdLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAgICAgVHlwZUlEICAgICAgICA9PiA0LAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDUsCiMgLS0tCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGUgc2VydmljZSBvbmUgYWRkLXRlc3QgYmVmb3JlIG11c3QgYmUgdXBkYXRlZCAoc2VydmljZSB1cGRhdGUgYXJndW1lbnRzIGFyZSBjb21wbGV0ZSkKICAgIHsKICAgICAgICBVcGRhdGUgPT4gewogICAgICAgICAgICBOYW1lICAgID0+ICRTZXJ2aWNlTmFtZVsxXSAuICdVUERBVEUzJywKICAgICAgICAgICAgVmFsaWRJRCA9PiAxLAogICAgICAgICAgICBDb21tZW50ID0+ICdUZXN0Q29tbWVudDJVUERBVEUzJywKICAgICAgICAgICAgVXNlcklEICA9PiAkVXNlcklEc1sxXSwKIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAgICAgICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAojIC0tLQogICAgICAgIH0sCiAgICAgICAgVXBkYXRlR2V0ID0+IHsKICAgICAgICAgICAgUGFyZW50SUQgID0+ICcnLAogICAgICAgICAgICBOYW1lICAgICAgPT4gJFNlcnZpY2VOYW1lWzFdIC4gJ1VQREFURTMnLAogICAgICAgICAgICBOYW1lU2hvcnQgPT4gJFNlcnZpY2VOYW1lWzFdIC4gJ1VQREFURTMnLAogICAgICAgICAgICBWYWxpZElEICAgPT4gMSwKICAgICAgICAgICAgQ29tbWVudCAgID0+ICdUZXN0Q29tbWVudDJVUERBVEUzJywKICAgICAgICAgICAgQ3JlYXRlQnkgID0+IDEsCiAgICAgICAgICAgIENoYW5nZUJ5ICA9PiAkVXNlcklEc1sxXSwKIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAgICAgICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAojIC0tLQogICAgICAgIH0sCiAgICB9LAoKICAgICMgdGhpcyBzZXJ2aWNlIGhhcyBhbiBpbnZhbGlkIG5hbWUgYW5kIG11c3QgYmUgTk9UIGluc2VydGVkCiAgICB7CiAgICAgICAgVXBkYXRlID0+IHsKICAgICAgICAgICAgTmFtZSAgICA9PiAkU2VydmljZU5hbWVbMV0gLiAnOjpVUERBVEU0JywKICAgICAgICAgICAgVmFsaWRJRCA9PiAxLAogICAgICAgICAgICBVc2VySUQgID0+IDEsCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGlzIHNlcnZpY2UgaGFzIGFuIGludmFsaWQgbmFtZSBhbmQgbXVzdCBiZSBOT1QgaW5zZXJ0ZWQKICAgIHsKICAgICAgICBVcGRhdGUgPT4gewogICAgICAgICAgICBOYW1lICAgID0+ICRTZXJ2aWNlTmFtZVsxXSAuICc6OlRlc3Q6OlVQREFURTQnLAogICAgICAgICAgICBWYWxpZElEID0+IDEsCiAgICAgICAgICAgIFVzZXJJRCAgPT4gMSwKICAgICAgICB9LAogICAgfSwKCiAgICAjIHRoaXMgc2VydmljZSBoYXMgYW4gaW52YWxpZCBuYW1lIGFuZCBtdXN0IGJlIE5PVCBpbnNlcnRlZAogICAgewogICAgICAgIEFkZCA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgPT4gJFNlcnZpY2VOYW1lWzJdIC4gJzo6VGVzdCcsCiAgICAgICAgICAgIFZhbGlkSUQgPT4gMSwKICAgICAgICAgICAgVXNlcklEICA9PiAxLAogICAgICAgIH0sCiAgICB9LAoKICAgICMgdGhpcyBzZXJ2aWNlIGhhcyBhbiBpbnZhbGlkIG5hbWUgYW5kIG11c3QgYmUgTk9UIGluc2VydGVkCiAgICB7CiAgICAgICAgQWRkID0+IHsKICAgICAgICAgICAgTmFtZSAgICA9PiAnOjpUZXN0JyAuICRTZXJ2aWNlTmFtZVsyXSwKICAgICAgICAgICAgVmFsaWRJRCA9PiAxLAogICAgICAgICAgICBVc2VySUQgID0+IDEsCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGlzIHNlcnZpY2UgaGFzIGFuIGludmFsaWQgbmFtZSBhbmQgbXVzdCBiZSBOT1QgaW5zZXJ0ZWQKICAgIHsKICAgICAgICBBZGQgPT4gewogICAgICAgICAgICBOYW1lICAgID0+ICRTZXJ2aWNlTmFtZVsyXSAuICc6OlRlc3Q6OlRlc3QnLAogICAgICAgICAgICBWYWxpZElEID0+IDEsCiAgICAgICAgICAgIFVzZXJJRCAgPT4gMSwKICAgICAgICB9LAogICAgfSwKCiAgICAjIHRoaXMgc2VydmljZSBoYXMgYW4gaW52YWxpZCBuYW1lIGFuZCBtdXN0IGJlIE5PVCBpbnNlcnRlZAogICAgewogICAgICAgIEFkZCA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgPT4gJFNlcnZpY2VOYW1lWzJdIC4gJ1Rlc3Q6OicsCiAgICAgICAgICAgIFZhbGlkSUQgPT4gMSwKICAgICAgICAgICAgVXNlcklEICA9PiAxLAogICAgICAgIH0sCiAgICB9LAoKICAgICMgdGhpcyBzZXJ2aWNlIG11c3QgYmUgaW5zZXJ0ZWQgc3VjZXNzZnVsbHkgKGNoZWNrIHN0cmluZyBjbGVhbmVyIGZ1bmN0aW9uKQogICAgewogICAgICAgIEFkZCA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgPT4gIiBcdCBcbiBcciAiIC4gJFNlcnZpY2VOYW1lWzNdIC4gIiBcdCBcbiBcciAiLAogICAgICAgICAgICBWYWxpZElEID0+IDEsCiAgICAgICAgICAgIENvbW1lbnQgPT4gIiBcdCBcbiBcciBUZXN0IENvbW1lbnQgXHQgXG4gXHIgIiwKICAgICAgICAgICAgVXNlcklEICA9PiAxLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAgICAgVHlwZUlEICAgICAgICA9PiAyLAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDIsCiMgLS0tCiAgICAgICAgfSwKICAgICAgICBBZGRHZXQgPT4gewogICAgICAgICAgICBQYXJlbnRJRCAgPT4gJycsCiAgICAgICAgICAgIE5hbWUgICAgICA9PiAkU2VydmljZU5hbWVbM10sCiAgICAgICAgICAgIE5hbWVTaG9ydCA9PiAkU2VydmljZU5hbWVbM10sCiAgICAgICAgICAgIFZhbGlkSUQgICA9PiAxLAogICAgICAgICAgICBDb21tZW50ICAgPT4gJ1Rlc3QgQ29tbWVudCcsCiAgICAgICAgICAgIENyZWF0ZUJ5ICA9PiAxLAogICAgICAgICAgICBDaGFuZ2VCeSAgPT4gMSwKIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAgICAgICAgIFR5cGVJRCAgICAgICAgPT4gMiwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAyLAojIC0tLQogICAgICAgIH0sCiAgICB9LAoKICAgICMgdGhlIHNlcnZpY2Ugb25lIGFkZC10ZXN0IGJlZm9yZSBtdXN0IGJlIHVwZGF0ZWQgc3VjZXNzZnVsbHkgKGNoZWNrIHN0cmluZyBjbGVhbmVyIGZ1bmN0aW9uKQogICAgewogICAgICAgIFVwZGF0ZSA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgPT4gIiBcdCBcbiBcciAiIC4gJFNlcnZpY2VOYW1lWzNdIC4gIiBVUERBVEUxIFx0IFxuIFxyICIsCiAgICAgICAgICAgIFZhbGlkSUQgPT4gMiwKICAgICAgICAgICAgQ29tbWVudCA9PiAiIFx0IFxuIFxyIFRlc3QgQ29tbWVudCBcdCBcbiBcciAiLAogICAgICAgICAgICBVc2VySUQgID0+ICRVc2VySURzWzFdLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAgICAgVHlwZUlEICAgICAgICA9PiAxLAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDEsCiMgLS0tCiAgICAgICAgfSwKICAgICAgICBVcGRhdGVHZXQgPT4gewogICAgICAgICAgICBQYXJlbnRJRCAgPT4gJycsCiAgICAgICAgICAgIE5hbWUgICAgICA9PiAkU2VydmljZU5hbWVbM10gLiAnIFVQREFURTEnLAogICAgICAgICAgICBOYW1lU2hvcnQgPT4gJFNlcnZpY2VOYW1lWzNdIC4gJyBVUERBVEUxJywKICAgICAgICAgICAgVmFsaWRJRCAgID0+IDIsCiAgICAgICAgICAgIENvbW1lbnQgICA9PiAnVGVzdCBDb21tZW50JywKICAgICAgICAgICAgQ3JlYXRlQnkgID0+IDEsCiAgICAgICAgICAgIENoYW5nZUJ5ICA9PiAkVXNlcklEc1sxXSwKIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAgICAgICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAojIC0tLQogICAgICAgIH0sCiAgICB9LAoKICAgICMgdGhpcyBzZXJ2aWNlIG11c3QgYmUgaW5zZXJ0ZWQgc3VjZXNzZnVsbHkgKHVuaWNvZGUgY2hlY2tzKQogICAgewogICAgICAgIEFkZCA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgPT4gJFNlcnZpY2VOYW1lWzRdIC4gJyDPkiDPoSDGqSDPniAnLAogICAgICAgICAgICBWYWxpZElEID0+IDEsCiAgICAgICAgICAgIENvbW1lbnQgPT4gJyDRoCDRpCBUZXN0Q29tbWVudDUgz6AgzqkgJywKICAgICAgICAgICAgVXNlcklEICA9PiAxLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAgICAgVHlwZUlEICAgICAgICA9PiAxLAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDEsCiMgLS0tCiAgICAgICAgfSwKICAgICAgICBBZGRHZXQgPT4gewogICAgICAgICAgICBQYXJlbnRJRCAgPT4gJycsCiAgICAgICAgICAgIE5hbWUgICAgICA9PiAkU2VydmljZU5hbWVbNF0gLiAnIM+SIM+hIMapIM+eJywKICAgICAgICAgICAgTmFtZVNob3J0ID0+ICRTZXJ2aWNlTmFtZVs0XSAuICcgz5Igz6Egxqkgz54nLAogICAgICAgICAgICBWYWxpZElEICAgPT4gMSwKICAgICAgICAgICAgQ29tbWVudCAgID0+ICfRoCDRpCBUZXN0Q29tbWVudDUgz6AgzqknLAogICAgICAgICAgICBDcmVhdGVCeSAgPT4gMSwKICAgICAgICAgICAgQ2hhbmdlQnkgID0+IDEsCiMgLS0tCiMgSVRTTQojIC0tLQogICAgICAgICAgICBUeXBlSUQgICAgICAgID0+IDEsCiAgICAgICAgICAgIENyaXRpY2FsaXR5SUQgPT4gMSwKIyAtLS0KICAgICAgICB9LAogICAgfSwKCiAgICAjIHRoZSBzZXJ2aWNlIG9uZSBhZGQtdGVzdCBiZWZvcmUgbXVzdCBiZSB1cGRhdGVkIHN1Y2Vzc2Z1bGx5ICh1bmljb2RlIGNoZWNrcykKICAgIHsKICAgICAgICBVcGRhdGUgPT4gewogICAgICAgICAgICBOYW1lICAgID0+ICRTZXJ2aWNlTmFtZVs0XSAuICcgz5Igz6Egxqkgz54gVVBEQVRFMScsCiAgICAgICAgICAgIFZhbGlkSUQgPT4gMiwKICAgICAgICAgICAgQ29tbWVudCA9PiAnINGgINGkIFRlc3RDb21tZW50NSDPoCDOqSBVUERBVEUxJywKICAgICAgICAgICAgVXNlcklEICA9PiAkVXNlcklEc1swXSwKIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAgICAgICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAojIC0tLQogICAgICAgIH0sCiAgICAgICAgVXBkYXRlR2V0ID0+IHsKICAgICAgICAgICAgUGFyZW50SUQgID0+ICcnLAogICAgICAgICAgICBOYW1lICAgICAgPT4gJFNlcnZpY2VOYW1lWzRdIC4gJyDPkiDPoSDGqSDPniBVUERBVEUxJywKICAgICAgICAgICAgTmFtZVNob3J0ID0+ICRTZXJ2aWNlTmFtZVs0XSAuICcgz5Igz6Egxqkgz54gVVBEQVRFMScsCiAgICAgICAgICAgIFZhbGlkSUQgICA9PiAyLAogICAgICAgICAgICBDb21tZW50ICAgPT4gJ9GgINGkIFRlc3RDb21tZW50NSDPoCDOqSBVUERBVEUxJywKICAgICAgICAgICAgQ3JlYXRlQnkgID0+IDEsCiAgICAgICAgICAgIENoYW5nZUJ5ICA9PiAkVXNlcklEc1swXSwKIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAgICAgICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAojIC0tLQogICAgICAgIH0sCiAgICB9LAoKICAgICMgdGhpcyBzZXJ2aWNlIG11c3QgYmUgaW5zZXJ0ZWQgc3VjZXNzZnVsbHkgKHNwZWNpYWwgY2hhcmFjdGVyIGNoZWNrcykKICAgIHsKICAgICAgICBBZGQgPT4gewogICAgICAgICAgICBOYW1lICAgID0+ICcgW3Rlc3RdJSpcXCAnIC4gJFNlcnZpY2VOYW1lWzhdIC4gJyBbdGVzdF0lKlxcICcsCiAgICAgICAgICAgIFZhbGlkSUQgPT4gMSwKICAgICAgICAgICAgQ29tbWVudCA9PiAnIFt0ZXN0XSUqXFwgVGVzdCBDb21tZW50IFt0ZXN0XSUqXFwgJywKICAgICAgICAgICAgVXNlcklEICA9PiAxLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAgICAgVHlwZUlEICAgICAgICA9PiAxLAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDEsCiMgLS0tCiAgICAgICAgfSwKICAgICAgICBBZGRHZXQgPT4gewogICAgICAgICAgICBQYXJlbnRJRCAgPT4gJycsCiAgICAgICAgICAgIE5hbWUgICAgICA9PiAnW3Rlc3RdJSpcXCAnIC4gJFNlcnZpY2VOYW1lWzhdIC4gJyBbdGVzdF0lKlxcJywKICAgICAgICAgICAgTmFtZVNob3J0ID0+ICdbdGVzdF0lKlxcICcgLiAkU2VydmljZU5hbWVbOF0gLiAnIFt0ZXN0XSUqXFwnLAogICAgICAgICAgICBWYWxpZElEICAgPT4gMSwKICAgICAgICAgICAgQ29tbWVudCAgID0+ICdbdGVzdF0lKlxcIFRlc3QgQ29tbWVudCBbdGVzdF0lKlxcJywKICAgICAgICAgICAgQ3JlYXRlQnkgID0+IDEsCiAgICAgICAgICAgIENoYW5nZUJ5ICA9PiAxLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAgICAgVHlwZUlEICAgICAgICA9PiAxLAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDEsCiMgLS0tCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGUgc2VydmljZSBvbmUgYWRkLXRlc3QgYmVmb3JlIG11c3QgYmUgdXBkYXRlZCBzdWNlc3NmdWxseSAoc3BlY2lhbCBjaGFyYWN0ZXIgY2hlY2tzKQogICAgewogICAgICAgIFVwZGF0ZSA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgPT4gJyBbdGVzdF0lKlxcICcgLiAkU2VydmljZU5hbWVbOF0gLiAnIFVQREFURTEgW3Rlc3RdJSpcXCAnLAogICAgICAgICAgICBWYWxpZElEID0+IDIsCiAgICAgICAgICAgIENvbW1lbnQgPT4gJyBbdGVzdF0lKlxcIFRlc3QgQ29tbWVudCBVUERBVEUxIFt0ZXN0XSUqXFwgJywKICAgICAgICAgICAgVXNlcklEICA9PiAkVXNlcklEc1sxXSwKIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAgICAgICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAojIC0tLQogICAgICAgIH0sCiAgICAgICAgVXBkYXRlR2V0ID0+IHsKICAgICAgICAgICAgUGFyZW50SUQgID0+ICcnLAogICAgICAgICAgICBOYW1lICAgICAgPT4gJ1t0ZXN0XSUqXFwgJyAuICRTZXJ2aWNlTmFtZVs4XSAuICcgVVBEQVRFMSBbdGVzdF0lKlxcJywKICAgICAgICAgICAgTmFtZVNob3J0ID0+ICdbdGVzdF0lKlxcICcgLiAkU2VydmljZU5hbWVbOF0gLiAnIFVQREFURTEgW3Rlc3RdJSpcXCcsCiAgICAgICAgICAgIFZhbGlkSUQgICA9PiAyLAogICAgICAgICAgICBDb21tZW50ICAgPT4gJ1t0ZXN0XSUqXFwgVGVzdCBDb21tZW50IFVQREFURTEgW3Rlc3RdJSpcXCcsCiAgICAgICAgICAgIENyZWF0ZUJ5ICA9PiAxLAogICAgICAgICAgICBDaGFuZ2VCeSAgPT4gJFVzZXJJRHNbMV0sCiMgLS0tCiMgSVRTTQojIC0tLQogICAgICAgICAgICBUeXBlSUQgICAgICAgID0+IDEsCiAgICAgICAgICAgIENyaXRpY2FsaXR5SUQgPT4gMSwKIyAtLS0KICAgICAgICB9LAogICAgfSwKCiAgICAjIHRoaXMgc2VydmljZSBtdXN0IGJlIGluc2VydGVkIHN1Y2Vzc2Z1bGx5ICh1c2VkIGZvciB0aGUgZm9sbG93aW5nIHRlc3RzKQogICAgewogICAgICAgIEFkZCA9PiB7CiAgICAgICAgICAgIE5hbWUgICAgPT4gJFNlcnZpY2VOYW1lWzVdLAogICAgICAgICAgICBWYWxpZElEID0+IDEsCiAgICAgICAgICAgIFVzZXJJRCAgPT4gMSwKIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAgICAgICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAojIC0tLQogICAgICAgIH0sCiAgICAgICAgQWRkR2V0ID0+IHsKICAgICAgICAgICAgUGFyZW50SUQgID0+ICcnLAogICAgICAgICAgICBOYW1lICAgICAgPT4gJFNlcnZpY2VOYW1lWzVdLAogICAgICAgICAgICBOYW1lU2hvcnQgPT4gJFNlcnZpY2VOYW1lWzVdLAogICAgICAgICAgICBWYWxpZElEICAgPT4gMSwKICAgICAgICAgICAgQ3JlYXRlQnkgID0+IDEsCiAgICAgICAgICAgIENoYW5nZUJ5ICA9PiAxLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAgICAgVHlwZUlEICAgICAgICA9PiAxLAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDEsCiMgLS0tCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGlzIHNlcnZpY2UgbXVzdCBiZSBpbnNlcnRlZCBzdWNlc3NmdWxseSAocGFyZW50IHNlcnZpY2UgY2hlY2spCiAgICB7CiAgICAgICAgQWRkID0+IHsKICAgICAgICAgICAgUGFyZW50SUQgPT4gJ0xBU1RBRERJRCcsCiAgICAgICAgICAgIE5hbWUgICAgID0+ICRTZXJ2aWNlTmFtZVs2XSwKICAgICAgICAgICAgVmFsaWRJRCAgPT4gMSwKICAgICAgICAgICAgVXNlcklEICAgPT4gMSwKIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAgICAgICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAojIC0tLQogICAgICAgIH0sCiAgICAgICAgQWRkR2V0ID0+IHsKICAgICAgICAgICAgUGFyZW50SUQgID0+ICdMQVNUQURESUQnLAogICAgICAgICAgICBOYW1lICAgICAgPT4gJFNlcnZpY2VOYW1lWzVdIC4gJzo6JyAuICRTZXJ2aWNlTmFtZVs2XSwKICAgICAgICAgICAgTmFtZVNob3J0ID0+ICRTZXJ2aWNlTmFtZVs2XSwKICAgICAgICAgICAgVmFsaWRJRCAgID0+IDEsCiAgICAgICAgICAgIENyZWF0ZUJ5ICA9PiAxLAogICAgICAgICAgICBDaGFuZ2VCeSAgPT4gMSwKIyAtLS0KIyBJVFNNCiMgLS0tCiAgICAgICAgICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgICAgICAgICAgQ3JpdGljYWxpdHlJRCA9PiAxLAojIC0tLQogICAgICAgIH0sCiAgICB9LAoKICAgICMgdGhpcyBzZXJ2aWNlIG11c3QgYmUgaW5zZXJ0ZWQgc3VjZXNzZnVsbHkgKHBhcmVudCBzZXJ2aWNlIGNoZWNrKQogICAgewogICAgICAgIEFkZCA9PiB7CiAgICAgICAgICAgIFBhcmVudElEID0+ICdMQVNUQURESUQnLAogICAgICAgICAgICBOYW1lICAgICA9PiAiIFxuIFx0ICIgLiAkU2VydmljZU5hbWVbN10gLiAiIFxuIFx0ICIsCiAgICAgICAgICAgIFZhbGlkSUQgID0+IDEsCiAgICAgICAgICAgIFVzZXJJRCAgID0+IDEsCiMgLS0tCiMgSVRTTQojIC0tLQogICAgICAgICAgICBUeXBlSUQgICAgICAgID0+IDEsCiAgICAgICAgICAgIENyaXRpY2FsaXR5SUQgPT4gMSwKIyAtLS0KICAgICAgICB9LAogICAgICAgIEFkZEdldCA9PiB7CiAgICAgICAgICAgIFBhcmVudElEICA9PiAnTEFTVEFERElEJywKICAgICAgICAgICAgTmFtZSAgICAgID0+ICRTZXJ2aWNlTmFtZVs1XSAuICc6OicgLiAkU2VydmljZU5hbWVbNl0gLiAnOjonIC4gJFNlcnZpY2VOYW1lWzddLAogICAgICAgICAgICBOYW1lU2hvcnQgPT4gJFNlcnZpY2VOYW1lWzddLAogICAgICAgICAgICBWYWxpZElEICAgPT4gMSwKICAgICAgICAgICAgQ3JlYXRlQnkgID0+IDEsCiAgICAgICAgICAgIENoYW5nZUJ5ICA9PiAxLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAgICAgVHlwZUlEICAgICAgICA9PiAxLAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDEsCiMgLS0tCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGUgc2VydmljZSBtdXN0IGJlIE5PVCB1cGRhdGVkIChwYXJlbnQgc2VydmljZSBpZCBhbmQgcGFyZW50IGlkIGFyZSBpZGVudGljYWwpCiAgICB7CiAgICAgICAgVXBkYXRlID0+IHsKICAgICAgICAgICAgUGFyZW50SUQgPT4gJ0xBU1RBRERJRCcsCiAgICAgICAgICAgIE5hbWUgICAgID0+ICRTZXJ2aWNlTmFtZVs3XSAuICdVUERBVEUxJywKICAgICAgICAgICAgVmFsaWRJRCAgPT4gMSwKICAgICAgICAgICAgVXNlcklEICAgPT4gMSwKICAgICAgICB9LAogICAgfSwKCiAgICAjIHRoaXMgc2VydmljZSBtdXN0IGJlIHVwZGF0ZWQgc3VjZXNzZnVsbHkgKG1vdmUgc2VydmljZSB0byB0aGUgaGlnaGVyc3QgbGV2ZWwpCiAgICB7CiAgICAgICAgVXBkYXRlID0+IHsKICAgICAgICAgICAgUGFyZW50SUQgPT4gJycsCiAgICAgICAgICAgIE5hbWUgICAgID0+ICRTZXJ2aWNlTmFtZVs3XSAuICcgVVBEQVRFMScsCiAgICAgICAgICAgIFZhbGlkSUQgID0+IDEsCiAgICAgICAgICAgIFVzZXJJRCAgID0+IDEsCiMgLS0tCiMgSVRTTQojIC0tLQogICAgICAgICAgICBUeXBlSUQgICAgICAgID0+IDEsCiAgICAgICAgICAgIENyaXRpY2FsaXR5SUQgPT4gMSwKIyAtLS0KICAgICAgICB9LAogICAgICAgIFVwZGF0ZUdldCA9PiB7CiAgICAgICAgICAgIFBhcmVudElEICA9PiAnJywKICAgICAgICAgICAgTmFtZSAgICAgID0+ICRTZXJ2aWNlTmFtZVs3XSAuICcgVVBEQVRFMScsCiAgICAgICAgICAgIE5hbWVTaG9ydCA9PiAkU2VydmljZU5hbWVbN10gLiAnIFVQREFURTEnLAogICAgICAgICAgICBWYWxpZElEICAgPT4gMSwKICAgICAgICAgICAgQ3JlYXRlQnkgID0+IDEsCiAgICAgICAgICAgIENoYW5nZUJ5ICA9PiAxLAojIC0tLQojIElUU00KIyAtLS0KICAgICAgICAgICAgVHlwZUlEICAgICAgICA9PiAxLAogICAgICAgICAgICBDcml0aWNhbGl0eUlEID0+IDEsCiMgLS0tCiAgICAgICAgfSwKICAgIH0sCgogICAgIyB0aGlzIHNlcnZpY2UgbXVzdCBiZSB1cGRhdGVkIHN1Y2Vzc2Z1bGx5IChtb3ZlIHNlcnZpY2UgYmFjayB3aXRoIHRoZSBvbGQgcGFyZW50IHNlcnZpY2UpCiAgICB7CiAgICAgICAgVXBkYXRlID0+IHsKICAgICAgICAgICAgUGFyZW50SUQgPT4gJ0xBU1RMQVNUQURESUQnLAogICAgICAgICAgICBOYW1lICAgICA9PiAkU2VydmljZU5hbWVbN10gLiAnIFVQREFURSgyKScsCiAgICAgICAgICAgIFZhbGlkSUQgID0+IDEsCiAgICAgICAgICAgIFVzZXJJRCAgID0+IDEsCiMgLS0tCiMgSVRTTQojIC0tLQogICAgICAgICAgICBUeXBlSUQgICAgICAgID0+IDEsCiAgICAgICAgICAgIENyaXRpY2FsaXR5SUQgPT4gMSwKIyAtLS0KICAgICAgICB9LAogICAgICAgIFVwZGF0ZUdldCA9PiB7CiAgICAgICAgICAgIFBhcmVudElEID0+ICdMQVNUTEFTVEFERElEJywKICAgICAgICAgICAgTmFtZSAgICAgPT4gJFNlcnZpY2VOYW1lWzVdIC4gJzo6JwogICAgICAgICAgICAgICAgLiAkU2VydmljZU5hbWVbNl0gLiAnOjonCiAgICAgICAgICAgICAgICAuICRTZXJ2aWNlTmFtZVs3XQogICAgICAgICAgICAgICAgLiAnIFVQREFURSgyKScsCiAgICAgICAgICAgIE5hbWVTaG9ydCA9PiAkU2VydmljZU5hbWVbN10gLiAnIFVQREFURSgyKScsCiAgICAgICAgICAgIFZhbGlkSUQgICA9PiAxLAogICAgICAgICAgICBDcmVhdGVCeSAgPT4gMSwKICAgICAgICAgICAgQ2hhbmdlQnkgID0+IDEsCiMgLS0tCiMgSVRTTQojIC0tLQogICAgICAgICAgICBUeXBlSUQgICAgICAgID0+IDEsCiAgICAgICAgICAgIENyaXRpY2FsaXR5SUQgPT4gMSwKIyAtLS0KICAgICAgICB9LAogICAgfSwKXTsKCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICMKIyBydW4gZ2VuZXJhbCB0ZXN0cwojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjCgpteSAkVGVzdENvdW50ID0gMTsKbXkgJExhc3RBZGRlZFNlcnZpY2VJRDsKbXkgJExhc3RMYXN0QWRkZWRTZXJ2aWNlSUQ7Cm15ICRBZGRlZENvdW50ZXIgPSAwOwoKZm9yIG15ICRJdGVtICggQHskSXRlbURhdGF9ICkgewoKICAgIGlmICggJEl0ZW0tPntBZGR9ICkgewoKICAgICAgICAjIHByZXBhcmUgcGFyZW50IGlkCiAgICAgICAgaWYgKCAkSXRlbS0+e0FkZH0tPntQYXJlbnRJRH0gJiYgJEl0ZW0tPntBZGR9LT57UGFyZW50SUR9IGVxICdMQVNUQURESUQnICkgewogICAgICAgICAgICAkSXRlbS0+e0FkZH0tPntQYXJlbnRJRH0gPSAkTGFzdEFkZGVkU2VydmljZUlEOwogICAgICAgIH0KICAgICAgICBlbHNpZiAoICRJdGVtLT57QWRkfS0+e1BhcmVudElEfSAmJiAkSXRlbS0+e0FkZH0tPntQYXJlbnRJRH0gZXEgJ0xBU1RMQVNUQURESUQnICkgewogICAgICAgICAgICAkSXRlbS0+e0FkZH0tPntQYXJlbnRJRH0gPSAkTGFzdExhc3RBZGRlZFNlcnZpY2VJRDsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIGRlbGV0ZSAkSXRlbS0+e0FkZH0tPntQYXJlbnRJRH07CiAgICAgICAgfQoKICAgICAgICAjIGFkZCBuZXcgc2VydmljZQogICAgICAgIG15ICRTZXJ2aWNlSUQgPSAkU2VsZi0+e1NlcnZpY2VPYmplY3R9LT5TZXJ2aWNlQWRkKAogICAgICAgICAgICAleyAkSXRlbS0+e0FkZH0gfSwKICAgICAgICApOwoKICAgICAgICAjIGNoZWNrIGlmIHNlcnZpY2Ugd2FzIGFkZGVkIHN1Y2Nlc3NmdWxseSBvciBub3QKICAgICAgICBpZiAoICRJdGVtLT57QWRkR2V0fSApIHsKCiAgICAgICAgICAgICMgcHJlcGFyZSBwYXJlbnQgaWQKICAgICAgICAgICAgaWYgKCAkSXRlbS0+e0FkZEdldH0tPntQYXJlbnRJRH0gJiYgJEl0ZW0tPntBZGRHZXR9LT57UGFyZW50SUR9IGVxICdMQVNUQURESUQnICkgewogICAgICAgICAgICAgICAgJEl0ZW0tPntBZGRHZXR9LT57UGFyZW50SUR9ID0gJExhc3RBZGRlZFNlcnZpY2VJRDsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNpZiAoICRJdGVtLT57QWRkR2V0fS0+e1BhcmVudElEfSAmJiAkSXRlbS0+e0FkZEdldH0tPntQYXJlbnRJRH0gZXEgJ0xBU1RMQVNUQURESUQnICkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJEl0ZW0tPntBZGRHZXR9LT57UGFyZW50SUR9ID0gJExhc3RMYXN0QWRkZWRTZXJ2aWNlSUQ7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRTZWxmLT5UcnVlKAogICAgICAgICAgICAgICAgJFNlcnZpY2VJRCwKICAgICAgICAgICAgICAgICJUZXN0ICRUZXN0Q291bnQ6IFNlcnZpY2VBZGQoKSAtIFNlcnZpY2VJRDogJFNlcnZpY2VJRCIsCiAgICAgICAgICAgICk7CgogICAgICAgICAgICBpZiAoJFNlcnZpY2VJRCkgewoKICAgICAgICAgICAgICAgICMgbG9va3VwIHNlcnZpY2UgbmFtZQogICAgICAgICAgICAgICAgbXkgJFNlcnZpY2VOYW1lID0gJFNlbGYtPntTZXJ2aWNlT2JqZWN0fS0+U2VydmljZUxvb2t1cCgKICAgICAgICAgICAgICAgICAgICBTZXJ2aWNlSUQgPT4gJFNlcnZpY2VJRCwKICAgICAgICAgICAgICAgICk7CgogICAgICAgICAgICAgICAgIyBsb29rdXAgdGVzdAogICAgICAgICAgICAgICAgJFNlbGYtPklzKAogICAgICAgICAgICAgICAgICAgICRTZXJ2aWNlTmFtZSB8fCAnJywKICAgICAgICAgICAgICAgICAgICAkSXRlbS0+e0FkZEdldH0tPntOYW1lfSB8fCAnJywKICAgICAgICAgICAgICAgICAgICAiVGVzdCAkVGVzdENvdW50OiBTZXJ2aWNlTG9va3VwKCkgLSBsb29rdXAiLAogICAgICAgICAgICAgICAgKTsKCiAgICAgICAgICAgICAgICAjIHJldmVyc2UgbG9va3VwIHRoZSBzZXJ2aWNlIGlkCiAgICAgICAgICAgICAgICBteSAkU2VydmljZUlETmV3ID0gJFNlbGYtPntTZXJ2aWNlT2JqZWN0fS0+U2VydmljZUxvb2t1cCgKICAgICAgICAgICAgICAgICAgICBOYW1lID0+ICRTZXJ2aWNlTmFtZSB8fCAnJywKICAgICAgICAgICAgICAgICk7CgogICAgICAgICAgICAgICAgIyByZXZlcnNlIGxvb2t1cCB0ZXN0CiAgICAgICAgICAgICAgICAkU2VsZi0+SXMoCiAgICAgICAgICAgICAgICAgICAgJFNlcnZpY2VJRE5ldyB8fCAnJywKICAgICAgICAgICAgICAgICAgICAkU2VydmljZUlEICAgIHx8ICcnLAogICAgICAgICAgICAgICAgICAgICJUZXN0ICRUZXN0Q291bnQ6IFNlcnZpY2VMb29rdXAoKSAtIHJldmVyc2UgbG9va3VwIiwKICAgICAgICAgICAgICAgICk7CgogICAgICAgICAgICAgICAgIyBzZXQgbGFzdCBzZXJ2aWNlIGlkIHZhcmlhYmxlCiAgICAgICAgICAgICAgICAkTGFzdExhc3RBZGRlZFNlcnZpY2VJRCA9ICRMYXN0QWRkZWRTZXJ2aWNlSUQ7CiAgICAgICAgICAgICAgICAkTGFzdEFkZGVkU2VydmljZUlEICAgICA9ICRTZXJ2aWNlSUQ7CgogICAgICAgICAgICAgICAgIyBpbmNyZW1lbnQgdGhlIGFkZGVkIGNvdW50ZXIKICAgICAgICAgICAgICAgICRBZGRlZENvdW50ZXIrKzsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgJFNlbGYtPkZhbHNlKAogICAgICAgICAgICAgICAgJFNlcnZpY2VJRCwKICAgICAgICAgICAgICAgICJUZXN0ICRUZXN0Q291bnQ6IFNlcnZpY2VBZGQoKSIsCiAgICAgICAgICAgICk7CiAgICAgICAgfQoKICAgICAgICAjIGdldCBzZXJ2aWNlIGRhdGEgdG8gY2hlY2sgdGhlIHZhbHVlcyBhZnRlciBjcmVhdGlvbiBvZiB0aGUgc2VydmljZQogICAgICAgIG15ICVTZXJ2aWNlR2V0ID0gJFNlbGYtPntTZXJ2aWNlT2JqZWN0fS0+U2VydmljZUdldCgKICAgICAgICAgICAgU2VydmljZUlEID0+ICRTZXJ2aWNlSUQsCiAgICAgICAgICAgIFVzZXJJRCAgICA9PiAkSXRlbS0+e0FkZH0tPntVc2VySUR9LAogICAgICAgICk7CgogICAgICAgICMgY2hlY2sgc2VydmljZSBkYXRhIGFmdGVyIGNyZWF0aW9uIG9mIHRoZSBzZXJ2aWNlCiAgICAgICAgZm9yIG15ICRTZXJ2aWNlQXR0cmlidXRlICgga2V5cyAleyAkSXRlbS0+e0FkZEdldH0gfSApIHsKICAgICAgICAgICAgJFNlbGYtPklzKAogICAgICAgICAgICAgICAgJFNlcnZpY2VHZXR7JFNlcnZpY2VBdHRyaWJ1dGV9IHx8ICcnLAogICAgICAgICAgICAgICAgJEl0ZW0tPntBZGRHZXR9LT57JFNlcnZpY2VBdHRyaWJ1dGV9IHx8ICcnLAogICAgICAgICAgICAgICAgIlRlc3QgJFRlc3RDb3VudDogU2VydmljZUdldCgpIC0gJFNlcnZpY2VBdHRyaWJ1dGUiLAogICAgICAgICAgICApOwogICAgICAgIH0KICAgIH0KCiAgICBpZiAoICRJdGVtLT57VXBkYXRlfSApIHsKCiAgICAgICAgIyBjaGVjayBsYXN0IHNlcnZpY2UgaWQgdmFyYWlibGUKICAgICAgICBpZiAoICEkTGFzdEFkZGVkU2VydmljZUlEICkgewogICAgICAgICAgICAkU2VsZi0+RmFsc2UoCiAgICAgICAgICAgICAgICAxLAogICAgICAgICAgICAgICAgIlRlc3QgJFRlc3RDb3VudDogTk8gTEFTVCBTRVJWSUNFIElEIEdJVkVOIiwKICAgICAgICAgICAgKTsKICAgICAgICB9CgogICAgICAgICMgcHJlcGFyZSBwYXJlbnQgaWQKICAgICAgICBpZiAoICRJdGVtLT57VXBkYXRlfS0+e1BhcmVudElEfSAmJiAkSXRlbS0+e1VwZGF0ZX0tPntQYXJlbnRJRH0gZXEgJ0xBU1RBRERJRCcgKSB7CiAgICAgICAgICAgICRJdGVtLT57VXBkYXRlfS0+e1BhcmVudElEfSA9ICRMYXN0QWRkZWRTZXJ2aWNlSUQ7CiAgICAgICAgfQogICAgICAgIGVsc2lmICggJEl0ZW0tPntVcGRhdGV9LT57UGFyZW50SUR9ICYmICRJdGVtLT57VXBkYXRlfS0+e1BhcmVudElEfSBlcSAnTEFTVExBU1RBRERJRCcgKSB7CiAgICAgICAgICAgICRJdGVtLT57VXBkYXRlfS0+e1BhcmVudElEfSA9ICRMYXN0TGFzdEFkZGVkU2VydmljZUlEOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgZGVsZXRlICRJdGVtLT57VXBkYXRlfS0+e1BhcmVudElEfTsKICAgICAgICB9CgogICAgICAgICMgdXBkYXRlIHRoZSBzZXJ2aWNlCiAgICAgICAgbXkgJFVwZGF0ZVN1Y2VzcyA9ICRTZWxmLT57U2VydmljZU9iamVjdH0tPlNlcnZpY2VVcGRhdGUoCiAgICAgICAgICAgICV7ICRJdGVtLT57VXBkYXRlfSB9LAogICAgICAgICAgICBTZXJ2aWNlSUQgPT4gJExhc3RBZGRlZFNlcnZpY2VJRCwKICAgICAgICApOwoKICAgICAgICAjIGNoZWNrIGlmIHNlcnZpY2Ugd2FzIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5IG9yIG5vdAogICAgICAgIGlmICggJEl0ZW0tPntVcGRhdGVHZXR9ICkgewogICAgICAgICAgICAkU2VsZi0+VHJ1ZSgKICAgICAgICAgICAgICAgICRVcGRhdGVTdWNlc3MsCiAgICAgICAgICAgICAgICAiVGVzdCAkVGVzdENvdW50OiBTZXJ2aWNlVXBkYXRlKCkgLSBTZXJ2aWNlSUQ6ICRMYXN0QWRkZWRTZXJ2aWNlSUQiLAogICAgICAgICAgICApOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgJFNlbGYtPkZhbHNlKAogICAgICAgICAgICAgICAgJFVwZGF0ZVN1Y2VzcywKICAgICAgICAgICAgICAgICJUZXN0ICRUZXN0Q291bnQ6IFNlcnZpY2VVcGRhdGUoKSIsCiAgICAgICAgICAgICk7CiAgICAgICAgfQoKICAgICAgICAjIHByZXBhcmUgcGFyZW50IGlkCiAgICAgICAgaWYgKCAkSXRlbS0+e1VwZGF0ZUdldH0tPntQYXJlbnRJRH0gJiYgJEl0ZW0tPntVcGRhdGVHZXR9LT57UGFyZW50SUR9IGVxICdMQVNUQURESUQnICkgewogICAgICAgICAgICAkSXRlbS0+e1VwZGF0ZUdldH0tPntQYXJlbnRJRH0gPSAkTGFzdEFkZGVkU2VydmljZUlEOwogICAgICAgIH0KICAgICAgICBlbHNpZiAoCiAgICAgICAgICAgICRJdGVtLT57VXBkYXRlR2V0fS0+e1BhcmVudElEfQogICAgICAgICAgICAmJiAkSXRlbS0+e1VwZGF0ZUdldH0tPntQYXJlbnRJRH0gZXEgJ0xBU1RMQVNUQURESUQnCiAgICAgICAgICAgICkKICAgICAgICB7CiAgICAgICAgICAgICRJdGVtLT57VXBkYXRlR2V0fS0+e1BhcmVudElEfSA9ICRMYXN0TGFzdEFkZGVkU2VydmljZUlEOwogICAgICAgIH0KCiAgICAgICAgIyBnZXQgc2VydmljZSBkYXRhIHRvIGNoZWNrIHRoZSB2YWx1ZXMgYWZ0ZXIgdGhlIHVwZGF0ZQogICAgICAgIG15ICVTZXJ2aWNlR2V0MiA9ICRTZWxmLT57U2VydmljZU9iamVjdH0tPlNlcnZpY2VHZXQoCiAgICAgICAgICAgIFNlcnZpY2VJRCA9PiAkTGFzdEFkZGVkU2VydmljZUlELAogICAgICAgICAgICBVc2VySUQgICAgPT4gJEl0ZW0tPntVcGRhdGV9LT57VXNlcklEfSwKICAgICAgICApOwoKICAgICAgICAjIGNoZWNrIHNlcnZpY2UgZGF0YSBhZnRlciB1cGRhdGUKICAgICAgICBmb3IgbXkgJFNlcnZpY2VBdHRyaWJ1dGUgKCBrZXlzICV7ICRJdGVtLT57VXBkYXRlR2V0fSB9ICkgewogICAgICAgICAgICAkU2VsZi0+SXMoCiAgICAgICAgICAgICAgICAkU2VydmljZUdldDJ7JFNlcnZpY2VBdHRyaWJ1dGV9IHx8ICcnLAogICAgICAgICAgICAgICAgJEl0ZW0tPntVcGRhdGVHZXR9LT57JFNlcnZpY2VBdHRyaWJ1dGV9IHx8ICcnLAogICAgICAgICAgICAgICAgIlRlc3QgJFRlc3RDb3VudDogU2VydmljZUdldCgpIC0gJFNlcnZpY2VBdHRyaWJ1dGUiLAogICAgICAgICAgICApOwogICAgICAgIH0KCiAgICAgICAgIyBsb29rdXAgc2VydmljZSBuYW1lCiAgICAgICAgbXkgJFNlcnZpY2VOYW1lID0gJFNlbGYtPntTZXJ2aWNlT2JqZWN0fS0+U2VydmljZUxvb2t1cCgKICAgICAgICAgICAgU2VydmljZUlEID0+ICRTZXJ2aWNlR2V0MntTZXJ2aWNlSUR9LAogICAgICAgICk7CgogICAgICAgICMgbG9va3VwIHRlc3QKICAgICAgICAkU2VsZi0+SXMoCiAgICAgICAgICAgICRTZXJ2aWNlTmFtZSB8fCAnJywKICAgICAgICAgICAgJFNlcnZpY2VHZXQye05hbWV9IHx8ICcnLAogICAgICAgICAgICAiVGVzdCAkVGVzdENvdW50OiBTZXJ2aWNlTG9va3VwKCkgLSBsb29rdXAiLAogICAgICAgICk7CgogICAgICAgICMgcmV2ZXJzZSBsb29rdXAgdGhlIHNlcnZpY2UgaWQKICAgICAgICBteSAkU2VydmljZUlETmV3ID0gJFNlbGYtPntTZXJ2aWNlT2JqZWN0fS0+U2VydmljZUxvb2t1cCgKICAgICAgICAgICAgTmFtZSA9PiAkU2VydmljZU5hbWUgfHwgJycsCiAgICAgICAgKTsKCiAgICAgICAgIyByZXZlcnNlIGxvb2t1cCB0ZXN0CiAgICAgICAgJFNlbGYtPklzKAogICAgICAgICAgICAkU2VydmljZUlETmV3IHx8ICcnLAogICAgICAgICAgICAkU2VydmljZUdldDJ7U2VydmljZUlEfSB8fCAnJywKICAgICAgICAgICAgIlRlc3QgJFRlc3RDb3VudDogU2VydmljZUxvb2t1cCgpIC0gcmV2ZXJzZSBsb29rdXAiLAogICAgICAgICk7CiAgICB9CgogICAgJFRlc3RDb3VudCsrOwp9CgojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjCiMgU2VydmljZUxpc3QgdGVzdCAxIChjaGVjayBnZW5lcmFsIGZ1bmN0aW9uYWxpdHkpCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICMKCm15ICVTZXJ2aWNlTGlzdDEgPSAkU2VsZi0+e1NlcnZpY2VPYmplY3R9LT5TZXJ2aWNlTGlzdCgKICAgIFZhbGlkICA9PiAwLAogICAgVXNlcklEID0+IDEsCik7Cm15ICVTZXJ2aWNlTGlzdDFPcmcgPSAlU2VydmljZUxpc3RPcmlnaW5hbDsKClNFUlZJQ0VJRDoKZm9yIG15ICRTZXJ2aWNlSUQgKCBrZXlzICVTZXJ2aWNlTGlzdDFPcmcgKSB7CgogICAgaWYgKCAkU2VydmljZUxpc3QxeyRTZXJ2aWNlSUR9ICYmICRTZXJ2aWNlTGlzdDFPcmd7JFNlcnZpY2VJRH0gZXEgJFNlcnZpY2VMaXN0MXskU2VydmljZUlEfSApIHsKICAgICAgICBkZWxldGUgJFNlcnZpY2VMaXN0MXskU2VydmljZUlEfTsKICAgIH0KICAgIGVsc2UgewogICAgICAgICRTZXJ2aWNlTGlzdDF7RHVtbXl9ID0gMTsKICAgIH0KfQoKbXkgJFNlcnZpY2VMaXN0MUNvdW50ID0gc2NhbGFyIGtleXMgJVNlcnZpY2VMaXN0MTsKCiRTZWxmLT5JcygKICAgICRTZXJ2aWNlTGlzdDFDb3VudCB8fCAnJywKICAgICRBZGRlZENvdW50ZXIgICAgICB8fCAnJywKICAgICJUZXN0ICRUZXN0Q291bnQ6IFNlcnZpY2VMaXN0KCkiLAopOwoKJFRlc3RDb3VudCsrOwoKIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIwojIFNlcnZpY2VMaXN0IHRlc3QgMiAoY2hlY2sgY2FjaGUpCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICMKCm15ICVTZXJ2aWNlTGlzdDIgPSAkU2VsZi0+e1NlcnZpY2VPYmplY3R9LT5TZXJ2aWNlTGlzdCgKICAgIFZhbGlkICA9PiAwLAogICAgVXNlcklEID0+IDEsCik7CgpteSAkU2VydmljZUxpc3QyU2VydmljZUlEID0gJFNlbGYtPntTZXJ2aWNlT2JqZWN0fS0+U2VydmljZUFkZCgKICAgIE5hbWUgICAgPT4gJFNlcnZpY2VOYW1lWzldLAogICAgVmFsaWRJRCA9PiAxLAogICAgVXNlcklEICA9PiAxLAojIC0tLQojIElUU00KIyAtLS0KICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgIENyaXRpY2FsaXR5SUQgPT4gMSwKIyAtLS0KKTsKCm15ICVTZXJ2aWNlTGlzdDJiID0gJFNlbGYtPntTZXJ2aWNlT2JqZWN0fS0+U2VydmljZUxpc3QoCiAgICBWYWxpZCAgPT4gMCwKICAgIFVzZXJJRCA9PiAxLAopOwoKU0VSVklDRUlEOgpmb3IgbXkgJFNlcnZpY2VJRCAoIGtleXMgJVNlcnZpY2VMaXN0MiApIHsKCiAgICBpZiAoICRTZXJ2aWNlTGlzdDJieyRTZXJ2aWNlSUR9ICYmICRTZXJ2aWNlTGlzdDJ7JFNlcnZpY2VJRH0gZXEgJFNlcnZpY2VMaXN0MmJ7JFNlcnZpY2VJRH0gKSB7CiAgICAgICAgZGVsZXRlICRTZXJ2aWNlTGlzdDJieyRTZXJ2aWNlSUR9OwogICAgfQogICAgZWxzZSB7CiAgICAgICAgJFNlcnZpY2VMaXN0MmJ7RHVtbXl9ID0gMTsKICAgIH0KfQoKbXkgQFNlcnZpY2VMaXN0MklEcyAgID0ga2V5cyAlU2VydmljZUxpc3QyYjsKbXkgJFNlcnZpY2VMaXN0MkNvdW50ID0gc2NhbGFyIEBTZXJ2aWNlTGlzdDJJRHM7CgokU2VsZi0+SXMoCiAgICAkU2VydmljZUxpc3QyQ291bnQgfHwgJycsCiAgICAxLAogICAgIlRlc3QgJFRlc3RDb3VudDogU2VydmljZUxpc3QoKSAtIGNoZWNrIG51bWJlciBvZiBzZXJ2aWNlcyIsCik7CgokU2VsZi0+SXMoCiAgICAkU2VydmljZUxpc3QySURzWzBdIHx8ICcnLAogICAgJFNlcnZpY2VMaXN0MlNlcnZpY2VJRCB8fCAnJywKICAgICJUZXN0ICRUZXN0Q291bnQ6IFNlcnZpY2VMaXN0KCkgLSBjaGVjayBpZCBvZiBsYXN0IHNlcnZpY2UiLAopOwoKJFRlc3RDb3VudCsrOwoKIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIwojIFNlcnZpY2VTZWFyY2ggdGVzdCAxIChjaGVjayBnZW5lcmFsIGZ1bmN0aW9uYWxpdHkpCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICMKCm15IEBTZXJ2aWNlU2VhcmNoMVNlYXJjaCA9ICRTZWxmLT57U2VydmljZU9iamVjdH0tPlNlcnZpY2VTZWFyY2goCiAgICBVc2VySUQgPT4gMSwKKTsKCm15ICVTZXJ2aWNlU2VhcmNoMUxpc3QgPSAkU2VsZi0+e1NlcnZpY2VPYmplY3R9LT5TZXJ2aWNlTGlzdCgKICAgIFVzZXJJRCA9PiAxLAopOwoKU0VSVklDRUlEOgpmb3IgbXkgJFNlcnZpY2VJRCAoQFNlcnZpY2VTZWFyY2gxU2VhcmNoKSB7CgogICAgaWYgKCAkU2VydmljZVNlYXJjaDFMaXN0eyRTZXJ2aWNlSUR9ICkgewogICAgICAgIGRlbGV0ZSAkU2VydmljZVNlYXJjaDFMaXN0eyRTZXJ2aWNlSUR9OwogICAgfQogICAgZWxzZSB7CiAgICAgICAgJFNlcnZpY2VTZWFyY2gxTGlzdHtEdW1teX0gPSAxOwogICAgfQp9CgpteSAkU2VydmljZVNlYXJjaDFDb3VudCA9IHNjYWxhciBrZXlzICVTZXJ2aWNlU2VhcmNoMUxpc3Q7CgokU2VsZi0+SXMoCiAgICAkU2VydmljZVNlYXJjaDFDb3VudCwKICAgIDAsCiAgICAiVGVzdCAkVGVzdENvdW50OiBTZXJ2aWNlU2VhcmNoKCkiLAopOwoKJFRlc3RDb3VudCsrOwoKIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIwojIG1ha2UgcHJlcGFyYXRpb25zIGZvciBsYXRlciB0ZXN0cwojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjCgojIGFkZCBzb21lIG5lZWRlZCBzZXJ2aWNlcyBmb3IgbGF0ZXIgdGVzdHMKbXkgQFNlcnZpY2VOYW1lcyA9ICggJFNlcnZpY2VOYW1lWzEwXSAuICdOb3JtYWwnLCAkU2VydmljZU5hbWVbMTBdIC4gJ9SIINO0IM+qIM++JyApOwpteSAlU2VydmljZVNlYXJjaDJTZXJ2aWNlSUQ7CgpteSAkQ291bnRlcjEgPSAwOwpmb3IgbXkgJFNlcnZpY2VOYW1lIChAU2VydmljZU5hbWVzKSB7CgogICAgJFNlcnZpY2VTZWFyY2gyU2VydmljZUlEeyRDb3VudGVyMX0gPSAkU2VsZi0+e1NlcnZpY2VPYmplY3R9LT5TZXJ2aWNlQWRkKAogICAgICAgIE5hbWUgICAgPT4gJFNlcnZpY2VOYW1lLAogICAgICAgIFZhbGlkSUQgPT4gMSwKICAgICAgICBVc2VySUQgID0+IDEsCiMgLS0tCiMgSVRTTQojIC0tLQogICAgICAgIFR5cGVJRCAgICAgICAgPT4gMSwKICAgICAgICBDcml0aWNhbGl0eUlEID0+IDEsCiMgLS0tCiAgICApOwoKICAgICRDb3VudGVyMSsrOwp9CgojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjCiMgU2VydmljZVNlYXJjaCB0ZXN0IDIgKGdlbmVyYWwgbmFtZSBjaGVja3MpCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICMKCm15ICRDb3VudGVyMiA9IDA7CmZvciBteSAkU2VydmljZU5hbWUgKEBTZXJ2aWNlTmFtZXMpIHsKCiAgICBteSBAUHJlcGFyZWROYW1lcyA9ICgKICAgICAgICAkU2VydmljZU5hbWUsCiAgICAgICAgJyonIC4gJFNlcnZpY2VOYW1lLAogICAgICAgICRTZXJ2aWNlTmFtZSAuICcqJywKICAgICAgICAnKicgLiAkU2VydmljZU5hbWUgLiAnKicsCiAgICAgICAgJyoqJyAuICRTZXJ2aWNlTmFtZSwKICAgICAgICAkU2VydmljZU5hbWUgLiAnKionLAogICAgICAgICcqKicgLiAkU2VydmljZU5hbWUgLiAnKionLAogICAgKTsKCiAgICBmb3IgbXkgJFByZXBhcmVkTmFtZSAoQFByZXBhcmVkTmFtZXMpIHsKCiAgICAgICAgbXkgQFNlcnZpY2VMaXN0ID0gJFNlbGYtPntTZXJ2aWNlT2JqZWN0fS0+U2VydmljZVNlYXJjaCgKICAgICAgICAgICAgTmFtZSAgID0+ICRTZXJ2aWNlTmFtZSwKICAgICAgICAgICAgVXNlcklEID0+IDEsCiAgICAgICAgKTsKCiAgICAgICAgJFNlbGYtPklzKAogICAgICAgICAgICAkU2VydmljZUxpc3RbMF0gfHwgJycsCiAgICAgICAgICAgICRTZXJ2aWNlU2VhcmNoMlNlcnZpY2VJRHskQ291bnRlcjJ9IHx8ICcnLAogICAgICAgICAgICAiVGVzdCAkVGVzdENvdW50OiBTZXJ2aWNlU2VhcmNoKCkgLSBnZW5lcmFsIG5hbWUgY2hlY2siLAogICAgICAgICk7CgogICAgICAgICRUZXN0Q291bnQrKzsKICAgIH0KCiAgICAkQ291bnRlcjIrKzsKfQoKMTsK</File>
        <File Location="scripts/test/SLA.t" Permission="644" Encode="Base64"></File>
        <File Location="var/httpd/htdocs/images/Standard/itsm_service.png" Permission="644" Encode="Base64">iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAACXBIWXMAAAsTAAALEwEAmpwYAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAAB6JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAAFEElEQVR42qyVe2xTZRjGn9Oe9vS+tuvaddeuG2MUt0E22IAxMExBN3UzwGSMzEsIzhg0RjHBRI2XP9QEVGRAohiFMCKMWyI4hpvIZZNsMjd62YVu67a2o7uWXs9pz/EPI3LRAYm//758yfO+eb7ne18e7qKyciMEAgEAEBaLbUdV1cZlAFD78lakpBjwoJC3H9TqWFV5efk7HE9hFkukxenpc54vLl4p4wkTSpYV5UtHRh1NDsdgE0EQ4DhuVmE+ACgUCixcmIe8gifrt7/92osmk2l5KBwtDIVZwpiemScQ8Be/ULNu5enGCxGXc/jknIwsuMec9xfW6xPit29/v8o95skjSHmafcgtTklJJEiSRDBEQx2rEYTDUbiczsCi/IIIx7Jys6XLcV8r5ucsrS1eUfJuStp89PQNIs2QBKGAhEQiQjhMIxAIYWDIhfWVVct8fnqZrdd+BMDFWTsmCAK9PV2XxLL4V/gCqSROo0KEYTE84kZb6+WpUCgqoCgxjyRJDDrcaG5pZusPfLWeYejxWYWlUhm/pmZLWVq6qVJISQVSiRh+P409uz/59uB3Xz7b0d7mzFlYtEYuk8HhcEOl0hA6rTYw6nT87rs5E/wvYZ5cHrOgZHXlcb3eIAFHgGU5KOQS0OHpHw2GVHcoNHNUKhH4GDoKuUwCDgQy5i56SyZTPn3LT5IERVF3dry6bFPB2cbjDkokz47XJ1NiSghljBxFRUU5hQWLx8rK1m7LzHwkl+NYsBwwODSIUye/3zU/p0Bss7S3sCyLNIMRScmpcLv/SQrZcLjuhEKh/LW8vLpaRJEKESWAiBJAFzc3a06G6Qg4Dv5AAOEwBZksCqFQiiG7reFK69nzO3d+gbq63WCYCHg83p1WAEBSckbFxKQ3wWa10HK5CFIJBZpmEAwGEQyFIBQKEBsrh31ggLVauzmVJrEUAEwmk4kkSQnLsmBZ9t4cj4+7HJcvnj7R12uxJ6ZmlyQn66DVKEFRfIjFQkRZFm3tZny+4+P6ftvFD58qfVwnFFIzmzfXXhgc9uizMtOFsTpDdefVtmaCIAAAxO1V4rSJJeuq3mzqtbbbjEajNsuUq/Z6Z6ItP5+2JKSYsi+1HNuWlZnUve/r+jNO1xgrogQ8hVzG6fU6Yu+eXT8crj9UabVdg9/vuysiPL5OpY6vBRAPIOuJZ7Y4CpeXnwdAyWSq6gMHG8xnz10ZvXDZwk1Phzma5jifL8KNjE5zZsuQ92hDi3nevOwVt6z4G47j/KGgrx2AD8D46HCfwznSdyYaZfppOtRlNM4tzl2wdIkxVY+evmH81Njsn5oOkBKplKAZUB0dnXT9oX0fAQjwZ/s9ESZsjUaZQQAor9hQUbyy9CWJVKaMRgl8s39/6wfvbV1iNlvZ/EWPFrlcN0AzrFCtjmOCAZ+HfND5Oj4+kT817U8Simbg9zPIz8slBx5bFc7JKWT9vgAmJr3wen3U9f6eNM/4mJLAQ7Cp5vVja0o3VExOeKCP18BoSIh4Jmb43dd6CUoshr2/Z3TnZ2/kANwk74E3AimIoZnovM6rrbRWq8TwiAuN51rJjqtmQq1WIOCbYuz2PmmsJqHgnsebDZZlGXP3lcNjrtGbKk3yKqMxETqdGgq5GNNeP35pafrj1LG9S4KBmzYAkYey4q9toy6OUerWejwjnRXrX/30el9Xh/Xaby0ikcTrueGow/9BjFL7HCWS5P/b3Z8DADulJ5doF3IEAAAAAElFTkSuQmCC</File>
        <File Location="var/packagesetup/ITSMCore.pm" Permission="644" Encode="Base64"></File>
    </Filelist>
    <DatabaseInstall Type="post">
        <TableCreate Type="post" Name="cip_allocate">
            <Column AutoIncrement="true" Name="id" PrimaryKey="true" Required="true" Type="BIGINT"></Column>
            <Column Name="criticality_id" Required="true" Type="INTEGER"></Column>
            <Column Name="impact_id" Required="true" Type="INTEGER"></Column>
            <Column Name="priority_id" Required="true" Type="SMALLINT"></Column>
            <Column Name="create_time" Required="false" Type="DATE"></Column>
            <Column Name="create_by" Required="false" Type="INTEGER"></Column>
            <Column Name="change_time" Required="false" Type="DATE"></Column>
            <Column Name="change_by" Required="false" Type="INTEGER"></Column>
            <ForeignKey ForeignTable="general_catalog">
                <Reference Foreign="id" Local="criticality_id">
                </Reference>
                <Reference Foreign="id" Local="impact_id">
                </Reference>
            </ForeignKey>
            <ForeignKey ForeignTable="ticket_priority">
                <Reference Foreign="id" Local="priority_id">
                </Reference>
            </ForeignKey>
            <ForeignKey ForeignTable="users">
                <Reference Foreign="id" Local="create_by">
                </Reference>
                <Reference Foreign="id" Local="change_by">
                </Reference>
            </ForeignKey>
        </TableCreate>
        <TableCreate Type="post" Name="virtual_fs">
            <Column AutoIncrement="true" Name="id" PrimaryKey="true" Required="true" Type="BIGINT"></Column>
            <Column Name="filename" Required="true" Size="350" Type="VARCHAR"></Column>
            <Column Name="backend" Required="true" Size="60" Type="VARCHAR"></Column>
            <Column Name="backend_key" Required="true" Size="160" Type="VARCHAR"></Column>
            <Column Name="create_time" Required="true" Type="DATE"></Column>
            <Index Name="virtual_fs_filename">
                <IndexColumn Name="filename" Size="350">
                </IndexColumn>
            </Index>
            <Index Name="virtual_fs_backend">
                <IndexColumn Name="backend" Size="60">
                </IndexColumn>
            </Index>
        </TableCreate>
        <TableCreate Type="post" Name="virtual_fs_preferences">
            <Column Name="virtual_fs_id" Required="true" Type="BIGINT"></Column>
            <Column Name="preferences_key" Required="true" Size="150" Type="VARCHAR"></Column>
            <Column Name="preferences_value" Required="false" Size="350" Type="VARCHAR"></Column>
            <Index Name="virtual_fs_preferences_virtual_fs_id">
                <IndexColumn Name="virtual_fs_id">
                </IndexColumn>
            </Index>
            <ForeignKey ForeignTable="virtual_fs">
                <Reference Foreign="id" Local="virtual_fs_id">
                </Reference>
            </ForeignKey>
        </TableCreate>
        <TableCreate Type="post" Name="virtual_fs_db">
            <Column AutoIncrement="true" Name="id" PrimaryKey="true" Required="true" Type="BIGINT"></Column>
            <Column Name="filename" Required="true" Size="350" Type="VARCHAR"></Column>
            <Column Name="content" Required="true" Type="LONGBLOB"></Column>
            <Column Name="create_time" Required="true" Type="DATE"></Column>
            <Index Name="virtual_fs_db_filename">
                <IndexColumn Name="filename" Size="350">
                </IndexColumn>
            </Index>
        </TableCreate>
        <TableAlter Type="post" Name="service">
            <ColumnAdd Name="type_id" Required="false" Type="INTEGER"></ColumnAdd>
            <ColumnAdd Name="criticality_id" Required="false" Type="INTEGER"></ColumnAdd>
        </TableAlter>
        <TableAlter Type="post" Name="sla">
            <ColumnAdd Name="type_id" Required="false" Type="INTEGER"></ColumnAdd>
            <ColumnAdd Name="min_time_bet_incidents" Required="false" Type="INTEGER"></ColumnAdd>
        </TableAlter>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::Criticality</Data>
            <Data Key="name" Type="Quote">1 very low</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::Criticality</Data>
            <Data Key="name" Type="Quote">2 low</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::Criticality</Data>
            <Data Key="name" Type="Quote">3 normal</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::Criticality</Data>
            <Data Key="name" Type="Quote">4 high</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::Criticality</Data>
            <Data Key="name" Type="Quote">5 very high</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::Impact</Data>
            <Data Key="name" Type="Quote">1 very low</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::Impact</Data>
            <Data Key="name" Type="Quote">2 low</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::Impact</Data>
            <Data Key="name" Type="Quote">3 normal</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::Impact</Data>
            <Data Key="name" Type="Quote">4 high</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::Impact</Data>
            <Data Key="name" Type="Quote">5 very high</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::IncidentState</Data>
            <Data Key="name" Type="Quote">Operational</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::IncidentState</Data>
            <Data Key="name" Type="Quote">Warning</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Core::IncidentState</Data>
            <Data Key="name" Type="Quote">Incident</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Service::Type</Data>
            <Data Key="name" Type="Quote">End User Service</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Service::Type</Data>
            <Data Key="name" Type="Quote">Front End</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Service::Type</Data>
            <Data Key="name" Type="Quote">Back End</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Service::Type</Data>
            <Data Key="name" Type="Quote">IT Management</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Service::Type</Data>
            <Data Key="name" Type="Quote">Reporting</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Service::Type</Data>
            <Data Key="name" Type="Quote">IT Operational</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Service::Type</Data>
            <Data Key="name" Type="Quote">Demonstration</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Service::Type</Data>
            <Data Key="name" Type="Quote">Project</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Service::Type</Data>
            <Data Key="name" Type="Quote">Training</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Service::Type</Data>
            <Data Key="name" Type="Quote">Underpinning Contract</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::Service::Type</Data>
            <Data Key="name" Type="Quote">Other</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::SLA::Type</Data>
            <Data Key="name" Type="Quote">Availability</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::SLA::Type</Data>
            <Data Key="name" Type="Quote">Response Time</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::SLA::Type</Data>
            <Data Key="name" Type="Quote">Recovery Time</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::SLA::Type</Data>
            <Data Key="name" Type="Quote">Resolution Rate</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::SLA::Type</Data>
            <Data Key="name" Type="Quote">Transactions</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::SLA::Type</Data>
            <Data Key="name" Type="Quote">Errors</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
        <Insert Type="post" Table="general_catalog">
            <Data Key="general_catalog_class" Type="Quote">ITSM::SLA::Type</Data>
            <Data Key="name" Type="Quote">Other</Data>
            <Data Key="valid_id">1</Data>
            <Data Key="create_time">current_timestamp</Data>
            <Data Key="create_by">1</Data>
            <Data Key="change_time">current_timestamp</Data>
            <Data Key="change_by">1</Data>
        </Insert>
    </DatabaseInstall>
    <DatabaseUpgrade Type="post">
        <TableCreate Type="post" Name="virtual_fs" Version="1.3.74">
            <Column AutoIncrement="true" Name="id" PrimaryKey="true" Required="true" Type="BIGINT"></Column>
            <Column Name="filename" Required="true" Size="350" Type="VARCHAR"></Column>
            <Column Name="backend" Required="true" Size="60" Type="VARCHAR"></Column>
            <Column Name="backend_key" Required="true" Size="160" Type="VARCHAR"></Column>
            <Column Name="create_time" Required="true" Type="DATE"></Column>
            <Index Name="virtual_fs_filename">
                <IndexColumn Name="filename" Size="350">
                </IndexColumn>
            </Index>
            <Index Name="virtual_fs_backend">
                <IndexColumn Name="backend" Size="60">
                </IndexColumn>
            </Index>
        </TableCreate>
        <TableCreate Type="post" Name="virtual_fs_preferences" Version="1.3.74">
            <Column Name="virtual_fs_id" Required="true" Type="BIGINT"></Column>
            <Column Name="preferences_key" Required="true" Size="150" Type="VARCHAR"></Column>
            <Column Name="preferences_value" Required="false" Size="350" Type="VARCHAR"></Column>
            <Index Name="virtual_fs_preferences_virtual_fs_id">
                <IndexColumn Name="virtual_fs_id">
                </IndexColumn>
            </Index>
            <ForeignKey ForeignTable="virtual_fs">
                <Reference Foreign="id" Local="virtual_fs_id">
                </Reference>
            </ForeignKey>
        </TableCreate>
        <TableCreate Type="post" Name="virtual_fs_db" Version="1.3.74">
            <Column AutoIncrement="true" Name="id" PrimaryKey="true" Required="true" Type="BIGINT"></Column>
            <Column Name="filename" Required="true" Size="350" Type="VARCHAR"></Column>
            <Column Name="content" Required="true" Type="LONGBLOB"></Column>
            <Column Name="create_time" Required="true" Type="DATE"></Column>
            <Index Name="virtual_fs_db_filename">
                <IndexColumn Name="filename" Size="350">
                </IndexColumn>
            </Index>
        </TableCreate>
    </DatabaseUpgrade>
    <DatabaseUninstall Type="pre">
        <TableDrop Type="pre" Name="cip_allocate">
        </TableDrop>
        <TableDrop Type="pre" Name="virtual_fs_db">
        </TableDrop>
        <TableDrop Type="pre" Name="virtual_fs_preferences">
        </TableDrop>
        <TableDrop Type="pre" Name="virtual_fs">
        </TableDrop>
        <TableAlter Type="pre" Name="service">
            <ColumnDrop Name="type_id"></ColumnDrop>
            <ColumnDrop Name="criticality_id"></ColumnDrop>
        </TableAlter>
        <TableAlter Type="pre" Name="sla">
            <ColumnDrop Name="type_id"></ColumnDrop>
            <ColumnDrop Name="min_time_bet_incidents"></ColumnDrop>
        </TableAlter>
    </DatabaseUninstall>
</otrs_package>